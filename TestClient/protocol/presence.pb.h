// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: presence.proto

#ifndef PROTOBUF_presence_2eproto__INCLUDED
#define PROTOBUF_presence_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tt_presence {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_presence_2eproto();
void protobuf_AssignDesc_presence_2eproto();
void protobuf_ShutdownFile_presence_2eproto();

class ChgUserInfoRequset;
class ChgUserInfoNotify;
class GetUserStateRequset;
class GetUserStateResponse;
class GetUserStateResponse_UserStateInfo;
class GetUserInfoFromPresence;
class OperUserFriendRequestFromPresence;
class MessageTransferRequest;
class MessageTransferResponse;
class KickUserRequest;

enum UserInfoMessageType {
  MSG_TYPE_STATE = 0,
  MSG_TYPE_NICKNAME = 1,
  MSG_TYPE_SIGNATURE = 2,
  MSG_TYPE_MAX = 3
};
bool UserInfoMessageType_IsValid(int value);
const UserInfoMessageType UserInfoMessageType_MIN = MSG_TYPE_STATE;
const UserInfoMessageType UserInfoMessageType_MAX = MSG_TYPE_MAX;
const int UserInfoMessageType_ARRAYSIZE = UserInfoMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserInfoMessageType_descriptor();
inline const ::std::string& UserInfoMessageType_Name(UserInfoMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserInfoMessageType_descriptor(), value);
}
inline bool UserInfoMessageType_Parse(
    const ::std::string& name, UserInfoMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserInfoMessageType>(
    UserInfoMessageType_descriptor(), name, value);
}
enum UserState {
  USER_STATE_ONLINE = 0,
  USER_STATE_CORBET = 1,
  USER_STATE_LEAVE = 2,
  USER_STATE_BUSY = 3,
  USER_STATE_GAMEING = 4,
  USER_STATE_OFFLINE = 5
};
bool UserState_IsValid(int value);
const UserState UserState_MIN = USER_STATE_ONLINE;
const UserState UserState_MAX = USER_STATE_OFFLINE;
const int UserState_ARRAYSIZE = UserState_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserState_descriptor();
inline const ::std::string& UserState_Name(UserState value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserState_descriptor(), value);
}
inline bool UserState_Parse(
    const ::std::string& name, UserState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserState>(
    UserState_descriptor(), name, value);
}
// ===================================================================

class ChgUserInfoRequset : public ::google::protobuf::Message {
 public:
  ChgUserInfoRequset();
  virtual ~ChgUserInfoRequset();

  ChgUserInfoRequset(const ChgUserInfoRequset& from);

  inline ChgUserInfoRequset& operator=(const ChgUserInfoRequset& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChgUserInfoRequset& default_instance();

  void Swap(ChgUserInfoRequset* other);

  // implements Message ----------------------------------------------

  ChgUserInfoRequset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChgUserInfoRequset& from);
  void MergeFrom(const ChgUserInfoRequset& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string acc_ident = 2;
  inline bool has_acc_ident() const;
  inline void clear_acc_ident();
  static const int kAccIdentFieldNumber = 2;
  inline const ::std::string& acc_ident() const;
  inline void set_acc_ident(const ::std::string& value);
  inline void set_acc_ident(const char* value);
  inline void set_acc_ident(const char* value, size_t size);
  inline ::std::string* mutable_acc_ident();
  inline ::std::string* release_acc_ident();
  inline void set_allocated_acc_ident(::std::string* acc_ident);

  // optional string trans_ident = 3;
  inline bool has_trans_ident() const;
  inline void clear_trans_ident();
  static const int kTransIdentFieldNumber = 3;
  inline const ::std::string& trans_ident() const;
  inline void set_trans_ident(const ::std::string& value);
  inline void set_trans_ident(const char* value);
  inline void set_trans_ident(const char* value, size_t size);
  inline ::std::string* mutable_trans_ident();
  inline ::std::string* release_trans_ident();
  inline void set_allocated_trans_ident(::std::string* trans_ident);

  // optional bool is_camera = 4;
  inline bool has_is_camera() const;
  inline void clear_is_camera();
  static const int kIsCameraFieldNumber = 4;
  inline bool is_camera() const;
  inline void set_is_camera(bool value);

  // optional uint32 ttype = 5;
  inline bool has_ttype() const;
  inline void clear_ttype();
  static const int kTtypeFieldNumber = 5;
  inline ::google::protobuf::uint32 ttype() const;
  inline void set_ttype(::google::protobuf::uint32 value);

  // optional .tt_presence.UserState user_state = 6 [default = USER_STATE_ONLINE];
  inline bool has_user_state() const;
  inline void clear_user_state();
  static const int kUserStateFieldNumber = 6;
  inline ::tt_presence::UserState user_state() const;
  inline void set_user_state(::tt_presence::UserState value);

  // optional .tt_presence.UserInfoMessageType msg_type = 7 [default = MSG_TYPE_STATE];
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 7;
  inline ::tt_presence::UserInfoMessageType msg_type() const;
  inline void set_msg_type(::tt_presence::UserInfoMessageType value);

  // optional string msg_content = 8;
  inline bool has_msg_content() const;
  inline void clear_msg_content();
  static const int kMsgContentFieldNumber = 8;
  inline const ::std::string& msg_content() const;
  inline void set_msg_content(const ::std::string& value);
  inline void set_msg_content(const char* value);
  inline void set_msg_content(const char* value, size_t size);
  inline ::std::string* mutable_msg_content();
  inline ::std::string* release_msg_content();
  inline void set_allocated_msg_content(::std::string* msg_content);

  // @@protoc_insertion_point(class_scope:tt_presence.ChgUserInfoRequset)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_acc_ident();
  inline void clear_has_acc_ident();
  inline void set_has_trans_ident();
  inline void clear_has_trans_ident();
  inline void set_has_is_camera();
  inline void clear_has_is_camera();
  inline void set_has_ttype();
  inline void clear_has_ttype();
  inline void set_has_user_state();
  inline void clear_has_user_state();
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_msg_content();
  inline void clear_has_msg_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* acc_ident_;
  ::std::string* trans_ident_;
  bool is_camera_;
  ::google::protobuf::uint32 ttype_;
  int user_state_;
  int msg_type_;
  ::std::string* msg_content_;
  friend void  protobuf_AddDesc_presence_2eproto();
  friend void protobuf_AssignDesc_presence_2eproto();
  friend void protobuf_ShutdownFile_presence_2eproto();

  void InitAsDefaultInstance();
  static ChgUserInfoRequset* default_instance_;
};
// -------------------------------------------------------------------

class ChgUserInfoNotify : public ::google::protobuf::Message {
 public:
  ChgUserInfoNotify();
  virtual ~ChgUserInfoNotify();

  ChgUserInfoNotify(const ChgUserInfoNotify& from);

  inline ChgUserInfoNotify& operator=(const ChgUserInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChgUserInfoNotify& default_instance();

  void Swap(ChgUserInfoNotify* other);

  // implements Message ----------------------------------------------

  ChgUserInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChgUserInfoNotify& from);
  void MergeFrom(const ChgUserInfoNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional .tt_presence.UserInfoMessageType msg_type = 2 [default = MSG_TYPE_STATE];
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 2;
  inline ::tt_presence::UserInfoMessageType msg_type() const;
  inline void set_msg_type(::tt_presence::UserInfoMessageType value);

  // optional .tt_presence.UserState user_state = 3;
  inline bool has_user_state() const;
  inline void clear_user_state();
  static const int kUserStateFieldNumber = 3;
  inline ::tt_presence::UserState user_state() const;
  inline void set_user_state(::tt_presence::UserState value);

  // optional bool is_camera = 4;
  inline bool has_is_camera() const;
  inline void clear_is_camera();
  static const int kIsCameraFieldNumber = 4;
  inline bool is_camera() const;
  inline void set_is_camera(bool value);

  // optional string trans_ident = 5;
  inline bool has_trans_ident() const;
  inline void clear_trans_ident();
  static const int kTransIdentFieldNumber = 5;
  inline const ::std::string& trans_ident() const;
  inline void set_trans_ident(const ::std::string& value);
  inline void set_trans_ident(const char* value);
  inline void set_trans_ident(const char* value, size_t size);
  inline ::std::string* mutable_trans_ident();
  inline ::std::string* release_trans_ident();
  inline void set_allocated_trans_ident(::std::string* trans_ident);

  // optional uint32 ttype = 6;
  inline bool has_ttype() const;
  inline void clear_ttype();
  static const int kTtypeFieldNumber = 6;
  inline ::google::protobuf::uint32 ttype() const;
  inline void set_ttype(::google::protobuf::uint32 value);

  // optional string msg_content = 7;
  inline bool has_msg_content() const;
  inline void clear_msg_content();
  static const int kMsgContentFieldNumber = 7;
  inline const ::std::string& msg_content() const;
  inline void set_msg_content(const ::std::string& value);
  inline void set_msg_content(const char* value);
  inline void set_msg_content(const char* value, size_t size);
  inline ::std::string* mutable_msg_content();
  inline ::std::string* release_msg_content();
  inline void set_allocated_msg_content(::std::string* msg_content);

  // repeated uint64 user_list = 8;
  inline int user_list_size() const;
  inline void clear_user_list();
  static const int kUserListFieldNumber = 8;
  inline ::google::protobuf::uint64 user_list(int index) const;
  inline void set_user_list(int index, ::google::protobuf::uint64 value);
  inline void add_user_list(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_list();

  // @@protoc_insertion_point(class_scope:tt_presence.ChgUserInfoNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_user_state();
  inline void clear_has_user_state();
  inline void set_has_is_camera();
  inline void clear_has_is_camera();
  inline void set_has_trans_ident();
  inline void clear_has_trans_ident();
  inline void set_has_ttype();
  inline void clear_has_ttype();
  inline void set_has_msg_content();
  inline void clear_has_msg_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  int msg_type_;
  int user_state_;
  ::std::string* trans_ident_;
  bool is_camera_;
  ::google::protobuf::uint32 ttype_;
  ::std::string* msg_content_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_list_;
  friend void  protobuf_AddDesc_presence_2eproto();
  friend void protobuf_AssignDesc_presence_2eproto();
  friend void protobuf_ShutdownFile_presence_2eproto();

  void InitAsDefaultInstance();
  static ChgUserInfoNotify* default_instance_;
};
// -------------------------------------------------------------------

class GetUserStateRequset : public ::google::protobuf::Message {
 public:
  GetUserStateRequset();
  virtual ~GetUserStateRequset();

  GetUserStateRequset(const GetUserStateRequset& from);

  inline GetUserStateRequset& operator=(const GetUserStateRequset& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserStateRequset& default_instance();

  void Swap(GetUserStateRequset* other);

  // implements Message ----------------------------------------------

  GetUserStateRequset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserStateRequset& from);
  void MergeFrom(const GetUserStateRequset& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 user_list = 5;
  inline int user_list_size() const;
  inline void clear_user_list();
  static const int kUserListFieldNumber = 5;
  inline ::google::protobuf::uint64 user_list(int index) const;
  inline void set_user_list(int index, ::google::protobuf::uint64 value);
  inline void add_user_list(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_list();

  // @@protoc_insertion_point(class_scope:tt_presence.GetUserStateRequset)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_list_;
  friend void  protobuf_AddDesc_presence_2eproto();
  friend void protobuf_AssignDesc_presence_2eproto();
  friend void protobuf_ShutdownFile_presence_2eproto();

  void InitAsDefaultInstance();
  static GetUserStateRequset* default_instance_;
};
// -------------------------------------------------------------------

class GetUserStateResponse_UserStateInfo : public ::google::protobuf::Message {
 public:
  GetUserStateResponse_UserStateInfo();
  virtual ~GetUserStateResponse_UserStateInfo();

  GetUserStateResponse_UserStateInfo(const GetUserStateResponse_UserStateInfo& from);

  inline GetUserStateResponse_UserStateInfo& operator=(const GetUserStateResponse_UserStateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserStateResponse_UserStateInfo& default_instance();

  void Swap(GetUserStateResponse_UserStateInfo* other);

  // implements Message ----------------------------------------------

  GetUserStateResponse_UserStateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserStateResponse_UserStateInfo& from);
  void MergeFrom(const GetUserStateResponse_UserStateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional .tt_presence.UserState user_state = 2 [default = USER_STATE_ONLINE];
  inline bool has_user_state() const;
  inline void clear_user_state();
  static const int kUserStateFieldNumber = 2;
  inline ::tt_presence::UserState user_state() const;
  inline void set_user_state(::tt_presence::UserState value);

  // optional string trans_ident = 3;
  inline bool has_trans_ident() const;
  inline void clear_trans_ident();
  static const int kTransIdentFieldNumber = 3;
  inline const ::std::string& trans_ident() const;
  inline void set_trans_ident(const ::std::string& value);
  inline void set_trans_ident(const char* value);
  inline void set_trans_ident(const char* value, size_t size);
  inline ::std::string* mutable_trans_ident();
  inline ::std::string* release_trans_ident();
  inline void set_allocated_trans_ident(::std::string* trans_ident);

  // optional bool is_camera = 4;
  inline bool has_is_camera() const;
  inline void clear_is_camera();
  static const int kIsCameraFieldNumber = 4;
  inline bool is_camera() const;
  inline void set_is_camera(bool value);

  // optional uint32 ttype = 5;
  inline bool has_ttype() const;
  inline void clear_ttype();
  static const int kTtypeFieldNumber = 5;
  inline ::google::protobuf::uint32 ttype() const;
  inline void set_ttype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_presence.GetUserStateResponse.UserStateInfo)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_state();
  inline void clear_has_user_state();
  inline void set_has_trans_ident();
  inline void clear_has_trans_ident();
  inline void set_has_is_camera();
  inline void clear_has_is_camera();
  inline void set_has_ttype();
  inline void clear_has_ttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* trans_ident_;
  int user_state_;
  bool is_camera_;
  ::google::protobuf::uint32 ttype_;
  friend void  protobuf_AddDesc_presence_2eproto();
  friend void protobuf_AssignDesc_presence_2eproto();
  friend void protobuf_ShutdownFile_presence_2eproto();

  void InitAsDefaultInstance();
  static GetUserStateResponse_UserStateInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetUserStateResponse : public ::google::protobuf::Message {
 public:
  GetUserStateResponse();
  virtual ~GetUserStateResponse();

  GetUserStateResponse(const GetUserStateResponse& from);

  inline GetUserStateResponse& operator=(const GetUserStateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserStateResponse& default_instance();

  void Swap(GetUserStateResponse* other);

  // implements Message ----------------------------------------------

  GetUserStateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserStateResponse& from);
  void MergeFrom(const GetUserStateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetUserStateResponse_UserStateInfo UserStateInfo;

  // accessors -------------------------------------------------------

  // repeated .tt_presence.GetUserStateResponse.UserStateInfo user_list = 1;
  inline int user_list_size() const;
  inline void clear_user_list();
  static const int kUserListFieldNumber = 1;
  inline const ::tt_presence::GetUserStateResponse_UserStateInfo& user_list(int index) const;
  inline ::tt_presence::GetUserStateResponse_UserStateInfo* mutable_user_list(int index);
  inline ::tt_presence::GetUserStateResponse_UserStateInfo* add_user_list();
  inline const ::google::protobuf::RepeatedPtrField< ::tt_presence::GetUserStateResponse_UserStateInfo >&
      user_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::tt_presence::GetUserStateResponse_UserStateInfo >*
      mutable_user_list();

  // @@protoc_insertion_point(class_scope:tt_presence.GetUserStateResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::tt_presence::GetUserStateResponse_UserStateInfo > user_list_;
  friend void  protobuf_AddDesc_presence_2eproto();
  friend void protobuf_AssignDesc_presence_2eproto();
  friend void protobuf_ShutdownFile_presence_2eproto();

  void InitAsDefaultInstance();
  static GetUserStateResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetUserInfoFromPresence : public ::google::protobuf::Message {
 public:
  GetUserInfoFromPresence();
  virtual ~GetUserInfoFromPresence();

  GetUserInfoFromPresence(const GetUserInfoFromPresence& from);

  inline GetUserInfoFromPresence& operator=(const GetUserInfoFromPresence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserInfoFromPresence& default_instance();

  void Swap(GetUserInfoFromPresence* other);

  // implements Message ----------------------------------------------

  GetUserInfoFromPresence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserInfoFromPresence& from);
  void MergeFrom(const GetUserInfoFromPresence& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional .tt_presence.UserInfoMessageType msg_type = 2 [default = MSG_TYPE_STATE];
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 2;
  inline ::tt_presence::UserInfoMessageType msg_type() const;
  inline void set_msg_type(::tt_presence::UserInfoMessageType value);

  // optional .tt_presence.UserState user_state = 3;
  inline bool has_user_state() const;
  inline void clear_user_state();
  static const int kUserStateFieldNumber = 3;
  inline ::tt_presence::UserState user_state() const;
  inline void set_user_state(::tt_presence::UserState value);

  // optional bool is_camera = 4;
  inline bool has_is_camera() const;
  inline void clear_is_camera();
  static const int kIsCameraFieldNumber = 4;
  inline bool is_camera() const;
  inline void set_is_camera(bool value);

  // optional uint32 ttype = 5;
  inline bool has_ttype() const;
  inline void clear_ttype();
  static const int kTtypeFieldNumber = 5;
  inline ::google::protobuf::uint32 ttype() const;
  inline void set_ttype(::google::protobuf::uint32 value);

  // optional string trans_ident = 6;
  inline bool has_trans_ident() const;
  inline void clear_trans_ident();
  static const int kTransIdentFieldNumber = 6;
  inline const ::std::string& trans_ident() const;
  inline void set_trans_ident(const ::std::string& value);
  inline void set_trans_ident(const char* value);
  inline void set_trans_ident(const char* value, size_t size);
  inline ::std::string* mutable_trans_ident();
  inline ::std::string* release_trans_ident();
  inline void set_allocated_trans_ident(::std::string* trans_ident);

  // optional string msg_content = 7;
  inline bool has_msg_content() const;
  inline void clear_msg_content();
  static const int kMsgContentFieldNumber = 7;
  inline const ::std::string& msg_content() const;
  inline void set_msg_content(const ::std::string& value);
  inline void set_msg_content(const char* value);
  inline void set_msg_content(const char* value, size_t size);
  inline ::std::string* mutable_msg_content();
  inline ::std::string* release_msg_content();
  inline void set_allocated_msg_content(::std::string* msg_content);

  // repeated uint64 user_list = 8;
  inline int user_list_size() const;
  inline void clear_user_list();
  static const int kUserListFieldNumber = 8;
  inline ::google::protobuf::uint64 user_list(int index) const;
  inline void set_user_list(int index, ::google::protobuf::uint64 value);
  inline void add_user_list(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_list();

  // @@protoc_insertion_point(class_scope:tt_presence.GetUserInfoFromPresence)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_user_state();
  inline void clear_has_user_state();
  inline void set_has_is_camera();
  inline void clear_has_is_camera();
  inline void set_has_ttype();
  inline void clear_has_ttype();
  inline void set_has_trans_ident();
  inline void clear_has_trans_ident();
  inline void set_has_msg_content();
  inline void clear_has_msg_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  int msg_type_;
  int user_state_;
  bool is_camera_;
  ::google::protobuf::uint32 ttype_;
  ::std::string* trans_ident_;
  ::std::string* msg_content_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_list_;
  friend void  protobuf_AddDesc_presence_2eproto();
  friend void protobuf_AssignDesc_presence_2eproto();
  friend void protobuf_ShutdownFile_presence_2eproto();

  void InitAsDefaultInstance();
  static GetUserInfoFromPresence* default_instance_;
};
// -------------------------------------------------------------------

class OperUserFriendRequestFromPresence : public ::google::protobuf::Message {
 public:
  OperUserFriendRequestFromPresence();
  virtual ~OperUserFriendRequestFromPresence();

  OperUserFriendRequestFromPresence(const OperUserFriendRequestFromPresence& from);

  inline OperUserFriendRequestFromPresence& operator=(const OperUserFriendRequestFromPresence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperUserFriendRequestFromPresence& default_instance();

  void Swap(OperUserFriendRequestFromPresence* other);

  // implements Message ----------------------------------------------

  OperUserFriendRequestFromPresence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperUserFriendRequestFromPresence& from);
  void MergeFrom(const OperUserFriendRequestFromPresence& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 from_id = 1;
  inline bool has_from_id() const;
  inline void clear_from_id();
  static const int kFromIdFieldNumber = 1;
  inline ::google::protobuf::uint64 from_id() const;
  inline void set_from_id(::google::protobuf::uint64 value);

  // required uint64 to_id = 2;
  inline bool has_to_id() const;
  inline void clear_to_id();
  static const int kToIdFieldNumber = 2;
  inline ::google::protobuf::uint64 to_id() const;
  inline void set_to_id(::google::protobuf::uint64 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required string content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:tt_presence.OperUserFriendRequestFromPresence)
 private:
  inline void set_has_from_id();
  inline void clear_has_from_id();
  inline void set_has_to_id();
  inline void clear_has_to_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 from_id_;
  ::google::protobuf::uint64 to_id_;
  ::std::string* content_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_presence_2eproto();
  friend void protobuf_AssignDesc_presence_2eproto();
  friend void protobuf_ShutdownFile_presence_2eproto();

  void InitAsDefaultInstance();
  static OperUserFriendRequestFromPresence* default_instance_;
};
// -------------------------------------------------------------------

class MessageTransferRequest : public ::google::protobuf::Message {
 public:
  MessageTransferRequest();
  virtual ~MessageTransferRequest();

  MessageTransferRequest(const MessageTransferRequest& from);

  inline MessageTransferRequest& operator=(const MessageTransferRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageTransferRequest& default_instance();

  void Swap(MessageTransferRequest* other);

  // implements Message ----------------------------------------------

  MessageTransferRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageTransferRequest& from);
  void MergeFrom(const MessageTransferRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 from_id = 1;
  inline bool has_from_id() const;
  inline void clear_from_id();
  static const int kFromIdFieldNumber = 1;
  inline ::google::protobuf::uint64 from_id() const;
  inline void set_from_id(::google::protobuf::uint64 value);

  // required uint64 to_id = 2;
  inline bool has_to_id() const;
  inline void clear_to_id();
  static const int kToIdFieldNumber = 2;
  inline ::google::protobuf::uint64 to_id() const;
  inline void set_to_id(::google::protobuf::uint64 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required string content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:tt_presence.MessageTransferRequest)
 private:
  inline void set_has_from_id();
  inline void clear_has_from_id();
  inline void set_has_to_id();
  inline void clear_has_to_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 from_id_;
  ::google::protobuf::uint64 to_id_;
  ::std::string* content_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_presence_2eproto();
  friend void protobuf_AssignDesc_presence_2eproto();
  friend void protobuf_ShutdownFile_presence_2eproto();

  void InitAsDefaultInstance();
  static MessageTransferRequest* default_instance_;
};
// -------------------------------------------------------------------

class MessageTransferResponse : public ::google::protobuf::Message {
 public:
  MessageTransferResponse();
  virtual ~MessageTransferResponse();

  MessageTransferResponse(const MessageTransferResponse& from);

  inline MessageTransferResponse& operator=(const MessageTransferResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageTransferResponse& default_instance();

  void Swap(MessageTransferResponse* other);

  // implements Message ----------------------------------------------

  MessageTransferResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageTransferResponse& from);
  void MergeFrom(const MessageTransferResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool online = 1;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 1;
  inline bool online() const;
  inline void set_online(bool value);

  // @@protoc_insertion_point(class_scope:tt_presence.MessageTransferResponse)
 private:
  inline void set_has_online();
  inline void clear_has_online();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool online_;
  friend void  protobuf_AddDesc_presence_2eproto();
  friend void protobuf_AssignDesc_presence_2eproto();
  friend void protobuf_ShutdownFile_presence_2eproto();

  void InitAsDefaultInstance();
  static MessageTransferResponse* default_instance_;
};
// -------------------------------------------------------------------

class KickUserRequest : public ::google::protobuf::Message {
 public:
  KickUserRequest();
  virtual ~KickUserRequest();

  KickUserRequest(const KickUserRequest& from);

  inline KickUserRequest& operator=(const KickUserRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickUserRequest& default_instance();

  void Swap(KickUserRequest* other);

  // implements Message ----------------------------------------------

  KickUserRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickUserRequest& from);
  void MergeFrom(const KickUserRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string acc_ident = 2;
  inline bool has_acc_ident() const;
  inline void clear_acc_ident();
  static const int kAccIdentFieldNumber = 2;
  inline const ::std::string& acc_ident() const;
  inline void set_acc_ident(const ::std::string& value);
  inline void set_acc_ident(const char* value);
  inline void set_acc_ident(const char* value, size_t size);
  inline ::std::string* mutable_acc_ident();
  inline ::std::string* release_acc_ident();
  inline void set_allocated_acc_ident(::std::string* acc_ident);

  // optional uint32 ttype = 3;
  inline bool has_ttype() const;
  inline void clear_ttype();
  static const int kTtypeFieldNumber = 3;
  inline ::google::protobuf::uint32 ttype() const;
  inline void set_ttype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_presence.KickUserRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_acc_ident();
  inline void clear_has_acc_ident();
  inline void set_has_ttype();
  inline void clear_has_ttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* acc_ident_;
  ::google::protobuf::uint32 ttype_;
  friend void  protobuf_AddDesc_presence_2eproto();
  friend void protobuf_AssignDesc_presence_2eproto();
  friend void protobuf_ShutdownFile_presence_2eproto();

  void InitAsDefaultInstance();
  static KickUserRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// ChgUserInfoRequset

// required uint64 user_id = 1;
inline bool ChgUserInfoRequset::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChgUserInfoRequset::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChgUserInfoRequset::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChgUserInfoRequset::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 ChgUserInfoRequset::user_id() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoRequset.user_id)
  return user_id_;
}
inline void ChgUserInfoRequset::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoRequset.user_id)
}

// optional string acc_ident = 2;
inline bool ChgUserInfoRequset::has_acc_ident() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChgUserInfoRequset::set_has_acc_ident() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChgUserInfoRequset::clear_has_acc_ident() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChgUserInfoRequset::clear_acc_ident() {
  if (acc_ident_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    acc_ident_->clear();
  }
  clear_has_acc_ident();
}
inline const ::std::string& ChgUserInfoRequset::acc_ident() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoRequset.acc_ident)
  return *acc_ident_;
}
inline void ChgUserInfoRequset::set_acc_ident(const ::std::string& value) {
  set_has_acc_ident();
  if (acc_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    acc_ident_ = new ::std::string;
  }
  acc_ident_->assign(value);
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoRequset.acc_ident)
}
inline void ChgUserInfoRequset::set_acc_ident(const char* value) {
  set_has_acc_ident();
  if (acc_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    acc_ident_ = new ::std::string;
  }
  acc_ident_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_presence.ChgUserInfoRequset.acc_ident)
}
inline void ChgUserInfoRequset::set_acc_ident(const char* value, size_t size) {
  set_has_acc_ident();
  if (acc_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    acc_ident_ = new ::std::string;
  }
  acc_ident_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_presence.ChgUserInfoRequset.acc_ident)
}
inline ::std::string* ChgUserInfoRequset::mutable_acc_ident() {
  set_has_acc_ident();
  if (acc_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    acc_ident_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_presence.ChgUserInfoRequset.acc_ident)
  return acc_ident_;
}
inline ::std::string* ChgUserInfoRequset::release_acc_ident() {
  clear_has_acc_ident();
  if (acc_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = acc_ident_;
    acc_ident_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChgUserInfoRequset::set_allocated_acc_ident(::std::string* acc_ident) {
  if (acc_ident_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete acc_ident_;
  }
  if (acc_ident) {
    set_has_acc_ident();
    acc_ident_ = acc_ident;
  } else {
    clear_has_acc_ident();
    acc_ident_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_presence.ChgUserInfoRequset.acc_ident)
}

// optional string trans_ident = 3;
inline bool ChgUserInfoRequset::has_trans_ident() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChgUserInfoRequset::set_has_trans_ident() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChgUserInfoRequset::clear_has_trans_ident() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChgUserInfoRequset::clear_trans_ident() {
  if (trans_ident_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_->clear();
  }
  clear_has_trans_ident();
}
inline const ::std::string& ChgUserInfoRequset::trans_ident() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoRequset.trans_ident)
  return *trans_ident_;
}
inline void ChgUserInfoRequset::set_trans_ident(const ::std::string& value) {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  trans_ident_->assign(value);
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoRequset.trans_ident)
}
inline void ChgUserInfoRequset::set_trans_ident(const char* value) {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  trans_ident_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_presence.ChgUserInfoRequset.trans_ident)
}
inline void ChgUserInfoRequset::set_trans_ident(const char* value, size_t size) {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  trans_ident_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_presence.ChgUserInfoRequset.trans_ident)
}
inline ::std::string* ChgUserInfoRequset::mutable_trans_ident() {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_presence.ChgUserInfoRequset.trans_ident)
  return trans_ident_;
}
inline ::std::string* ChgUserInfoRequset::release_trans_ident() {
  clear_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = trans_ident_;
    trans_ident_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChgUserInfoRequset::set_allocated_trans_ident(::std::string* trans_ident) {
  if (trans_ident_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete trans_ident_;
  }
  if (trans_ident) {
    set_has_trans_ident();
    trans_ident_ = trans_ident;
  } else {
    clear_has_trans_ident();
    trans_ident_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_presence.ChgUserInfoRequset.trans_ident)
}

// optional bool is_camera = 4;
inline bool ChgUserInfoRequset::has_is_camera() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChgUserInfoRequset::set_has_is_camera() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChgUserInfoRequset::clear_has_is_camera() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChgUserInfoRequset::clear_is_camera() {
  is_camera_ = false;
  clear_has_is_camera();
}
inline bool ChgUserInfoRequset::is_camera() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoRequset.is_camera)
  return is_camera_;
}
inline void ChgUserInfoRequset::set_is_camera(bool value) {
  set_has_is_camera();
  is_camera_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoRequset.is_camera)
}

// optional uint32 ttype = 5;
inline bool ChgUserInfoRequset::has_ttype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChgUserInfoRequset::set_has_ttype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChgUserInfoRequset::clear_has_ttype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChgUserInfoRequset::clear_ttype() {
  ttype_ = 0u;
  clear_has_ttype();
}
inline ::google::protobuf::uint32 ChgUserInfoRequset::ttype() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoRequset.ttype)
  return ttype_;
}
inline void ChgUserInfoRequset::set_ttype(::google::protobuf::uint32 value) {
  set_has_ttype();
  ttype_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoRequset.ttype)
}

// optional .tt_presence.UserState user_state = 6 [default = USER_STATE_ONLINE];
inline bool ChgUserInfoRequset::has_user_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChgUserInfoRequset::set_has_user_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChgUserInfoRequset::clear_has_user_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChgUserInfoRequset::clear_user_state() {
  user_state_ = 0;
  clear_has_user_state();
}
inline ::tt_presence::UserState ChgUserInfoRequset::user_state() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoRequset.user_state)
  return static_cast< ::tt_presence::UserState >(user_state_);
}
inline void ChgUserInfoRequset::set_user_state(::tt_presence::UserState value) {
  assert(::tt_presence::UserState_IsValid(value));
  set_has_user_state();
  user_state_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoRequset.user_state)
}

// optional .tt_presence.UserInfoMessageType msg_type = 7 [default = MSG_TYPE_STATE];
inline bool ChgUserInfoRequset::has_msg_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ChgUserInfoRequset::set_has_msg_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ChgUserInfoRequset::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ChgUserInfoRequset::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::tt_presence::UserInfoMessageType ChgUserInfoRequset::msg_type() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoRequset.msg_type)
  return static_cast< ::tt_presence::UserInfoMessageType >(msg_type_);
}
inline void ChgUserInfoRequset::set_msg_type(::tt_presence::UserInfoMessageType value) {
  assert(::tt_presence::UserInfoMessageType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoRequset.msg_type)
}

// optional string msg_content = 8;
inline bool ChgUserInfoRequset::has_msg_content() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ChgUserInfoRequset::set_has_msg_content() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ChgUserInfoRequset::clear_has_msg_content() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ChgUserInfoRequset::clear_msg_content() {
  if (msg_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_->clear();
  }
  clear_has_msg_content();
}
inline const ::std::string& ChgUserInfoRequset::msg_content() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoRequset.msg_content)
  return *msg_content_;
}
inline void ChgUserInfoRequset::set_msg_content(const ::std::string& value) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(value);
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoRequset.msg_content)
}
inline void ChgUserInfoRequset::set_msg_content(const char* value) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_presence.ChgUserInfoRequset.msg_content)
}
inline void ChgUserInfoRequset::set_msg_content(const char* value, size_t size) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_presence.ChgUserInfoRequset.msg_content)
}
inline ::std::string* ChgUserInfoRequset::mutable_msg_content() {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_presence.ChgUserInfoRequset.msg_content)
  return msg_content_;
}
inline ::std::string* ChgUserInfoRequset::release_msg_content() {
  clear_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_content_;
    msg_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChgUserInfoRequset::set_allocated_msg_content(::std::string* msg_content) {
  if (msg_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_content_;
  }
  if (msg_content) {
    set_has_msg_content();
    msg_content_ = msg_content;
  } else {
    clear_has_msg_content();
    msg_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_presence.ChgUserInfoRequset.msg_content)
}

// -------------------------------------------------------------------

// ChgUserInfoNotify

// required uint64 user_id = 1;
inline bool ChgUserInfoNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChgUserInfoNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChgUserInfoNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChgUserInfoNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 ChgUserInfoNotify::user_id() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoNotify.user_id)
  return user_id_;
}
inline void ChgUserInfoNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoNotify.user_id)
}

// optional .tt_presence.UserInfoMessageType msg_type = 2 [default = MSG_TYPE_STATE];
inline bool ChgUserInfoNotify::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChgUserInfoNotify::set_has_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChgUserInfoNotify::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChgUserInfoNotify::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::tt_presence::UserInfoMessageType ChgUserInfoNotify::msg_type() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoNotify.msg_type)
  return static_cast< ::tt_presence::UserInfoMessageType >(msg_type_);
}
inline void ChgUserInfoNotify::set_msg_type(::tt_presence::UserInfoMessageType value) {
  assert(::tt_presence::UserInfoMessageType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoNotify.msg_type)
}

// optional .tt_presence.UserState user_state = 3;
inline bool ChgUserInfoNotify::has_user_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChgUserInfoNotify::set_has_user_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChgUserInfoNotify::clear_has_user_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChgUserInfoNotify::clear_user_state() {
  user_state_ = 0;
  clear_has_user_state();
}
inline ::tt_presence::UserState ChgUserInfoNotify::user_state() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoNotify.user_state)
  return static_cast< ::tt_presence::UserState >(user_state_);
}
inline void ChgUserInfoNotify::set_user_state(::tt_presence::UserState value) {
  assert(::tt_presence::UserState_IsValid(value));
  set_has_user_state();
  user_state_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoNotify.user_state)
}

// optional bool is_camera = 4;
inline bool ChgUserInfoNotify::has_is_camera() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChgUserInfoNotify::set_has_is_camera() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChgUserInfoNotify::clear_has_is_camera() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChgUserInfoNotify::clear_is_camera() {
  is_camera_ = false;
  clear_has_is_camera();
}
inline bool ChgUserInfoNotify::is_camera() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoNotify.is_camera)
  return is_camera_;
}
inline void ChgUserInfoNotify::set_is_camera(bool value) {
  set_has_is_camera();
  is_camera_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoNotify.is_camera)
}

// optional string trans_ident = 5;
inline bool ChgUserInfoNotify::has_trans_ident() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChgUserInfoNotify::set_has_trans_ident() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChgUserInfoNotify::clear_has_trans_ident() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChgUserInfoNotify::clear_trans_ident() {
  if (trans_ident_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_->clear();
  }
  clear_has_trans_ident();
}
inline const ::std::string& ChgUserInfoNotify::trans_ident() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoNotify.trans_ident)
  return *trans_ident_;
}
inline void ChgUserInfoNotify::set_trans_ident(const ::std::string& value) {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  trans_ident_->assign(value);
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoNotify.trans_ident)
}
inline void ChgUserInfoNotify::set_trans_ident(const char* value) {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  trans_ident_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_presence.ChgUserInfoNotify.trans_ident)
}
inline void ChgUserInfoNotify::set_trans_ident(const char* value, size_t size) {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  trans_ident_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_presence.ChgUserInfoNotify.trans_ident)
}
inline ::std::string* ChgUserInfoNotify::mutable_trans_ident() {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_presence.ChgUserInfoNotify.trans_ident)
  return trans_ident_;
}
inline ::std::string* ChgUserInfoNotify::release_trans_ident() {
  clear_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = trans_ident_;
    trans_ident_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChgUserInfoNotify::set_allocated_trans_ident(::std::string* trans_ident) {
  if (trans_ident_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete trans_ident_;
  }
  if (trans_ident) {
    set_has_trans_ident();
    trans_ident_ = trans_ident;
  } else {
    clear_has_trans_ident();
    trans_ident_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_presence.ChgUserInfoNotify.trans_ident)
}

// optional uint32 ttype = 6;
inline bool ChgUserInfoNotify::has_ttype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChgUserInfoNotify::set_has_ttype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChgUserInfoNotify::clear_has_ttype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChgUserInfoNotify::clear_ttype() {
  ttype_ = 0u;
  clear_has_ttype();
}
inline ::google::protobuf::uint32 ChgUserInfoNotify::ttype() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoNotify.ttype)
  return ttype_;
}
inline void ChgUserInfoNotify::set_ttype(::google::protobuf::uint32 value) {
  set_has_ttype();
  ttype_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoNotify.ttype)
}

// optional string msg_content = 7;
inline bool ChgUserInfoNotify::has_msg_content() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ChgUserInfoNotify::set_has_msg_content() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ChgUserInfoNotify::clear_has_msg_content() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ChgUserInfoNotify::clear_msg_content() {
  if (msg_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_->clear();
  }
  clear_has_msg_content();
}
inline const ::std::string& ChgUserInfoNotify::msg_content() const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoNotify.msg_content)
  return *msg_content_;
}
inline void ChgUserInfoNotify::set_msg_content(const ::std::string& value) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(value);
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoNotify.msg_content)
}
inline void ChgUserInfoNotify::set_msg_content(const char* value) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_presence.ChgUserInfoNotify.msg_content)
}
inline void ChgUserInfoNotify::set_msg_content(const char* value, size_t size) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_presence.ChgUserInfoNotify.msg_content)
}
inline ::std::string* ChgUserInfoNotify::mutable_msg_content() {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_presence.ChgUserInfoNotify.msg_content)
  return msg_content_;
}
inline ::std::string* ChgUserInfoNotify::release_msg_content() {
  clear_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_content_;
    msg_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChgUserInfoNotify::set_allocated_msg_content(::std::string* msg_content) {
  if (msg_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_content_;
  }
  if (msg_content) {
    set_has_msg_content();
    msg_content_ = msg_content;
  } else {
    clear_has_msg_content();
    msg_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_presence.ChgUserInfoNotify.msg_content)
}

// repeated uint64 user_list = 8;
inline int ChgUserInfoNotify::user_list_size() const {
  return user_list_.size();
}
inline void ChgUserInfoNotify::clear_user_list() {
  user_list_.Clear();
}
inline ::google::protobuf::uint64 ChgUserInfoNotify::user_list(int index) const {
  // @@protoc_insertion_point(field_get:tt_presence.ChgUserInfoNotify.user_list)
  return user_list_.Get(index);
}
inline void ChgUserInfoNotify::set_user_list(int index, ::google::protobuf::uint64 value) {
  user_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:tt_presence.ChgUserInfoNotify.user_list)
}
inline void ChgUserInfoNotify::add_user_list(::google::protobuf::uint64 value) {
  user_list_.Add(value);
  // @@protoc_insertion_point(field_add:tt_presence.ChgUserInfoNotify.user_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ChgUserInfoNotify::user_list() const {
  // @@protoc_insertion_point(field_list:tt_presence.ChgUserInfoNotify.user_list)
  return user_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ChgUserInfoNotify::mutable_user_list() {
  // @@protoc_insertion_point(field_mutable_list:tt_presence.ChgUserInfoNotify.user_list)
  return &user_list_;
}

// -------------------------------------------------------------------

// GetUserStateRequset

// repeated uint64 user_list = 5;
inline int GetUserStateRequset::user_list_size() const {
  return user_list_.size();
}
inline void GetUserStateRequset::clear_user_list() {
  user_list_.Clear();
}
inline ::google::protobuf::uint64 GetUserStateRequset::user_list(int index) const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserStateRequset.user_list)
  return user_list_.Get(index);
}
inline void GetUserStateRequset::set_user_list(int index, ::google::protobuf::uint64 value) {
  user_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:tt_presence.GetUserStateRequset.user_list)
}
inline void GetUserStateRequset::add_user_list(::google::protobuf::uint64 value) {
  user_list_.Add(value);
  // @@protoc_insertion_point(field_add:tt_presence.GetUserStateRequset.user_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetUserStateRequset::user_list() const {
  // @@protoc_insertion_point(field_list:tt_presence.GetUserStateRequset.user_list)
  return user_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetUserStateRequset::mutable_user_list() {
  // @@protoc_insertion_point(field_mutable_list:tt_presence.GetUserStateRequset.user_list)
  return &user_list_;
}

// -------------------------------------------------------------------

// GetUserStateResponse_UserStateInfo

// required uint64 user_id = 1;
inline bool GetUserStateResponse_UserStateInfo::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserStateResponse_UserStateInfo::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserStateResponse_UserStateInfo::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserStateResponse_UserStateInfo::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetUserStateResponse_UserStateInfo::user_id() const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserStateResponse.UserStateInfo.user_id)
  return user_id_;
}
inline void GetUserStateResponse_UserStateInfo::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.GetUserStateResponse.UserStateInfo.user_id)
}

// optional .tt_presence.UserState user_state = 2 [default = USER_STATE_ONLINE];
inline bool GetUserStateResponse_UserStateInfo::has_user_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserStateResponse_UserStateInfo::set_has_user_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserStateResponse_UserStateInfo::clear_has_user_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserStateResponse_UserStateInfo::clear_user_state() {
  user_state_ = 0;
  clear_has_user_state();
}
inline ::tt_presence::UserState GetUserStateResponse_UserStateInfo::user_state() const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserStateResponse.UserStateInfo.user_state)
  return static_cast< ::tt_presence::UserState >(user_state_);
}
inline void GetUserStateResponse_UserStateInfo::set_user_state(::tt_presence::UserState value) {
  assert(::tt_presence::UserState_IsValid(value));
  set_has_user_state();
  user_state_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.GetUserStateResponse.UserStateInfo.user_state)
}

// optional string trans_ident = 3;
inline bool GetUserStateResponse_UserStateInfo::has_trans_ident() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserStateResponse_UserStateInfo::set_has_trans_ident() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserStateResponse_UserStateInfo::clear_has_trans_ident() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserStateResponse_UserStateInfo::clear_trans_ident() {
  if (trans_ident_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_->clear();
  }
  clear_has_trans_ident();
}
inline const ::std::string& GetUserStateResponse_UserStateInfo::trans_ident() const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserStateResponse.UserStateInfo.trans_ident)
  return *trans_ident_;
}
inline void GetUserStateResponse_UserStateInfo::set_trans_ident(const ::std::string& value) {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  trans_ident_->assign(value);
  // @@protoc_insertion_point(field_set:tt_presence.GetUserStateResponse.UserStateInfo.trans_ident)
}
inline void GetUserStateResponse_UserStateInfo::set_trans_ident(const char* value) {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  trans_ident_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_presence.GetUserStateResponse.UserStateInfo.trans_ident)
}
inline void GetUserStateResponse_UserStateInfo::set_trans_ident(const char* value, size_t size) {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  trans_ident_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_presence.GetUserStateResponse.UserStateInfo.trans_ident)
}
inline ::std::string* GetUserStateResponse_UserStateInfo::mutable_trans_ident() {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_presence.GetUserStateResponse.UserStateInfo.trans_ident)
  return trans_ident_;
}
inline ::std::string* GetUserStateResponse_UserStateInfo::release_trans_ident() {
  clear_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = trans_ident_;
    trans_ident_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserStateResponse_UserStateInfo::set_allocated_trans_ident(::std::string* trans_ident) {
  if (trans_ident_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete trans_ident_;
  }
  if (trans_ident) {
    set_has_trans_ident();
    trans_ident_ = trans_ident;
  } else {
    clear_has_trans_ident();
    trans_ident_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_presence.GetUserStateResponse.UserStateInfo.trans_ident)
}

// optional bool is_camera = 4;
inline bool GetUserStateResponse_UserStateInfo::has_is_camera() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetUserStateResponse_UserStateInfo::set_has_is_camera() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetUserStateResponse_UserStateInfo::clear_has_is_camera() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetUserStateResponse_UserStateInfo::clear_is_camera() {
  is_camera_ = false;
  clear_has_is_camera();
}
inline bool GetUserStateResponse_UserStateInfo::is_camera() const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserStateResponse.UserStateInfo.is_camera)
  return is_camera_;
}
inline void GetUserStateResponse_UserStateInfo::set_is_camera(bool value) {
  set_has_is_camera();
  is_camera_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.GetUserStateResponse.UserStateInfo.is_camera)
}

// optional uint32 ttype = 5;
inline bool GetUserStateResponse_UserStateInfo::has_ttype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetUserStateResponse_UserStateInfo::set_has_ttype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetUserStateResponse_UserStateInfo::clear_has_ttype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetUserStateResponse_UserStateInfo::clear_ttype() {
  ttype_ = 0u;
  clear_has_ttype();
}
inline ::google::protobuf::uint32 GetUserStateResponse_UserStateInfo::ttype() const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserStateResponse.UserStateInfo.ttype)
  return ttype_;
}
inline void GetUserStateResponse_UserStateInfo::set_ttype(::google::protobuf::uint32 value) {
  set_has_ttype();
  ttype_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.GetUserStateResponse.UserStateInfo.ttype)
}

// -------------------------------------------------------------------

// GetUserStateResponse

// repeated .tt_presence.GetUserStateResponse.UserStateInfo user_list = 1;
inline int GetUserStateResponse::user_list_size() const {
  return user_list_.size();
}
inline void GetUserStateResponse::clear_user_list() {
  user_list_.Clear();
}
inline const ::tt_presence::GetUserStateResponse_UserStateInfo& GetUserStateResponse::user_list(int index) const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserStateResponse.user_list)
  return user_list_.Get(index);
}
inline ::tt_presence::GetUserStateResponse_UserStateInfo* GetUserStateResponse::mutable_user_list(int index) {
  // @@protoc_insertion_point(field_mutable:tt_presence.GetUserStateResponse.user_list)
  return user_list_.Mutable(index);
}
inline ::tt_presence::GetUserStateResponse_UserStateInfo* GetUserStateResponse::add_user_list() {
  // @@protoc_insertion_point(field_add:tt_presence.GetUserStateResponse.user_list)
  return user_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tt_presence::GetUserStateResponse_UserStateInfo >&
GetUserStateResponse::user_list() const {
  // @@protoc_insertion_point(field_list:tt_presence.GetUserStateResponse.user_list)
  return user_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::tt_presence::GetUserStateResponse_UserStateInfo >*
GetUserStateResponse::mutable_user_list() {
  // @@protoc_insertion_point(field_mutable_list:tt_presence.GetUserStateResponse.user_list)
  return &user_list_;
}

// -------------------------------------------------------------------

// GetUserInfoFromPresence

// required uint64 user_id = 1;
inline bool GetUserInfoFromPresence::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserInfoFromPresence::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserInfoFromPresence::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserInfoFromPresence::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetUserInfoFromPresence::user_id() const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserInfoFromPresence.user_id)
  return user_id_;
}
inline void GetUserInfoFromPresence::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.GetUserInfoFromPresence.user_id)
}

// optional .tt_presence.UserInfoMessageType msg_type = 2 [default = MSG_TYPE_STATE];
inline bool GetUserInfoFromPresence::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserInfoFromPresence::set_has_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserInfoFromPresence::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserInfoFromPresence::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::tt_presence::UserInfoMessageType GetUserInfoFromPresence::msg_type() const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserInfoFromPresence.msg_type)
  return static_cast< ::tt_presence::UserInfoMessageType >(msg_type_);
}
inline void GetUserInfoFromPresence::set_msg_type(::tt_presence::UserInfoMessageType value) {
  assert(::tt_presence::UserInfoMessageType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.GetUserInfoFromPresence.msg_type)
}

// optional .tt_presence.UserState user_state = 3;
inline bool GetUserInfoFromPresence::has_user_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserInfoFromPresence::set_has_user_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserInfoFromPresence::clear_has_user_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserInfoFromPresence::clear_user_state() {
  user_state_ = 0;
  clear_has_user_state();
}
inline ::tt_presence::UserState GetUserInfoFromPresence::user_state() const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserInfoFromPresence.user_state)
  return static_cast< ::tt_presence::UserState >(user_state_);
}
inline void GetUserInfoFromPresence::set_user_state(::tt_presence::UserState value) {
  assert(::tt_presence::UserState_IsValid(value));
  set_has_user_state();
  user_state_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.GetUserInfoFromPresence.user_state)
}

// optional bool is_camera = 4;
inline bool GetUserInfoFromPresence::has_is_camera() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetUserInfoFromPresence::set_has_is_camera() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetUserInfoFromPresence::clear_has_is_camera() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetUserInfoFromPresence::clear_is_camera() {
  is_camera_ = false;
  clear_has_is_camera();
}
inline bool GetUserInfoFromPresence::is_camera() const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserInfoFromPresence.is_camera)
  return is_camera_;
}
inline void GetUserInfoFromPresence::set_is_camera(bool value) {
  set_has_is_camera();
  is_camera_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.GetUserInfoFromPresence.is_camera)
}

// optional uint32 ttype = 5;
inline bool GetUserInfoFromPresence::has_ttype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetUserInfoFromPresence::set_has_ttype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetUserInfoFromPresence::clear_has_ttype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetUserInfoFromPresence::clear_ttype() {
  ttype_ = 0u;
  clear_has_ttype();
}
inline ::google::protobuf::uint32 GetUserInfoFromPresence::ttype() const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserInfoFromPresence.ttype)
  return ttype_;
}
inline void GetUserInfoFromPresence::set_ttype(::google::protobuf::uint32 value) {
  set_has_ttype();
  ttype_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.GetUserInfoFromPresence.ttype)
}

// optional string trans_ident = 6;
inline bool GetUserInfoFromPresence::has_trans_ident() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetUserInfoFromPresence::set_has_trans_ident() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetUserInfoFromPresence::clear_has_trans_ident() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetUserInfoFromPresence::clear_trans_ident() {
  if (trans_ident_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_->clear();
  }
  clear_has_trans_ident();
}
inline const ::std::string& GetUserInfoFromPresence::trans_ident() const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserInfoFromPresence.trans_ident)
  return *trans_ident_;
}
inline void GetUserInfoFromPresence::set_trans_ident(const ::std::string& value) {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  trans_ident_->assign(value);
  // @@protoc_insertion_point(field_set:tt_presence.GetUserInfoFromPresence.trans_ident)
}
inline void GetUserInfoFromPresence::set_trans_ident(const char* value) {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  trans_ident_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_presence.GetUserInfoFromPresence.trans_ident)
}
inline void GetUserInfoFromPresence::set_trans_ident(const char* value, size_t size) {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  trans_ident_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_presence.GetUserInfoFromPresence.trans_ident)
}
inline ::std::string* GetUserInfoFromPresence::mutable_trans_ident() {
  set_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    trans_ident_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_presence.GetUserInfoFromPresence.trans_ident)
  return trans_ident_;
}
inline ::std::string* GetUserInfoFromPresence::release_trans_ident() {
  clear_has_trans_ident();
  if (trans_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = trans_ident_;
    trans_ident_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoFromPresence::set_allocated_trans_ident(::std::string* trans_ident) {
  if (trans_ident_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete trans_ident_;
  }
  if (trans_ident) {
    set_has_trans_ident();
    trans_ident_ = trans_ident;
  } else {
    clear_has_trans_ident();
    trans_ident_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_presence.GetUserInfoFromPresence.trans_ident)
}

// optional string msg_content = 7;
inline bool GetUserInfoFromPresence::has_msg_content() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetUserInfoFromPresence::set_has_msg_content() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetUserInfoFromPresence::clear_has_msg_content() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetUserInfoFromPresence::clear_msg_content() {
  if (msg_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_->clear();
  }
  clear_has_msg_content();
}
inline const ::std::string& GetUserInfoFromPresence::msg_content() const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserInfoFromPresence.msg_content)
  return *msg_content_;
}
inline void GetUserInfoFromPresence::set_msg_content(const ::std::string& value) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(value);
  // @@protoc_insertion_point(field_set:tt_presence.GetUserInfoFromPresence.msg_content)
}
inline void GetUserInfoFromPresence::set_msg_content(const char* value) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_presence.GetUserInfoFromPresence.msg_content)
}
inline void GetUserInfoFromPresence::set_msg_content(const char* value, size_t size) {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  msg_content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_presence.GetUserInfoFromPresence.msg_content)
}
inline ::std::string* GetUserInfoFromPresence::mutable_msg_content() {
  set_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_presence.GetUserInfoFromPresence.msg_content)
  return msg_content_;
}
inline ::std::string* GetUserInfoFromPresence::release_msg_content() {
  clear_has_msg_content();
  if (msg_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_content_;
    msg_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoFromPresence::set_allocated_msg_content(::std::string* msg_content) {
  if (msg_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_content_;
  }
  if (msg_content) {
    set_has_msg_content();
    msg_content_ = msg_content;
  } else {
    clear_has_msg_content();
    msg_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_presence.GetUserInfoFromPresence.msg_content)
}

// repeated uint64 user_list = 8;
inline int GetUserInfoFromPresence::user_list_size() const {
  return user_list_.size();
}
inline void GetUserInfoFromPresence::clear_user_list() {
  user_list_.Clear();
}
inline ::google::protobuf::uint64 GetUserInfoFromPresence::user_list(int index) const {
  // @@protoc_insertion_point(field_get:tt_presence.GetUserInfoFromPresence.user_list)
  return user_list_.Get(index);
}
inline void GetUserInfoFromPresence::set_user_list(int index, ::google::protobuf::uint64 value) {
  user_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:tt_presence.GetUserInfoFromPresence.user_list)
}
inline void GetUserInfoFromPresence::add_user_list(::google::protobuf::uint64 value) {
  user_list_.Add(value);
  // @@protoc_insertion_point(field_add:tt_presence.GetUserInfoFromPresence.user_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetUserInfoFromPresence::user_list() const {
  // @@protoc_insertion_point(field_list:tt_presence.GetUserInfoFromPresence.user_list)
  return user_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetUserInfoFromPresence::mutable_user_list() {
  // @@protoc_insertion_point(field_mutable_list:tt_presence.GetUserInfoFromPresence.user_list)
  return &user_list_;
}

// -------------------------------------------------------------------

// OperUserFriendRequestFromPresence

// required uint64 from_id = 1;
inline bool OperUserFriendRequestFromPresence::has_from_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperUserFriendRequestFromPresence::set_has_from_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperUserFriendRequestFromPresence::clear_has_from_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperUserFriendRequestFromPresence::clear_from_id() {
  from_id_ = GOOGLE_ULONGLONG(0);
  clear_has_from_id();
}
inline ::google::protobuf::uint64 OperUserFriendRequestFromPresence::from_id() const {
  // @@protoc_insertion_point(field_get:tt_presence.OperUserFriendRequestFromPresence.from_id)
  return from_id_;
}
inline void OperUserFriendRequestFromPresence::set_from_id(::google::protobuf::uint64 value) {
  set_has_from_id();
  from_id_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.OperUserFriendRequestFromPresence.from_id)
}

// required uint64 to_id = 2;
inline bool OperUserFriendRequestFromPresence::has_to_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperUserFriendRequestFromPresence::set_has_to_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperUserFriendRequestFromPresence::clear_has_to_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperUserFriendRequestFromPresence::clear_to_id() {
  to_id_ = GOOGLE_ULONGLONG(0);
  clear_has_to_id();
}
inline ::google::protobuf::uint64 OperUserFriendRequestFromPresence::to_id() const {
  // @@protoc_insertion_point(field_get:tt_presence.OperUserFriendRequestFromPresence.to_id)
  return to_id_;
}
inline void OperUserFriendRequestFromPresence::set_to_id(::google::protobuf::uint64 value) {
  set_has_to_id();
  to_id_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.OperUserFriendRequestFromPresence.to_id)
}

// required uint32 type = 3;
inline bool OperUserFriendRequestFromPresence::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperUserFriendRequestFromPresence::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperUserFriendRequestFromPresence::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperUserFriendRequestFromPresence::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 OperUserFriendRequestFromPresence::type() const {
  // @@protoc_insertion_point(field_get:tt_presence.OperUserFriendRequestFromPresence.type)
  return type_;
}
inline void OperUserFriendRequestFromPresence::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.OperUserFriendRequestFromPresence.type)
}

// required string content = 4;
inline bool OperUserFriendRequestFromPresence::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperUserFriendRequestFromPresence::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperUserFriendRequestFromPresence::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperUserFriendRequestFromPresence::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& OperUserFriendRequestFromPresence::content() const {
  // @@protoc_insertion_point(field_get:tt_presence.OperUserFriendRequestFromPresence.content)
  return *content_;
}
inline void OperUserFriendRequestFromPresence::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:tt_presence.OperUserFriendRequestFromPresence.content)
}
inline void OperUserFriendRequestFromPresence::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_presence.OperUserFriendRequestFromPresence.content)
}
inline void OperUserFriendRequestFromPresence::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_presence.OperUserFriendRequestFromPresence.content)
}
inline ::std::string* OperUserFriendRequestFromPresence::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_presence.OperUserFriendRequestFromPresence.content)
  return content_;
}
inline ::std::string* OperUserFriendRequestFromPresence::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OperUserFriendRequestFromPresence::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_presence.OperUserFriendRequestFromPresence.content)
}

// -------------------------------------------------------------------

// MessageTransferRequest

// required uint64 from_id = 1;
inline bool MessageTransferRequest::has_from_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageTransferRequest::set_has_from_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageTransferRequest::clear_has_from_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageTransferRequest::clear_from_id() {
  from_id_ = GOOGLE_ULONGLONG(0);
  clear_has_from_id();
}
inline ::google::protobuf::uint64 MessageTransferRequest::from_id() const {
  // @@protoc_insertion_point(field_get:tt_presence.MessageTransferRequest.from_id)
  return from_id_;
}
inline void MessageTransferRequest::set_from_id(::google::protobuf::uint64 value) {
  set_has_from_id();
  from_id_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.MessageTransferRequest.from_id)
}

// required uint64 to_id = 2;
inline bool MessageTransferRequest::has_to_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageTransferRequest::set_has_to_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageTransferRequest::clear_has_to_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageTransferRequest::clear_to_id() {
  to_id_ = GOOGLE_ULONGLONG(0);
  clear_has_to_id();
}
inline ::google::protobuf::uint64 MessageTransferRequest::to_id() const {
  // @@protoc_insertion_point(field_get:tt_presence.MessageTransferRequest.to_id)
  return to_id_;
}
inline void MessageTransferRequest::set_to_id(::google::protobuf::uint64 value) {
  set_has_to_id();
  to_id_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.MessageTransferRequest.to_id)
}

// required uint32 type = 3;
inline bool MessageTransferRequest::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageTransferRequest::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageTransferRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageTransferRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 MessageTransferRequest::type() const {
  // @@protoc_insertion_point(field_get:tt_presence.MessageTransferRequest.type)
  return type_;
}
inline void MessageTransferRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.MessageTransferRequest.type)
}

// required string content = 4;
inline bool MessageTransferRequest::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MessageTransferRequest::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MessageTransferRequest::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MessageTransferRequest::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& MessageTransferRequest::content() const {
  // @@protoc_insertion_point(field_get:tt_presence.MessageTransferRequest.content)
  return *content_;
}
inline void MessageTransferRequest::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:tt_presence.MessageTransferRequest.content)
}
inline void MessageTransferRequest::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_presence.MessageTransferRequest.content)
}
inline void MessageTransferRequest::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_presence.MessageTransferRequest.content)
}
inline ::std::string* MessageTransferRequest::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_presence.MessageTransferRequest.content)
  return content_;
}
inline ::std::string* MessageTransferRequest::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MessageTransferRequest::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_presence.MessageTransferRequest.content)
}

// -------------------------------------------------------------------

// MessageTransferResponse

// required bool online = 1;
inline bool MessageTransferResponse::has_online() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageTransferResponse::set_has_online() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageTransferResponse::clear_has_online() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageTransferResponse::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool MessageTransferResponse::online() const {
  // @@protoc_insertion_point(field_get:tt_presence.MessageTransferResponse.online)
  return online_;
}
inline void MessageTransferResponse::set_online(bool value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.MessageTransferResponse.online)
}

// -------------------------------------------------------------------

// KickUserRequest

// required uint64 user_id = 1;
inline bool KickUserRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickUserRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickUserRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickUserRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 KickUserRequest::user_id() const {
  // @@protoc_insertion_point(field_get:tt_presence.KickUserRequest.user_id)
  return user_id_;
}
inline void KickUserRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.KickUserRequest.user_id)
}

// optional string acc_ident = 2;
inline bool KickUserRequest::has_acc_ident() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KickUserRequest::set_has_acc_ident() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KickUserRequest::clear_has_acc_ident() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KickUserRequest::clear_acc_ident() {
  if (acc_ident_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    acc_ident_->clear();
  }
  clear_has_acc_ident();
}
inline const ::std::string& KickUserRequest::acc_ident() const {
  // @@protoc_insertion_point(field_get:tt_presence.KickUserRequest.acc_ident)
  return *acc_ident_;
}
inline void KickUserRequest::set_acc_ident(const ::std::string& value) {
  set_has_acc_ident();
  if (acc_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    acc_ident_ = new ::std::string;
  }
  acc_ident_->assign(value);
  // @@protoc_insertion_point(field_set:tt_presence.KickUserRequest.acc_ident)
}
inline void KickUserRequest::set_acc_ident(const char* value) {
  set_has_acc_ident();
  if (acc_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    acc_ident_ = new ::std::string;
  }
  acc_ident_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_presence.KickUserRequest.acc_ident)
}
inline void KickUserRequest::set_acc_ident(const char* value, size_t size) {
  set_has_acc_ident();
  if (acc_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    acc_ident_ = new ::std::string;
  }
  acc_ident_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_presence.KickUserRequest.acc_ident)
}
inline ::std::string* KickUserRequest::mutable_acc_ident() {
  set_has_acc_ident();
  if (acc_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    acc_ident_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_presence.KickUserRequest.acc_ident)
  return acc_ident_;
}
inline ::std::string* KickUserRequest::release_acc_ident() {
  clear_has_acc_ident();
  if (acc_ident_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = acc_ident_;
    acc_ident_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void KickUserRequest::set_allocated_acc_ident(::std::string* acc_ident) {
  if (acc_ident_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete acc_ident_;
  }
  if (acc_ident) {
    set_has_acc_ident();
    acc_ident_ = acc_ident;
  } else {
    clear_has_acc_ident();
    acc_ident_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_presence.KickUserRequest.acc_ident)
}

// optional uint32 ttype = 3;
inline bool KickUserRequest::has_ttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KickUserRequest::set_has_ttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KickUserRequest::clear_has_ttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KickUserRequest::clear_ttype() {
  ttype_ = 0u;
  clear_has_ttype();
}
inline ::google::protobuf::uint32 KickUserRequest::ttype() const {
  // @@protoc_insertion_point(field_get:tt_presence.KickUserRequest.ttype)
  return ttype_;
}
inline void KickUserRequest::set_ttype(::google::protobuf::uint32 value) {
  set_has_ttype();
  ttype_ = value;
  // @@protoc_insertion_point(field_set:tt_presence.KickUserRequest.ttype)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tt_presence

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tt_presence::UserInfoMessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tt_presence::UserInfoMessageType>() {
  return ::tt_presence::UserInfoMessageType_descriptor();
}
template <> struct is_proto_enum< ::tt_presence::UserState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tt_presence::UserState>() {
  return ::tt_presence::UserState_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_presence_2eproto__INCLUDED
