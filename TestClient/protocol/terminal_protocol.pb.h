// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: terminal_protocol.proto

#ifndef PROTOBUF_terminal_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_terminal_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace TerminalProtocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

class Result;
class LoginRequest;
class Redirect;
class LoginResponse;
class KeepaliveRequest;
class LogoutRequest;
class LogoutResponse;
class GetFriendListRequest;
class GetFriendListResponse;
class GetFriendBasicInfoRequest;
class FriendBasicInfo;
class GetFriendBasicInfoResponse;
class GetUserInfoRequest;
class GetUserInfoResponse;
class ChangeOnlineStateRequest;
class FriendOnlineStateNotify;
class FriendsOnlineStateNotify;
class GetGroupListRequest;
class GroupListItem;
class GetGroupListResponse;
class CreateGroupRequest;
class CreateGroupResponse;
class JoinGroupRequest;
class JoinGroupResponse;
class JoinGroupVerifyRequest;
class JoinGroupVerifyResponse;
class JoinGroupConfirmRequest;
class JoinGroupNotify;
class ExitGroupRequest;
class ExitGroupResponse;
class GetGroupUserListRequest;
class GetGroupUserListResponse;
class GetGroupUserInfoRequest;
class GroupUserInfo;
class GetGroupUserInfoResponse;
class SearchGroupUserListRequest;
class SearchGroupUserListResponse;
class AddFriendRequest;
class AddFriendResponse;
class AddFriendVerifyRequest;
class AddFriendVerifyResponse;
class AddFriendConfirmRequest;
class AddFriendNotify;
class DeleteFriendRequest;
class DeleteFriendNotify;
class UpdateFriendBranchRequest;
class AddBranchRequest;
class AddBranchResponse;
class DeleteBranchRequest;
class UpdateBranchNameRequest;
class KickoutGroupUserRequest;
class SetGroupManagerRequest;
class UpdateFriendRemarkRequest;
class GetBranchListRequest;
class UserIdRemarkItem;
class BranchListItem;
class GetBranchListResponse;
class SetFriendOptionRequest;
class GroupManagerVerifyRequest;
class GroupManagerVerifyResponse;
class DeleteGroupRequest;
class DeleteGroupResponse;
class UpdateGroupRemarkRequest;
class UpdateGroupInfoRequest;
class UpdateGroupOptionRequest;
class GetGroupOptionRequest;
class GetGroupOptionResponse;
class UpdateGroupNotice;
class GetGroupInfoRequest;
class GetGroupInfoResponse;
class UpdateGroupNoticeNotify;
class UpdateUserInfoRequest;
class UpdateUserMoodRequest;
class UpdateUserNickNameRequest;
class UpdateAvatarRequest;
class KickUserOffline;
class GetUserOnlineStateRequest;
class UserOnlineStateInfo;
class GetUserOnlineStateResponse;
class GetGroupUserCardRequest;
class GetGroupUserCardResponse;
class UpdateGroupUserCardRequest;
class SetGroupMsgModeRequest;
class SetGroupTalkModeRequest;
class GetFriendVerifyInfoRequest;
class GetFriendVerifyInfoResponse;
class GetGroupManagerListRequest;
class GetGroupManagerListResponse;
class DeleteHistoryMessageRequest;

// ===================================================================

class Result : public ::google::protobuf::Message {
 public:
  Result();
  virtual ~Result();

  Result(const Result& from);

  inline Result& operator=(const Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Result& default_instance();

  void Swap(Result* other);

  // implements Message ----------------------------------------------

  Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Result& from);
  void MergeFrom(const Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);

  // required string msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.Result)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* msg_;
  ::google::protobuf::uint32 code_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Result* default_instance_;
};
// -------------------------------------------------------------------

class LoginRequest : public ::google::protobuf::Message {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  void Swap(LoginRequest* other);

  // implements Message ----------------------------------------------

  LoginRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string login_name = 1;
  inline bool has_login_name() const;
  inline void clear_login_name();
  static const int kLoginNameFieldNumber = 1;
  inline const ::std::string& login_name() const;
  inline void set_login_name(const ::std::string& value);
  inline void set_login_name(const char* value);
  inline void set_login_name(const char* value, size_t size);
  inline ::std::string* mutable_login_name();
  inline ::std::string* release_login_name();
  inline void set_allocated_login_name(::std::string* login_name);

  // required string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // required uint32 online_state = 3;
  inline bool has_online_state() const;
  inline void clear_online_state();
  static const int kOnlineStateFieldNumber = 3;
  inline ::google::protobuf::uint32 online_state() const;
  inline void set_online_state(::google::protobuf::uint32 value);

  // required uint32 terminal_type = 4;
  inline bool has_terminal_type() const;
  inline void clear_terminal_type();
  static const int kTerminalTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 terminal_type() const;
  inline void set_terminal_type(::google::protobuf::uint32 value);

  // optional string mac_addr = 5;
  inline bool has_mac_addr() const;
  inline void clear_mac_addr();
  static const int kMacAddrFieldNumber = 5;
  inline const ::std::string& mac_addr() const;
  inline void set_mac_addr(const ::std::string& value);
  inline void set_mac_addr(const char* value);
  inline void set_mac_addr(const char* value, size_t size);
  inline ::std::string* mutable_mac_addr();
  inline ::std::string* release_mac_addr();
  inline void set_allocated_mac_addr(::std::string* mac_addr);

  // optional uint32 has_camera = 6;
  inline bool has_has_camera() const;
  inline void clear_has_camera();
  static const int kHasCameraFieldNumber = 6;
  inline ::google::protobuf::uint32 has_camera() const;
  inline void set_has_camera(::google::protobuf::uint32 value);

  // optional uint32 login_type = 7;
  inline bool has_login_type() const;
  inline void clear_login_type();
  static const int kLoginTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 login_type() const;
  inline void set_login_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.LoginRequest)
 private:
  inline void set_has_login_name();
  inline void clear_has_login_name();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_online_state();
  inline void clear_has_online_state();
  inline void set_has_terminal_type();
  inline void clear_has_terminal_type();
  inline void set_has_mac_addr();
  inline void clear_has_mac_addr();
  inline void set_has_has_camera();
  inline void clear_has_has_camera();
  inline void set_has_login_type();
  inline void clear_has_login_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* login_name_;
  ::std::string* password_;
  ::google::protobuf::uint32 online_state_;
  ::google::protobuf::uint32 terminal_type_;
  ::std::string* mac_addr_;
  ::google::protobuf::uint32 has_camera_;
  ::google::protobuf::uint32 login_type_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static LoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class Redirect : public ::google::protobuf::Message {
 public:
  Redirect();
  virtual ~Redirect();

  Redirect(const Redirect& from);

  inline Redirect& operator=(const Redirect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Redirect& default_instance();

  void Swap(Redirect* other);

  // implements Message ----------------------------------------------

  Redirect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Redirect& from);
  void MergeFrom(const Redirect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string server_ip = 1;
  inline bool has_server_ip() const;
  inline void clear_server_ip();
  static const int kServerIpFieldNumber = 1;
  inline const ::std::string& server_ip() const;
  inline void set_server_ip(const ::std::string& value);
  inline void set_server_ip(const char* value);
  inline void set_server_ip(const char* value, size_t size);
  inline ::std::string* mutable_server_ip();
  inline ::std::string* release_server_ip();
  inline void set_allocated_server_ip(::std::string* server_ip);

  // required uint32 server_port = 2;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 2;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);

  // optional uint32 app_id = 3;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 3;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.Redirect)
 private:
  inline void set_has_server_ip();
  inline void clear_has_server_ip();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_app_id();
  inline void clear_has_app_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* server_ip_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 app_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Redirect* default_instance_;
};
// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::Message {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResponse& default_instance();

  void Swap(LoginResponse* other);

  // implements Message ----------------------------------------------

  LoginResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TerminalProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::TerminalProtocol::Result& result() const;
  inline ::TerminalProtocol::Result* mutable_result();
  inline ::TerminalProtocol::Result* release_result();
  inline void set_allocated_result(::TerminalProtocol::Result* result);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 tt_number = 3;
  inline bool has_tt_number() const;
  inline void clear_tt_number();
  static const int kTtNumberFieldNumber = 3;
  inline ::google::protobuf::uint64 tt_number() const;
  inline void set_tt_number(::google::protobuf::uint64 value);

  // optional string nick_name = 4;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 4;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional string avatar_id = 5;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 5;
  inline const ::std::string& avatar_id() const;
  inline void set_avatar_id(const ::std::string& value);
  inline void set_avatar_id(const char* value);
  inline void set_avatar_id(const char* value, size_t size);
  inline ::std::string* mutable_avatar_id();
  inline ::std::string* release_avatar_id();
  inline void set_allocated_avatar_id(::std::string* avatar_id);

  // optional string avatar = 6;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 6;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // optional string token = 7;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 7;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // optional string mts_ip = 8;
  inline bool has_mts_ip() const;
  inline void clear_mts_ip();
  static const int kMtsIpFieldNumber = 8;
  inline const ::std::string& mts_ip() const;
  inline void set_mts_ip(const ::std::string& value);
  inline void set_mts_ip(const char* value);
  inline void set_mts_ip(const char* value, size_t size);
  inline ::std::string* mutable_mts_ip();
  inline ::std::string* release_mts_ip();
  inline void set_allocated_mts_ip(::std::string* mts_ip);

  // optional uint32 mts_port = 9;
  inline bool has_mts_port() const;
  inline void clear_mts_port();
  static const int kMtsPortFieldNumber = 9;
  inline ::google::protobuf::uint32 mts_port() const;
  inline void set_mts_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.LoginResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_tt_number();
  inline void clear_has_tt_number();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_mts_ip();
  inline void clear_has_mts_ip();
  inline void set_has_mts_port();
  inline void clear_has_mts_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TerminalProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 tt_number_;
  ::std::string* nick_name_;
  ::std::string* avatar_id_;
  ::std::string* avatar_;
  ::std::string* token_;
  ::std::string* mts_ip_;
  ::google::protobuf::uint32 mts_port_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static LoginResponse* default_instance_;
};
// -------------------------------------------------------------------

class KeepaliveRequest : public ::google::protobuf::Message {
 public:
  KeepaliveRequest();
  virtual ~KeepaliveRequest();

  KeepaliveRequest(const KeepaliveRequest& from);

  inline KeepaliveRequest& operator=(const KeepaliveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeepaliveRequest& default_instance();

  void Swap(KeepaliveRequest* other);

  // implements Message ----------------------------------------------

  KeepaliveRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeepaliveRequest& from);
  void MergeFrom(const KeepaliveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.KeepaliveRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static KeepaliveRequest* default_instance_;
};
// -------------------------------------------------------------------

class LogoutRequest : public ::google::protobuf::Message {
 public:
  LogoutRequest();
  virtual ~LogoutRequest();

  LogoutRequest(const LogoutRequest& from);

  inline LogoutRequest& operator=(const LogoutRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutRequest& default_instance();

  void Swap(LogoutRequest* other);

  // implements Message ----------------------------------------------

  LogoutRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogoutRequest& from);
  void MergeFrom(const LogoutRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint32 terminal_type = 2;
  inline bool has_terminal_type() const;
  inline void clear_terminal_type();
  static const int kTerminalTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 terminal_type() const;
  inline void set_terminal_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.LogoutRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_terminal_type();
  inline void clear_has_terminal_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 terminal_type_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static LogoutRequest* default_instance_;
};
// -------------------------------------------------------------------

class LogoutResponse : public ::google::protobuf::Message {
 public:
  LogoutResponse();
  virtual ~LogoutResponse();

  LogoutResponse(const LogoutResponse& from);

  inline LogoutResponse& operator=(const LogoutResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutResponse& default_instance();

  void Swap(LogoutResponse* other);

  // implements Message ----------------------------------------------

  LogoutResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogoutResponse& from);
  void MergeFrom(const LogoutResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TerminalProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::TerminalProtocol::Result& result() const;
  inline ::TerminalProtocol::Result* mutable_result();
  inline ::TerminalProtocol::Result* release_result();
  inline void set_allocated_result(::TerminalProtocol::Result* result);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.LogoutResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TerminalProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static LogoutResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendListRequest : public ::google::protobuf::Message {
 public:
  GetFriendListRequest();
  virtual ~GetFriendListRequest();

  GetFriendListRequest(const GetFriendListRequest& from);

  inline GetFriendListRequest& operator=(const GetFriendListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendListRequest& default_instance();

  void Swap(GetFriendListRequest* other);

  // implements Message ----------------------------------------------

  GetFriendListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendListRequest& from);
  void MergeFrom(const GetFriendListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 version_id = 2;
  inline bool has_version_id() const;
  inline void clear_version_id();
  static const int kVersionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 version_id() const;
  inline void set_version_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetFriendListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_version_id();
  inline void clear_has_version_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 version_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetFriendListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendListResponse : public ::google::protobuf::Message {
 public:
  GetFriendListResponse();
  virtual ~GetFriendListResponse();

  GetFriendListResponse(const GetFriendListResponse& from);

  inline GetFriendListResponse& operator=(const GetFriendListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendListResponse& default_instance();

  void Swap(GetFriendListResponse* other);

  // implements Message ----------------------------------------------

  GetFriendListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendListResponse& from);
  void MergeFrom(const GetFriendListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 version_id = 2;
  inline bool has_version_id() const;
  inline void clear_version_id();
  static const int kVersionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 version_id() const;
  inline void set_version_id(::google::protobuf::uint64 value);

  // repeated uint64 friend_id = 3;
  inline int friend_id_size() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 3;
  inline ::google::protobuf::uint64 friend_id(int index) const;
  inline void set_friend_id(int index, ::google::protobuf::uint64 value);
  inline void add_friend_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      friend_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_friend_id();

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetFriendListResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_version_id();
  inline void clear_has_version_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 version_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > friend_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetFriendListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendBasicInfoRequest : public ::google::protobuf::Message {
 public:
  GetFriendBasicInfoRequest();
  virtual ~GetFriendBasicInfoRequest();

  GetFriendBasicInfoRequest(const GetFriendBasicInfoRequest& from);

  inline GetFriendBasicInfoRequest& operator=(const GetFriendBasicInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendBasicInfoRequest& default_instance();

  void Swap(GetFriendBasicInfoRequest* other);

  // implements Message ----------------------------------------------

  GetFriendBasicInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendBasicInfoRequest& from);
  void MergeFrom(const GetFriendBasicInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // repeated uint64 friend_id = 2;
  inline int friend_id_size() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id(int index) const;
  inline void set_friend_id(int index, ::google::protobuf::uint64 value);
  inline void add_friend_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      friend_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_friend_id();

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetFriendBasicInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > friend_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetFriendBasicInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class FriendBasicInfo : public ::google::protobuf::Message {
 public:
  FriendBasicInfo();
  virtual ~FriendBasicInfo();

  FriendBasicInfo(const FriendBasicInfo& from);

  inline FriendBasicInfo& operator=(const FriendBasicInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendBasicInfo& default_instance();

  void Swap(FriendBasicInfo* other);

  // implements Message ----------------------------------------------

  FriendBasicInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendBasicInfo& from);
  void MergeFrom(const FriendBasicInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional uint32 avatar_id = 5;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 5;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // optional string avatar = 6;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 6;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // optional string sign = 7;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 7;
  inline const ::std::string& sign() const;
  inline void set_sign(const ::std::string& value);
  inline void set_sign(const char* value);
  inline void set_sign(const char* value, size_t size);
  inline ::std::string* mutable_sign();
  inline ::std::string* release_sign();
  inline void set_allocated_sign(::std::string* sign);

  // optional uint32 level = 8;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.FriendBasicInfo)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* nick_name_;
  ::std::string* avatar_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 level_;
  ::std::string* sign_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static FriendBasicInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendBasicInfoResponse : public ::google::protobuf::Message {
 public:
  GetFriendBasicInfoResponse();
  virtual ~GetFriendBasicInfoResponse();

  GetFriendBasicInfoResponse(const GetFriendBasicInfoResponse& from);

  inline GetFriendBasicInfoResponse& operator=(const GetFriendBasicInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendBasicInfoResponse& default_instance();

  void Swap(GetFriendBasicInfoResponse* other);

  // implements Message ----------------------------------------------

  GetFriendBasicInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendBasicInfoResponse& from);
  void MergeFrom(const GetFriendBasicInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // repeated .TerminalProtocol.FriendBasicInfo friend_info = 2;
  inline int friend_info_size() const;
  inline void clear_friend_info();
  static const int kFriendInfoFieldNumber = 2;
  inline const ::TerminalProtocol::FriendBasicInfo& friend_info(int index) const;
  inline ::TerminalProtocol::FriendBasicInfo* mutable_friend_info(int index);
  inline ::TerminalProtocol::FriendBasicInfo* add_friend_info();
  inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::FriendBasicInfo >&
      friend_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::FriendBasicInfo >*
      mutable_friend_info();

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetFriendBasicInfoResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::FriendBasicInfo > friend_info_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetFriendBasicInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetUserInfoRequest : public ::google::protobuf::Message {
 public:
  GetUserInfoRequest();
  virtual ~GetUserInfoRequest();

  GetUserInfoRequest(const GetUserInfoRequest& from);

  inline GetUserInfoRequest& operator=(const GetUserInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserInfoRequest& default_instance();

  void Swap(GetUserInfoRequest* other);

  // implements Message ----------------------------------------------

  GetUserInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserInfoRequest& from);
  void MergeFrom(const GetUserInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 friend_id = 2;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetUserInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetUserInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetUserInfoResponse : public ::google::protobuf::Message {
 public:
  GetUserInfoResponse();
  virtual ~GetUserInfoResponse();

  GetUserInfoResponse(const GetUserInfoResponse& from);

  inline GetUserInfoResponse& operator=(const GetUserInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserInfoResponse& default_instance();

  void Swap(GetUserInfoResponse* other);

  // implements Message ----------------------------------------------

  GetUserInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserInfoResponse& from);
  void MergeFrom(const GetUserInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 tt_number = 2;
  inline bool has_tt_number() const;
  inline void clear_tt_number();
  static const int kTtNumberFieldNumber = 2;
  inline ::google::protobuf::uint64 tt_number() const;
  inline void set_tt_number(::google::protobuf::uint64 value);

  // optional string user_name = 3;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // optional string nick_name = 4;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 4;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional uint32 sex = 5;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 5;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // optional string mobile = 6;
  inline bool has_mobile() const;
  inline void clear_mobile();
  static const int kMobileFieldNumber = 6;
  inline const ::std::string& mobile() const;
  inline void set_mobile(const ::std::string& value);
  inline void set_mobile(const char* value);
  inline void set_mobile(const char* value, size_t size);
  inline ::std::string* mutable_mobile();
  inline ::std::string* release_mobile();
  inline void set_allocated_mobile(::std::string* mobile);

  // optional string birthday = 7;
  inline bool has_birthday() const;
  inline void clear_birthday();
  static const int kBirthdayFieldNumber = 7;
  inline const ::std::string& birthday() const;
  inline void set_birthday(const ::std::string& value);
  inline void set_birthday(const char* value);
  inline void set_birthday(const char* value, size_t size);
  inline ::std::string* mutable_birthday();
  inline ::std::string* release_birthday();
  inline void set_allocated_birthday(::std::string* birthday);

  // optional string email = 8;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 8;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // optional uint32 user_grade = 9;
  inline bool has_user_grade() const;
  inline void clear_user_grade();
  static const int kUserGradeFieldNumber = 9;
  inline ::google::protobuf::uint32 user_grade() const;
  inline void set_user_grade(::google::protobuf::uint32 value);

  // optional uint32 age = 10;
  inline bool has_age() const;
  inline void clear_age();
  static const int kAgeFieldNumber = 10;
  inline ::google::protobuf::uint32 age() const;
  inline void set_age(::google::protobuf::uint32 value);

  // optional uint32 constellation = 11;
  inline bool has_constellation() const;
  inline void clear_constellation();
  static const int kConstellationFieldNumber = 11;
  inline ::google::protobuf::uint32 constellation() const;
  inline void set_constellation(::google::protobuf::uint32 value);

  // optional string sign = 12;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 12;
  inline const ::std::string& sign() const;
  inline void set_sign(const ::std::string& value);
  inline void set_sign(const char* value);
  inline void set_sign(const char* value, size_t size);
  inline ::std::string* mutable_sign();
  inline ::std::string* release_sign();
  inline void set_allocated_sign(::std::string* sign);

  // optional string like = 13;
  inline bool has_like() const;
  inline void clear_like();
  static const int kLikeFieldNumber = 13;
  inline const ::std::string& like() const;
  inline void set_like(const ::std::string& value);
  inline void set_like(const char* value);
  inline void set_like(const char* value, size_t size);
  inline ::std::string* mutable_like();
  inline ::std::string* release_like();
  inline void set_allocated_like(::std::string* like);

  // optional string city = 14;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 14;
  inline const ::std::string& city() const;
  inline void set_city(const ::std::string& value);
  inline void set_city(const char* value);
  inline void set_city(const char* value, size_t size);
  inline ::std::string* mutable_city();
  inline ::std::string* release_city();
  inline void set_allocated_city(::std::string* city);

  // optional string personal_desc = 15;
  inline bool has_personal_desc() const;
  inline void clear_personal_desc();
  static const int kPersonalDescFieldNumber = 15;
  inline const ::std::string& personal_desc() const;
  inline void set_personal_desc(const ::std::string& value);
  inline void set_personal_desc(const char* value);
  inline void set_personal_desc(const char* value, size_t size);
  inline ::std::string* mutable_personal_desc();
  inline ::std::string* release_personal_desc();
  inline void set_allocated_personal_desc(::std::string* personal_desc);

  // optional string real_name = 16;
  inline bool has_real_name() const;
  inline void clear_real_name();
  static const int kRealNameFieldNumber = 16;
  inline const ::std::string& real_name() const;
  inline void set_real_name(const ::std::string& value);
  inline void set_real_name(const char* value);
  inline void set_real_name(const char* value, size_t size);
  inline ::std::string* mutable_real_name();
  inline ::std::string* release_real_name();
  inline void set_allocated_real_name(::std::string* real_name);

  // optional uint64 friend_id = 17;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 17;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetUserInfoResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_tt_number();
  inline void clear_has_tt_number();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_mobile();
  inline void clear_has_mobile();
  inline void set_has_birthday();
  inline void clear_has_birthday();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_user_grade();
  inline void clear_has_user_grade();
  inline void set_has_age();
  inline void clear_has_age();
  inline void set_has_constellation();
  inline void clear_has_constellation();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_like();
  inline void clear_has_like();
  inline void set_has_city();
  inline void clear_has_city();
  inline void set_has_personal_desc();
  inline void clear_has_personal_desc();
  inline void set_has_real_name();
  inline void clear_has_real_name();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 tt_number_;
  ::std::string* user_name_;
  ::std::string* nick_name_;
  ::std::string* mobile_;
  ::std::string* birthday_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 user_grade_;
  ::std::string* email_;
  ::google::protobuf::uint32 age_;
  ::google::protobuf::uint32 constellation_;
  ::std::string* sign_;
  ::std::string* like_;
  ::std::string* city_;
  ::std::string* personal_desc_;
  ::std::string* real_name_;
  ::google::protobuf::uint64 friend_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetUserInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class ChangeOnlineStateRequest : public ::google::protobuf::Message {
 public:
  ChangeOnlineStateRequest();
  virtual ~ChangeOnlineStateRequest();

  ChangeOnlineStateRequest(const ChangeOnlineStateRequest& from);

  inline ChangeOnlineStateRequest& operator=(const ChangeOnlineStateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeOnlineStateRequest& default_instance();

  void Swap(ChangeOnlineStateRequest* other);

  // implements Message ----------------------------------------------

  ChangeOnlineStateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeOnlineStateRequest& from);
  void MergeFrom(const ChangeOnlineStateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint32 terminal_type = 2;
  inline bool has_terminal_type() const;
  inline void clear_terminal_type();
  static const int kTerminalTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 terminal_type() const;
  inline void set_terminal_type(::google::protobuf::uint32 value);

  // required uint32 online_state = 3;
  inline bool has_online_state() const;
  inline void clear_online_state();
  static const int kOnlineStateFieldNumber = 3;
  inline ::google::protobuf::uint32 online_state() const;
  inline void set_online_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.ChangeOnlineStateRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_terminal_type();
  inline void clear_has_terminal_type();
  inline void set_has_online_state();
  inline void clear_has_online_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 terminal_type_;
  ::google::protobuf::uint32 online_state_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ChangeOnlineStateRequest* default_instance_;
};
// -------------------------------------------------------------------

class FriendOnlineStateNotify : public ::google::protobuf::Message {
 public:
  FriendOnlineStateNotify();
  virtual ~FriendOnlineStateNotify();

  FriendOnlineStateNotify(const FriendOnlineStateNotify& from);

  inline FriendOnlineStateNotify& operator=(const FriendOnlineStateNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendOnlineStateNotify& default_instance();

  void Swap(FriendOnlineStateNotify* other);

  // implements Message ----------------------------------------------

  FriendOnlineStateNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendOnlineStateNotify& from);
  void MergeFrom(const FriendOnlineStateNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint32 terminal_type = 2;
  inline bool has_terminal_type() const;
  inline void clear_terminal_type();
  static const int kTerminalTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 terminal_type() const;
  inline void set_terminal_type(::google::protobuf::uint32 value);

  // required uint32 online_state = 3;
  inline bool has_online_state() const;
  inline void clear_online_state();
  static const int kOnlineStateFieldNumber = 3;
  inline ::google::protobuf::uint32 online_state() const;
  inline void set_online_state(::google::protobuf::uint32 value);

  // optional string mts_ip = 4;
  inline bool has_mts_ip() const;
  inline void clear_mts_ip();
  static const int kMtsIpFieldNumber = 4;
  inline const ::std::string& mts_ip() const;
  inline void set_mts_ip(const ::std::string& value);
  inline void set_mts_ip(const char* value);
  inline void set_mts_ip(const char* value, size_t size);
  inline ::std::string* mutable_mts_ip();
  inline ::std::string* release_mts_ip();
  inline void set_allocated_mts_ip(::std::string* mts_ip);

  // optional uint32 mts_port = 5;
  inline bool has_mts_port() const;
  inline void clear_mts_port();
  static const int kMtsPortFieldNumber = 5;
  inline ::google::protobuf::uint32 mts_port() const;
  inline void set_mts_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.FriendOnlineStateNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_terminal_type();
  inline void clear_has_terminal_type();
  inline void set_has_online_state();
  inline void clear_has_online_state();
  inline void set_has_mts_ip();
  inline void clear_has_mts_ip();
  inline void set_has_mts_port();
  inline void clear_has_mts_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 terminal_type_;
  ::google::protobuf::uint32 online_state_;
  ::std::string* mts_ip_;
  ::google::protobuf::uint32 mts_port_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static FriendOnlineStateNotify* default_instance_;
};
// -------------------------------------------------------------------

class FriendsOnlineStateNotify : public ::google::protobuf::Message {
 public:
  FriendsOnlineStateNotify();
  virtual ~FriendsOnlineStateNotify();

  FriendsOnlineStateNotify(const FriendsOnlineStateNotify& from);

  inline FriendsOnlineStateNotify& operator=(const FriendsOnlineStateNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendsOnlineStateNotify& default_instance();

  void Swap(FriendsOnlineStateNotify* other);

  // implements Message ----------------------------------------------

  FriendsOnlineStateNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendsOnlineStateNotify& from);
  void MergeFrom(const FriendsOnlineStateNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint32 sum_num = 2;
  inline bool has_sum_num() const;
  inline void clear_sum_num();
  static const int kSumNumFieldNumber = 2;
  inline ::google::protobuf::uint32 sum_num() const;
  inline void set_sum_num(::google::protobuf::uint32 value);

  // required uint32 cur_num = 3;
  inline bool has_cur_num() const;
  inline void clear_cur_num();
  static const int kCurNumFieldNumber = 3;
  inline ::google::protobuf::uint32 cur_num() const;
  inline void set_cur_num(::google::protobuf::uint32 value);

  // repeated .TerminalProtocol.FriendOnlineStateNotify friend_state = 4;
  inline int friend_state_size() const;
  inline void clear_friend_state();
  static const int kFriendStateFieldNumber = 4;
  inline const ::TerminalProtocol::FriendOnlineStateNotify& friend_state(int index) const;
  inline ::TerminalProtocol::FriendOnlineStateNotify* mutable_friend_state(int index);
  inline ::TerminalProtocol::FriendOnlineStateNotify* add_friend_state();
  inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::FriendOnlineStateNotify >&
      friend_state() const;
  inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::FriendOnlineStateNotify >*
      mutable_friend_state();

  // @@protoc_insertion_point(class_scope:TerminalProtocol.FriendsOnlineStateNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_sum_num();
  inline void clear_has_sum_num();
  inline void set_has_cur_num();
  inline void clear_has_cur_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 sum_num_;
  ::google::protobuf::uint32 cur_num_;
  ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::FriendOnlineStateNotify > friend_state_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static FriendsOnlineStateNotify* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupListRequest : public ::google::protobuf::Message {
 public:
  GetGroupListRequest();
  virtual ~GetGroupListRequest();

  GetGroupListRequest(const GetGroupListRequest& from);

  inline GetGroupListRequest& operator=(const GetGroupListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupListRequest& default_instance();

  void Swap(GetGroupListRequest* other);

  // implements Message ----------------------------------------------

  GetGroupListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupListRequest& from);
  void MergeFrom(const GetGroupListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetGroupListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetGroupListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GroupListItem : public ::google::protobuf::Message {
 public:
  GroupListItem();
  virtual ~GroupListItem();

  GroupListItem(const GroupListItem& from);

  inline GroupListItem& operator=(const GroupListItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupListItem& default_instance();

  void Swap(GroupListItem* other);

  // implements Message ----------------------------------------------

  GroupListItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupListItem& from);
  void MergeFrom(const GroupListItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional string group_name = 2;
  inline bool has_group_name() const;
  inline void clear_group_name();
  static const int kGroupNameFieldNumber = 2;
  inline const ::std::string& group_name() const;
  inline void set_group_name(const ::std::string& value);
  inline void set_group_name(const char* value);
  inline void set_group_name(const char* value, size_t size);
  inline ::std::string* mutable_group_name();
  inline ::std::string* release_group_name();
  inline void set_allocated_group_name(::std::string* group_name);

  // optional string remark = 3;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 3;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // optional uint32 avatar_id = 4;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 4;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // optional string avatar = 5;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 5;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GroupListItem)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_name();
  inline void clear_has_group_name();
  inline void set_has_remark();
  inline void clear_has_remark();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* group_name_;
  ::std::string* remark_;
  ::std::string* avatar_;
  ::google::protobuf::uint32 avatar_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GroupListItem* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupListResponse : public ::google::protobuf::Message {
 public:
  GetGroupListResponse();
  virtual ~GetGroupListResponse();

  GetGroupListResponse(const GetGroupListResponse& from);

  inline GetGroupListResponse& operator=(const GetGroupListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupListResponse& default_instance();

  void Swap(GetGroupListResponse* other);

  // implements Message ----------------------------------------------

  GetGroupListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupListResponse& from);
  void MergeFrom(const GetGroupListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // repeated .TerminalProtocol.GroupListItem group_item = 2;
  inline int group_item_size() const;
  inline void clear_group_item();
  static const int kGroupItemFieldNumber = 2;
  inline const ::TerminalProtocol::GroupListItem& group_item(int index) const;
  inline ::TerminalProtocol::GroupListItem* mutable_group_item(int index);
  inline ::TerminalProtocol::GroupListItem* add_group_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupListItem >&
      group_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupListItem >*
      mutable_group_item();

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetGroupListResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupListItem > group_item_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetGroupListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CreateGroupRequest : public ::google::protobuf::Message {
 public:
  CreateGroupRequest();
  virtual ~CreateGroupRequest();

  CreateGroupRequest(const CreateGroupRequest& from);

  inline CreateGroupRequest& operator=(const CreateGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGroupRequest& default_instance();

  void Swap(CreateGroupRequest* other);

  // implements Message ----------------------------------------------

  CreateGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateGroupRequest& from);
  void MergeFrom(const CreateGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required string group_name = 2;
  inline bool has_group_name() const;
  inline void clear_group_name();
  static const int kGroupNameFieldNumber = 2;
  inline const ::std::string& group_name() const;
  inline void set_group_name(const ::std::string& value);
  inline void set_group_name(const char* value);
  inline void set_group_name(const char* value, size_t size);
  inline ::std::string* mutable_group_name();
  inline ::std::string* release_group_name();
  inline void set_allocated_group_name(::std::string* group_name);

  // optional uint32 group_type = 3;
  inline bool has_group_type() const;
  inline void clear_group_type();
  static const int kGroupTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 group_type() const;
  inline void set_group_type(::google::protobuf::uint32 value);

  // optional string group_icon = 4;
  inline bool has_group_icon() const;
  inline void clear_group_icon();
  static const int kGroupIconFieldNumber = 4;
  inline const ::std::string& group_icon() const;
  inline void set_group_icon(const ::std::string& value);
  inline void set_group_icon(const char* value);
  inline void set_group_icon(const char* value, size_t size);
  inline ::std::string* mutable_group_icon();
  inline ::std::string* release_group_icon();
  inline void set_allocated_group_icon(::std::string* group_icon);

  // optional uint32 verify_type = 5;
  inline bool has_verify_type() const;
  inline void clear_verify_type();
  static const int kVerifyTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 verify_type() const;
  inline void set_verify_type(::google::protobuf::uint32 value);

  // optional string group_intro = 6;
  inline bool has_group_intro() const;
  inline void clear_group_intro();
  static const int kGroupIntroFieldNumber = 6;
  inline const ::std::string& group_intro() const;
  inline void set_group_intro(const ::std::string& value);
  inline void set_group_intro(const char* value);
  inline void set_group_intro(const char* value, size_t size);
  inline ::std::string* mutable_group_intro();
  inline ::std::string* release_group_intro();
  inline void set_allocated_group_intro(::std::string* group_intro);

  // optional string group_sign = 7;
  inline bool has_group_sign() const;
  inline void clear_group_sign();
  static const int kGroupSignFieldNumber = 7;
  inline const ::std::string& group_sign() const;
  inline void set_group_sign(const ::std::string& value);
  inline void set_group_sign(const char* value);
  inline void set_group_sign(const char* value, size_t size);
  inline ::std::string* mutable_group_sign();
  inline ::std::string* release_group_sign();
  inline void set_allocated_group_sign(::std::string* group_sign);

  // optional uint32 avatar_id = 8;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 8;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // optional uint32 sub_type = 9;
  inline bool has_sub_type() const;
  inline void clear_sub_type();
  static const int kSubTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 sub_type() const;
  inline void set_sub_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.CreateGroupRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_name();
  inline void clear_has_group_name();
  inline void set_has_group_type();
  inline void clear_has_group_type();
  inline void set_has_group_icon();
  inline void clear_has_group_icon();
  inline void set_has_verify_type();
  inline void clear_has_verify_type();
  inline void set_has_group_intro();
  inline void clear_has_group_intro();
  inline void set_has_group_sign();
  inline void clear_has_group_sign();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_sub_type();
  inline void clear_has_sub_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* group_name_;
  ::std::string* group_icon_;
  ::google::protobuf::uint32 group_type_;
  ::google::protobuf::uint32 verify_type_;
  ::std::string* group_intro_;
  ::std::string* group_sign_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 sub_type_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CreateGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreateGroupResponse : public ::google::protobuf::Message {
 public:
  CreateGroupResponse();
  virtual ~CreateGroupResponse();

  CreateGroupResponse(const CreateGroupResponse& from);

  inline CreateGroupResponse& operator=(const CreateGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGroupResponse& default_instance();

  void Swap(CreateGroupResponse* other);

  // implements Message ----------------------------------------------

  CreateGroupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateGroupResponse& from);
  void MergeFrom(const CreateGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TerminalProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::TerminalProtocol::Result& result() const;
  inline ::TerminalProtocol::Result* mutable_result();
  inline ::TerminalProtocol::Result* release_result();
  inline void set_allocated_result(::TerminalProtocol::Result* result);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint32 group_number = 4;
  inline bool has_group_number() const;
  inline void clear_group_number();
  static const int kGroupNumberFieldNumber = 4;
  inline ::google::protobuf::uint32 group_number() const;
  inline void set_group_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.CreateGroupResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_number();
  inline void clear_has_group_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TerminalProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint32 group_number_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CreateGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class JoinGroupRequest : public ::google::protobuf::Message {
 public:
  JoinGroupRequest();
  virtual ~JoinGroupRequest();

  JoinGroupRequest(const JoinGroupRequest& from);

  inline JoinGroupRequest& operator=(const JoinGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGroupRequest& default_instance();

  void Swap(JoinGroupRequest* other);

  // implements Message ----------------------------------------------

  JoinGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinGroupRequest& from);
  void MergeFrom(const JoinGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.JoinGroupRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static JoinGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class JoinGroupResponse : public ::google::protobuf::Message {
 public:
  JoinGroupResponse();
  virtual ~JoinGroupResponse();

  JoinGroupResponse(const JoinGroupResponse& from);

  inline JoinGroupResponse& operator=(const JoinGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGroupResponse& default_instance();

  void Swap(JoinGroupResponse* other);

  // implements Message ----------------------------------------------

  JoinGroupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinGroupResponse& from);
  void MergeFrom(const JoinGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint32 verify_type = 3;
  inline bool has_verify_type() const;
  inline void clear_verify_type();
  static const int kVerifyTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 verify_type() const;
  inline void set_verify_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.JoinGroupResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_verify_type();
  inline void clear_has_verify_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint32 verify_type_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static JoinGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class JoinGroupVerifyRequest : public ::google::protobuf::Message {
 public:
  JoinGroupVerifyRequest();
  virtual ~JoinGroupVerifyRequest();

  JoinGroupVerifyRequest(const JoinGroupVerifyRequest& from);

  inline JoinGroupVerifyRequest& operator=(const JoinGroupVerifyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGroupVerifyRequest& default_instance();

  void Swap(JoinGroupVerifyRequest* other);

  // implements Message ----------------------------------------------

  JoinGroupVerifyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinGroupVerifyRequest& from);
  void MergeFrom(const JoinGroupVerifyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint32 verify_type = 3;
  inline bool has_verify_type() const;
  inline void clear_verify_type();
  static const int kVerifyTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 verify_type() const;
  inline void set_verify_type(::google::protobuf::uint32 value);

  // required string verify_msg = 4;
  inline bool has_verify_msg() const;
  inline void clear_verify_msg();
  static const int kVerifyMsgFieldNumber = 4;
  inline const ::std::string& verify_msg() const;
  inline void set_verify_msg(const ::std::string& value);
  inline void set_verify_msg(const char* value);
  inline void set_verify_msg(const char* value, size_t size);
  inline ::std::string* mutable_verify_msg();
  inline ::std::string* release_verify_msg();
  inline void set_allocated_verify_msg(::std::string* verify_msg);

  // optional uint64 group_manager_id = 5;
  inline bool has_group_manager_id() const;
  inline void clear_group_manager_id();
  static const int kGroupManagerIdFieldNumber = 5;
  inline ::google::protobuf::uint64 group_manager_id() const;
  inline void set_group_manager_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.JoinGroupVerifyRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_verify_type();
  inline void clear_has_verify_type();
  inline void set_has_verify_msg();
  inline void clear_has_verify_msg();
  inline void set_has_group_manager_id();
  inline void clear_has_group_manager_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* verify_msg_;
  ::google::protobuf::uint64 group_manager_id_;
  ::google::protobuf::uint32 verify_type_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static JoinGroupVerifyRequest* default_instance_;
};
// -------------------------------------------------------------------

class JoinGroupVerifyResponse : public ::google::protobuf::Message {
 public:
  JoinGroupVerifyResponse();
  virtual ~JoinGroupVerifyResponse();

  JoinGroupVerifyResponse(const JoinGroupVerifyResponse& from);

  inline JoinGroupVerifyResponse& operator=(const JoinGroupVerifyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGroupVerifyResponse& default_instance();

  void Swap(JoinGroupVerifyResponse* other);

  // implements Message ----------------------------------------------

  JoinGroupVerifyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinGroupVerifyResponse& from);
  void MergeFrom(const JoinGroupVerifyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TerminalProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::TerminalProtocol::Result& result() const;
  inline ::TerminalProtocol::Result* mutable_result();
  inline ::TerminalProtocol::Result* release_result();
  inline void set_allocated_result(::TerminalProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.JoinGroupVerifyResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TerminalProtocol::Result* result_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static JoinGroupVerifyResponse* default_instance_;
};
// -------------------------------------------------------------------

class JoinGroupConfirmRequest : public ::google::protobuf::Message {
 public:
  JoinGroupConfirmRequest();
  virtual ~JoinGroupConfirmRequest();

  JoinGroupConfirmRequest(const JoinGroupConfirmRequest& from);

  inline JoinGroupConfirmRequest& operator=(const JoinGroupConfirmRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGroupConfirmRequest& default_instance();

  void Swap(JoinGroupConfirmRequest* other);

  // implements Message ----------------------------------------------

  JoinGroupConfirmRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinGroupConfirmRequest& from);
  void MergeFrom(const JoinGroupConfirmRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TerminalProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::TerminalProtocol::Result& result() const;
  inline ::TerminalProtocol::Result* mutable_result();
  inline ::TerminalProtocol::Result* release_result();
  inline void set_allocated_result(::TerminalProtocol::Result* result);

  // required uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_user_id = 3;
  inline bool has_group_user_id() const;
  inline void clear_group_user_id();
  static const int kGroupUserIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_user_id() const;
  inline void set_group_user_id(::google::protobuf::uint64 value);

  // optional uint64 group_id = 4;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 4;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.JoinGroupConfirmRequest)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_user_id();
  inline void clear_has_group_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TerminalProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static JoinGroupConfirmRequest* default_instance_;
};
// -------------------------------------------------------------------

class JoinGroupNotify : public ::google::protobuf::Message {
 public:
  JoinGroupNotify();
  virtual ~JoinGroupNotify();

  JoinGroupNotify(const JoinGroupNotify& from);

  inline JoinGroupNotify& operator=(const JoinGroupNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGroupNotify& default_instance();

  void Swap(JoinGroupNotify* other);

  // implements Message ----------------------------------------------

  JoinGroupNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinGroupNotify& from);
  void MergeFrom(const JoinGroupNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TerminalProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::TerminalProtocol::Result& result() const;
  inline ::TerminalProtocol::Result* mutable_result();
  inline ::TerminalProtocol::Result* release_result();
  inline void set_allocated_result(::TerminalProtocol::Result* result);

  // required uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint64 group_manager_id = 4;
  inline bool has_group_manager_id() const;
  inline void clear_group_manager_id();
  static const int kGroupManagerIdFieldNumber = 4;
  inline ::google::protobuf::uint64 group_manager_id() const;
  inline void set_group_manager_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.JoinGroupNotify)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_manager_id();
  inline void clear_has_group_manager_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TerminalProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 group_manager_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static JoinGroupNotify* default_instance_;
};
// -------------------------------------------------------------------

class ExitGroupRequest : public ::google::protobuf::Message {
 public:
  ExitGroupRequest();
  virtual ~ExitGroupRequest();

  ExitGroupRequest(const ExitGroupRequest& from);

  inline ExitGroupRequest& operator=(const ExitGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitGroupRequest& default_instance();

  void Swap(ExitGroupRequest* other);

  // implements Message ----------------------------------------------

  ExitGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitGroupRequest& from);
  void MergeFrom(const ExitGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.ExitGroupRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ExitGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class ExitGroupResponse : public ::google::protobuf::Message {
 public:
  ExitGroupResponse();
  virtual ~ExitGroupResponse();

  ExitGroupResponse(const ExitGroupResponse& from);

  inline ExitGroupResponse& operator=(const ExitGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitGroupResponse& default_instance();

  void Swap(ExitGroupResponse* other);

  // implements Message ----------------------------------------------

  ExitGroupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitGroupResponse& from);
  void MergeFrom(const ExitGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // required .TerminalProtocol.Result result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline const ::TerminalProtocol::Result& result() const;
  inline ::TerminalProtocol::Result* mutable_result();
  inline ::TerminalProtocol::Result* release_result();
  inline void set_allocated_result(::TerminalProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.ExitGroupResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::TerminalProtocol::Result* result_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ExitGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupUserListRequest : public ::google::protobuf::Message {
 public:
  GetGroupUserListRequest();
  virtual ~GetGroupUserListRequest();

  GetGroupUserListRequest(const GetGroupUserListRequest& from);

  inline GetGroupUserListRequest& operator=(const GetGroupUserListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupUserListRequest& default_instance();

  void Swap(GetGroupUserListRequest* other);

  // implements Message ----------------------------------------------

  GetGroupUserListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupUserListRequest& from);
  void MergeFrom(const GetGroupUserListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetGroupUserListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetGroupUserListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupUserListResponse : public ::google::protobuf::Message {
 public:
  GetGroupUserListResponse();
  virtual ~GetGroupUserListResponse();

  GetGroupUserListResponse(const GetGroupUserListResponse& from);

  inline GetGroupUserListResponse& operator=(const GetGroupUserListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupUserListResponse& default_instance();

  void Swap(GetGroupUserListResponse* other);

  // implements Message ----------------------------------------------

  GetGroupUserListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupUserListResponse& from);
  void MergeFrom(const GetGroupUserListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 user_id = 1;
  inline int user_id_size() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id(int index) const;
  inline void set_user_id(int index, ::google::protobuf::uint64 value);
  inline void add_user_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_id();

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetGroupUserListResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetGroupUserListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupUserInfoRequest : public ::google::protobuf::Message {
 public:
  GetGroupUserInfoRequest();
  virtual ~GetGroupUserInfoRequest();

  GetGroupUserInfoRequest(const GetGroupUserInfoRequest& from);

  inline GetGroupUserInfoRequest& operator=(const GetGroupUserInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupUserInfoRequest& default_instance();

  void Swap(GetGroupUserInfoRequest* other);

  // implements Message ----------------------------------------------

  GetGroupUserInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupUserInfoRequest& from);
  void MergeFrom(const GetGroupUserInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // repeated uint64 user_id = 2;
  inline int user_id_size() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id(int index) const;
  inline void set_user_id(int index, ::google::protobuf::uint64 value);
  inline void add_user_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_id();

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetGroupUserInfoRequest)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetGroupUserInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GroupUserInfo : public ::google::protobuf::Message {
 public:
  GroupUserInfo();
  virtual ~GroupUserInfo();

  GroupUserInfo(const GroupUserInfo& from);

  inline GroupUserInfo& operator=(const GroupUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupUserInfo& default_instance();

  void Swap(GroupUserInfo* other);

  // implements Message ----------------------------------------------

  GroupUserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupUserInfo& from);
  void MergeFrom(const GroupUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional uint32 online_state = 3;
  inline bool has_online_state() const;
  inline void clear_online_state();
  static const int kOnlineStateFieldNumber = 3;
  inline ::google::protobuf::uint32 online_state() const;
  inline void set_online_state(::google::protobuf::uint32 value);

  // optional uint32 avatar_id = 4;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 4;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // optional string avatar = 5;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 5;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // optional uint32 role = 6;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 6;
  inline ::google::protobuf::uint32 role() const;
  inline void set_role(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GroupUserInfo)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_online_state();
  inline void clear_has_online_state();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_role();
  inline void clear_has_role();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* nick_name_;
  ::google::protobuf::uint32 online_state_;
  ::google::protobuf::uint32 avatar_id_;
  ::std::string* avatar_;
  ::google::protobuf::uint32 role_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GroupUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupUserInfoResponse : public ::google::protobuf::Message {
 public:
  GetGroupUserInfoResponse();
  virtual ~GetGroupUserInfoResponse();

  GetGroupUserInfoResponse(const GetGroupUserInfoResponse& from);

  inline GetGroupUserInfoResponse& operator=(const GetGroupUserInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupUserInfoResponse& default_instance();

  void Swap(GetGroupUserInfoResponse* other);

  // implements Message ----------------------------------------------

  GetGroupUserInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupUserInfoResponse& from);
  void MergeFrom(const GetGroupUserInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // repeated .TerminalProtocol.GroupUserInfo user_info = 2;
  inline int user_info_size() const;
  inline void clear_user_info();
  static const int kUserInfoFieldNumber = 2;
  inline const ::TerminalProtocol::GroupUserInfo& user_info(int index) const;
  inline ::TerminalProtocol::GroupUserInfo* mutable_user_info(int index);
  inline ::TerminalProtocol::GroupUserInfo* add_user_info();
  inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupUserInfo >&
      user_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupUserInfo >*
      mutable_user_info();

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetGroupUserInfoResponse)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupUserInfo > user_info_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetGroupUserInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class SearchGroupUserListRequest : public ::google::protobuf::Message {
 public:
  SearchGroupUserListRequest();
  virtual ~SearchGroupUserListRequest();

  SearchGroupUserListRequest(const SearchGroupUserListRequest& from);

  inline SearchGroupUserListRequest& operator=(const SearchGroupUserListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchGroupUserListRequest& default_instance();

  void Swap(SearchGroupUserListRequest* other);

  // implements Message ----------------------------------------------

  SearchGroupUserListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchGroupUserListRequest& from);
  void MergeFrom(const SearchGroupUserListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // required string search_string = 2;
  inline bool has_search_string() const;
  inline void clear_search_string();
  static const int kSearchStringFieldNumber = 2;
  inline const ::std::string& search_string() const;
  inline void set_search_string(const ::std::string& value);
  inline void set_search_string(const char* value);
  inline void set_search_string(const char* value, size_t size);
  inline ::std::string* mutable_search_string();
  inline ::std::string* release_search_string();
  inline void set_allocated_search_string(::std::string* search_string);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.SearchGroupUserListRequest)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_search_string();
  inline void clear_has_search_string();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* search_string_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static SearchGroupUserListRequest* default_instance_;
};
// -------------------------------------------------------------------

class SearchGroupUserListResponse : public ::google::protobuf::Message {
 public:
  SearchGroupUserListResponse();
  virtual ~SearchGroupUserListResponse();

  SearchGroupUserListResponse(const SearchGroupUserListResponse& from);

  inline SearchGroupUserListResponse& operator=(const SearchGroupUserListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchGroupUserListResponse& default_instance();

  void Swap(SearchGroupUserListResponse* other);

  // implements Message ----------------------------------------------

  SearchGroupUserListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchGroupUserListResponse& from);
  void MergeFrom(const SearchGroupUserListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // repeated .TerminalProtocol.GroupUserInfo list_item = 2;
  inline int list_item_size() const;
  inline void clear_list_item();
  static const int kListItemFieldNumber = 2;
  inline const ::TerminalProtocol::GroupUserInfo& list_item(int index) const;
  inline ::TerminalProtocol::GroupUserInfo* mutable_list_item(int index);
  inline ::TerminalProtocol::GroupUserInfo* add_list_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupUserInfo >&
      list_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupUserInfo >*
      mutable_list_item();

  // @@protoc_insertion_point(class_scope:TerminalProtocol.SearchGroupUserListResponse)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupUserInfo > list_item_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static SearchGroupUserListResponse* default_instance_;
};
// -------------------------------------------------------------------

class AddFriendRequest : public ::google::protobuf::Message {
 public:
  AddFriendRequest();
  virtual ~AddFriendRequest();

  AddFriendRequest(const AddFriendRequest& from);

  inline AddFriendRequest& operator=(const AddFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendRequest& default_instance();

  void Swap(AddFriendRequest* other);

  // implements Message ----------------------------------------------

  AddFriendRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFriendRequest& from);
  void MergeFrom(const AddFriendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 friend_id = 2;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.AddFriendRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AddFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddFriendResponse : public ::google::protobuf::Message {
 public:
  AddFriendResponse();
  virtual ~AddFriendResponse();

  AddFriendResponse(const AddFriendResponse& from);

  inline AddFriendResponse& operator=(const AddFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendResponse& default_instance();

  void Swap(AddFriendResponse* other);

  // implements Message ----------------------------------------------

  AddFriendResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFriendResponse& from);
  void MergeFrom(const AddFriendResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 verify_type = 1;
  inline bool has_verify_type() const;
  inline void clear_verify_type();
  static const int kVerifyTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 verify_type() const;
  inline void set_verify_type(::google::protobuf::uint32 value);

  // optional uint32 question_type = 2;
  inline bool has_question_type() const;
  inline void clear_question_type();
  static const int kQuestionTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 question_type() const;
  inline void set_question_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.AddFriendResponse)
 private:
  inline void set_has_verify_type();
  inline void clear_has_verify_type();
  inline void set_has_question_type();
  inline void clear_has_question_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 verify_type_;
  ::google::protobuf::uint32 question_type_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AddFriendResponse* default_instance_;
};
// -------------------------------------------------------------------

class AddFriendVerifyRequest : public ::google::protobuf::Message {
 public:
  AddFriendVerifyRequest();
  virtual ~AddFriendVerifyRequest();

  AddFriendVerifyRequest(const AddFriendVerifyRequest& from);

  inline AddFriendVerifyRequest& operator=(const AddFriendVerifyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendVerifyRequest& default_instance();

  void Swap(AddFriendVerifyRequest* other);

  // implements Message ----------------------------------------------

  AddFriendVerifyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFriendVerifyRequest& from);
  void MergeFrom(const AddFriendVerifyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 friend_id = 2;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 question_type = 4;
  inline bool has_question_type() const;
  inline void clear_question_type();
  static const int kQuestionTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 question_type() const;
  inline void set_question_type(::google::protobuf::uint32 value);

  // optional string verify_msg = 5;
  inline bool has_verify_msg() const;
  inline void clear_verify_msg();
  static const int kVerifyMsgFieldNumber = 5;
  inline const ::std::string& verify_msg() const;
  inline void set_verify_msg(const ::std::string& value);
  inline void set_verify_msg(const char* value);
  inline void set_verify_msg(const char* value, size_t size);
  inline ::std::string* mutable_verify_msg();
  inline ::std::string* release_verify_msg();
  inline void set_allocated_verify_msg(::std::string* verify_msg);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.AddFriendVerifyRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_question_type();
  inline void clear_has_question_type();
  inline void set_has_verify_msg();
  inline void clear_has_verify_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 question_type_;
  ::std::string* verify_msg_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AddFriendVerifyRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddFriendVerifyResponse : public ::google::protobuf::Message {
 public:
  AddFriendVerifyResponse();
  virtual ~AddFriendVerifyResponse();

  AddFriendVerifyResponse(const AddFriendVerifyResponse& from);

  inline AddFriendVerifyResponse& operator=(const AddFriendVerifyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendVerifyResponse& default_instance();

  void Swap(AddFriendVerifyResponse* other);

  // implements Message ----------------------------------------------

  AddFriendVerifyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFriendVerifyResponse& from);
  void MergeFrom(const AddFriendVerifyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 friend_id = 2;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // required uint32 is_allow = 3;
  inline bool has_is_allow() const;
  inline void clear_is_allow();
  static const int kIsAllowFieldNumber = 3;
  inline ::google::protobuf::uint32 is_allow() const;
  inline void set_is_allow(::google::protobuf::uint32 value);

  // optional string reason = 4;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 4;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.AddFriendVerifyResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_is_allow();
  inline void clear_has_is_allow();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  ::std::string* reason_;
  ::google::protobuf::uint32 is_allow_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AddFriendVerifyResponse* default_instance_;
};
// -------------------------------------------------------------------

class AddFriendConfirmRequest : public ::google::protobuf::Message {
 public:
  AddFriendConfirmRequest();
  virtual ~AddFriendConfirmRequest();

  AddFriendConfirmRequest(const AddFriendConfirmRequest& from);

  inline AddFriendConfirmRequest& operator=(const AddFriendConfirmRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendConfirmRequest& default_instance();

  void Swap(AddFriendConfirmRequest* other);

  // implements Message ----------------------------------------------

  AddFriendConfirmRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFriendConfirmRequest& from);
  void MergeFrom(const AddFriendConfirmRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TerminalProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::TerminalProtocol::Result& result() const;
  inline ::TerminalProtocol::Result* mutable_result();
  inline ::TerminalProtocol::Result* release_result();
  inline void set_allocated_result(::TerminalProtocol::Result* result);

  // required uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 friend_id = 3;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 3;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.AddFriendConfirmRequest)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TerminalProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AddFriendConfirmRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddFriendNotify : public ::google::protobuf::Message {
 public:
  AddFriendNotify();
  virtual ~AddFriendNotify();

  AddFriendNotify(const AddFriendNotify& from);

  inline AddFriendNotify& operator=(const AddFriendNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendNotify& default_instance();

  void Swap(AddFriendNotify* other);

  // implements Message ----------------------------------------------

  AddFriendNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFriendNotify& from);
  void MergeFrom(const AddFriendNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TerminalProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::TerminalProtocol::Result& result() const;
  inline ::TerminalProtocol::Result* mutable_result();
  inline ::TerminalProtocol::Result* release_result();
  inline void set_allocated_result(::TerminalProtocol::Result* result);

  // required uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 friend_id = 3;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 3;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.AddFriendNotify)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TerminalProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AddFriendNotify* default_instance_;
};
// -------------------------------------------------------------------

class DeleteFriendRequest : public ::google::protobuf::Message {
 public:
  DeleteFriendRequest();
  virtual ~DeleteFriendRequest();

  DeleteFriendRequest(const DeleteFriendRequest& from);

  inline DeleteFriendRequest& operator=(const DeleteFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFriendRequest& default_instance();

  void Swap(DeleteFriendRequest* other);

  // implements Message ----------------------------------------------

  DeleteFriendRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteFriendRequest& from);
  void MergeFrom(const DeleteFriendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 friend_id = 2;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.DeleteFriendRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static DeleteFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteFriendNotify : public ::google::protobuf::Message {
 public:
  DeleteFriendNotify();
  virtual ~DeleteFriendNotify();

  DeleteFriendNotify(const DeleteFriendNotify& from);

  inline DeleteFriendNotify& operator=(const DeleteFriendNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFriendNotify& default_instance();

  void Swap(DeleteFriendNotify* other);

  // implements Message ----------------------------------------------

  DeleteFriendNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteFriendNotify& from);
  void MergeFrom(const DeleteFriendNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 friend_id = 2;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.DeleteFriendNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static DeleteFriendNotify* default_instance_;
};
// -------------------------------------------------------------------

class UpdateFriendBranchRequest : public ::google::protobuf::Message {
 public:
  UpdateFriendBranchRequest();
  virtual ~UpdateFriendBranchRequest();

  UpdateFriendBranchRequest(const UpdateFriendBranchRequest& from);

  inline UpdateFriendBranchRequest& operator=(const UpdateFriendBranchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFriendBranchRequest& default_instance();

  void Swap(UpdateFriendBranchRequest* other);

  // implements Message ----------------------------------------------

  UpdateFriendBranchRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateFriendBranchRequest& from);
  void MergeFrom(const UpdateFriendBranchRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 friend_id = 2;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // required uint64 branch_id = 3;
  inline bool has_branch_id() const;
  inline void clear_branch_id();
  static const int kBranchIdFieldNumber = 3;
  inline ::google::protobuf::uint64 branch_id() const;
  inline void set_branch_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UpdateFriendBranchRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_branch_id();
  inline void clear_has_branch_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  ::google::protobuf::uint64 branch_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UpdateFriendBranchRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddBranchRequest : public ::google::protobuf::Message {
 public:
  AddBranchRequest();
  virtual ~AddBranchRequest();

  AddBranchRequest(const AddBranchRequest& from);

  inline AddBranchRequest& operator=(const AddBranchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddBranchRequest& default_instance();

  void Swap(AddBranchRequest* other);

  // implements Message ----------------------------------------------

  AddBranchRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddBranchRequest& from);
  void MergeFrom(const AddBranchRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string branch_name = 2;
  inline bool has_branch_name() const;
  inline void clear_branch_name();
  static const int kBranchNameFieldNumber = 2;
  inline const ::std::string& branch_name() const;
  inline void set_branch_name(const ::std::string& value);
  inline void set_branch_name(const char* value);
  inline void set_branch_name(const char* value, size_t size);
  inline ::std::string* mutable_branch_name();
  inline ::std::string* release_branch_name();
  inline void set_allocated_branch_name(::std::string* branch_name);

  // optional uint32 branch_sort = 3;
  inline bool has_branch_sort() const;
  inline void clear_branch_sort();
  static const int kBranchSortFieldNumber = 3;
  inline ::google::protobuf::uint32 branch_sort() const;
  inline void set_branch_sort(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.AddBranchRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_branch_name();
  inline void clear_has_branch_name();
  inline void set_has_branch_sort();
  inline void clear_has_branch_sort();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* branch_name_;
  ::google::protobuf::uint32 branch_sort_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AddBranchRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddBranchResponse : public ::google::protobuf::Message {
 public:
  AddBranchResponse();
  virtual ~AddBranchResponse();

  AddBranchResponse(const AddBranchResponse& from);

  inline AddBranchResponse& operator=(const AddBranchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddBranchResponse& default_instance();

  void Swap(AddBranchResponse* other);

  // implements Message ----------------------------------------------

  AddBranchResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddBranchResponse& from);
  void MergeFrom(const AddBranchResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 branch_id = 2;
  inline bool has_branch_id() const;
  inline void clear_branch_id();
  static const int kBranchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 branch_id() const;
  inline void set_branch_id(::google::protobuf::uint64 value);

  // optional string branch_name = 3;
  inline bool has_branch_name() const;
  inline void clear_branch_name();
  static const int kBranchNameFieldNumber = 3;
  inline const ::std::string& branch_name() const;
  inline void set_branch_name(const ::std::string& value);
  inline void set_branch_name(const char* value);
  inline void set_branch_name(const char* value, size_t size);
  inline ::std::string* mutable_branch_name();
  inline ::std::string* release_branch_name();
  inline void set_allocated_branch_name(::std::string* branch_name);

  // optional uint32 branch_sort = 4;
  inline bool has_branch_sort() const;
  inline void clear_branch_sort();
  static const int kBranchSortFieldNumber = 4;
  inline ::google::protobuf::uint32 branch_sort() const;
  inline void set_branch_sort(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.AddBranchResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_branch_id();
  inline void clear_has_branch_id();
  inline void set_has_branch_name();
  inline void clear_has_branch_name();
  inline void set_has_branch_sort();
  inline void clear_has_branch_sort();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 branch_id_;
  ::std::string* branch_name_;
  ::google::protobuf::uint32 branch_sort_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AddBranchResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteBranchRequest : public ::google::protobuf::Message {
 public:
  DeleteBranchRequest();
  virtual ~DeleteBranchRequest();

  DeleteBranchRequest(const DeleteBranchRequest& from);

  inline DeleteBranchRequest& operator=(const DeleteBranchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteBranchRequest& default_instance();

  void Swap(DeleteBranchRequest* other);

  // implements Message ----------------------------------------------

  DeleteBranchRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteBranchRequest& from);
  void MergeFrom(const DeleteBranchRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 branch_id = 2;
  inline bool has_branch_id() const;
  inline void clear_branch_id();
  static const int kBranchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 branch_id() const;
  inline void set_branch_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.DeleteBranchRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_branch_id();
  inline void clear_has_branch_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 branch_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static DeleteBranchRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateBranchNameRequest : public ::google::protobuf::Message {
 public:
  UpdateBranchNameRequest();
  virtual ~UpdateBranchNameRequest();

  UpdateBranchNameRequest(const UpdateBranchNameRequest& from);

  inline UpdateBranchNameRequest& operator=(const UpdateBranchNameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateBranchNameRequest& default_instance();

  void Swap(UpdateBranchNameRequest* other);

  // implements Message ----------------------------------------------

  UpdateBranchNameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateBranchNameRequest& from);
  void MergeFrom(const UpdateBranchNameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 branch_id = 2;
  inline bool has_branch_id() const;
  inline void clear_branch_id();
  static const int kBranchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 branch_id() const;
  inline void set_branch_id(::google::protobuf::uint64 value);

  // optional string branch_name = 3;
  inline bool has_branch_name() const;
  inline void clear_branch_name();
  static const int kBranchNameFieldNumber = 3;
  inline const ::std::string& branch_name() const;
  inline void set_branch_name(const ::std::string& value);
  inline void set_branch_name(const char* value);
  inline void set_branch_name(const char* value, size_t size);
  inline ::std::string* mutable_branch_name();
  inline ::std::string* release_branch_name();
  inline void set_allocated_branch_name(::std::string* branch_name);

  // optional uint32 branch_sort = 4;
  inline bool has_branch_sort() const;
  inline void clear_branch_sort();
  static const int kBranchSortFieldNumber = 4;
  inline ::google::protobuf::uint32 branch_sort() const;
  inline void set_branch_sort(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UpdateBranchNameRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_branch_id();
  inline void clear_has_branch_id();
  inline void set_has_branch_name();
  inline void clear_has_branch_name();
  inline void set_has_branch_sort();
  inline void clear_has_branch_sort();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 branch_id_;
  ::std::string* branch_name_;
  ::google::protobuf::uint32 branch_sort_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UpdateBranchNameRequest* default_instance_;
};
// -------------------------------------------------------------------

class KickoutGroupUserRequest : public ::google::protobuf::Message {
 public:
  KickoutGroupUserRequest();
  virtual ~KickoutGroupUserRequest();

  KickoutGroupUserRequest(const KickoutGroupUserRequest& from);

  inline KickoutGroupUserRequest& operator=(const KickoutGroupUserRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickoutGroupUserRequest& default_instance();

  void Swap(KickoutGroupUserRequest* other);

  // implements Message ----------------------------------------------

  KickoutGroupUserRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickoutGroupUserRequest& from);
  void MergeFrom(const KickoutGroupUserRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 group_user_id = 2;
  inline bool has_group_user_id() const;
  inline void clear_group_user_id();
  static const int kGroupUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_user_id() const;
  inline void set_group_user_id(::google::protobuf::uint64 value);

  // optional uint64 group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.KickoutGroupUserRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_user_id();
  inline void clear_has_group_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static KickoutGroupUserRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetGroupManagerRequest : public ::google::protobuf::Message {
 public:
  SetGroupManagerRequest();
  virtual ~SetGroupManagerRequest();

  SetGroupManagerRequest(const SetGroupManagerRequest& from);

  inline SetGroupManagerRequest& operator=(const SetGroupManagerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupManagerRequest& default_instance();

  void Swap(SetGroupManagerRequest* other);

  // implements Message ----------------------------------------------

  SetGroupManagerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGroupManagerRequest& from);
  void MergeFrom(const SetGroupManagerRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint64 group_user_id = 3;
  inline bool has_group_user_id() const;
  inline void clear_group_user_id();
  static const int kGroupUserIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_user_id() const;
  inline void set_group_user_id(::google::protobuf::uint64 value);

  // optional uint32 control_value = 4;
  inline bool has_control_value() const;
  inline void clear_control_value();
  static const int kControlValueFieldNumber = 4;
  inline ::google::protobuf::uint32 control_value() const;
  inline void set_control_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.SetGroupManagerRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_user_id();
  inline void clear_has_group_user_id();
  inline void set_has_control_value();
  inline void clear_has_control_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 group_user_id_;
  ::google::protobuf::uint32 control_value_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static SetGroupManagerRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateFriendRemarkRequest : public ::google::protobuf::Message {
 public:
  UpdateFriendRemarkRequest();
  virtual ~UpdateFriendRemarkRequest();

  UpdateFriendRemarkRequest(const UpdateFriendRemarkRequest& from);

  inline UpdateFriendRemarkRequest& operator=(const UpdateFriendRemarkRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFriendRemarkRequest& default_instance();

  void Swap(UpdateFriendRemarkRequest* other);

  // implements Message ----------------------------------------------

  UpdateFriendRemarkRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateFriendRemarkRequest& from);
  void MergeFrom(const UpdateFriendRemarkRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 friend_id = 2;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // optional string remark = 3;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 3;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UpdateFriendRemarkRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_remark();
  inline void clear_has_remark();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  ::std::string* remark_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UpdateFriendRemarkRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetBranchListRequest : public ::google::protobuf::Message {
 public:
  GetBranchListRequest();
  virtual ~GetBranchListRequest();

  GetBranchListRequest(const GetBranchListRequest& from);

  inline GetBranchListRequest& operator=(const GetBranchListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBranchListRequest& default_instance();

  void Swap(GetBranchListRequest* other);

  // implements Message ----------------------------------------------

  GetBranchListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBranchListRequest& from);
  void MergeFrom(const GetBranchListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 version_id = 2;
  inline bool has_version_id() const;
  inline void clear_version_id();
  static const int kVersionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 version_id() const;
  inline void set_version_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetBranchListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_version_id();
  inline void clear_has_version_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 version_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetBranchListRequest* default_instance_;
};
// -------------------------------------------------------------------

class UserIdRemarkItem : public ::google::protobuf::Message {
 public:
  UserIdRemarkItem();
  virtual ~UserIdRemarkItem();

  UserIdRemarkItem(const UserIdRemarkItem& from);

  inline UserIdRemarkItem& operator=(const UserIdRemarkItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserIdRemarkItem& default_instance();

  void Swap(UserIdRemarkItem* other);

  // implements Message ----------------------------------------------

  UserIdRemarkItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserIdRemarkItem& from);
  void MergeFrom(const UserIdRemarkItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string user_remark = 2;
  inline bool has_user_remark() const;
  inline void clear_user_remark();
  static const int kUserRemarkFieldNumber = 2;
  inline const ::std::string& user_remark() const;
  inline void set_user_remark(const ::std::string& value);
  inline void set_user_remark(const char* value);
  inline void set_user_remark(const char* value, size_t size);
  inline ::std::string* mutable_user_remark();
  inline ::std::string* release_user_remark();
  inline void set_allocated_user_remark(::std::string* user_remark);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UserIdRemarkItem)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_remark();
  inline void clear_has_user_remark();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* user_remark_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UserIdRemarkItem* default_instance_;
};
// -------------------------------------------------------------------

class BranchListItem : public ::google::protobuf::Message {
 public:
  BranchListItem();
  virtual ~BranchListItem();

  BranchListItem(const BranchListItem& from);

  inline BranchListItem& operator=(const BranchListItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BranchListItem& default_instance();

  void Swap(BranchListItem* other);

  // implements Message ----------------------------------------------

  BranchListItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BranchListItem& from);
  void MergeFrom(const BranchListItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 branch_id = 1;
  inline bool has_branch_id() const;
  inline void clear_branch_id();
  static const int kBranchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 branch_id() const;
  inline void set_branch_id(::google::protobuf::uint64 value);

  // optional string branch_name = 2;
  inline bool has_branch_name() const;
  inline void clear_branch_name();
  static const int kBranchNameFieldNumber = 2;
  inline const ::std::string& branch_name() const;
  inline void set_branch_name(const ::std::string& value);
  inline void set_branch_name(const char* value);
  inline void set_branch_name(const char* value, size_t size);
  inline ::std::string* mutable_branch_name();
  inline ::std::string* release_branch_name();
  inline void set_allocated_branch_name(::std::string* branch_name);

  // optional uint32 branch_sort = 3;
  inline bool has_branch_sort() const;
  inline void clear_branch_sort();
  static const int kBranchSortFieldNumber = 3;
  inline ::google::protobuf::uint32 branch_sort() const;
  inline void set_branch_sort(::google::protobuf::uint32 value);

  // repeated .TerminalProtocol.UserIdRemarkItem users = 4;
  inline int users_size() const;
  inline void clear_users();
  static const int kUsersFieldNumber = 4;
  inline const ::TerminalProtocol::UserIdRemarkItem& users(int index) const;
  inline ::TerminalProtocol::UserIdRemarkItem* mutable_users(int index);
  inline ::TerminalProtocol::UserIdRemarkItem* add_users();
  inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::UserIdRemarkItem >&
      users() const;
  inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::UserIdRemarkItem >*
      mutable_users();

  // @@protoc_insertion_point(class_scope:TerminalProtocol.BranchListItem)
 private:
  inline void set_has_branch_id();
  inline void clear_has_branch_id();
  inline void set_has_branch_name();
  inline void clear_has_branch_name();
  inline void set_has_branch_sort();
  inline void clear_has_branch_sort();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 branch_id_;
  ::std::string* branch_name_;
  ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::UserIdRemarkItem > users_;
  ::google::protobuf::uint32 branch_sort_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BranchListItem* default_instance_;
};
// -------------------------------------------------------------------

class GetBranchListResponse : public ::google::protobuf::Message {
 public:
  GetBranchListResponse();
  virtual ~GetBranchListResponse();

  GetBranchListResponse(const GetBranchListResponse& from);

  inline GetBranchListResponse& operator=(const GetBranchListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBranchListResponse& default_instance();

  void Swap(GetBranchListResponse* other);

  // implements Message ----------------------------------------------

  GetBranchListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBranchListResponse& from);
  void MergeFrom(const GetBranchListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 version_id = 2;
  inline bool has_version_id() const;
  inline void clear_version_id();
  static const int kVersionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 version_id() const;
  inline void set_version_id(::google::protobuf::uint64 value);

  // repeated .TerminalProtocol.BranchListItem list_item = 3;
  inline int list_item_size() const;
  inline void clear_list_item();
  static const int kListItemFieldNumber = 3;
  inline const ::TerminalProtocol::BranchListItem& list_item(int index) const;
  inline ::TerminalProtocol::BranchListItem* mutable_list_item(int index);
  inline ::TerminalProtocol::BranchListItem* add_list_item();
  inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::BranchListItem >&
      list_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::BranchListItem >*
      mutable_list_item();

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetBranchListResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_version_id();
  inline void clear_has_version_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 version_id_;
  ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::BranchListItem > list_item_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetBranchListResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetFriendOptionRequest : public ::google::protobuf::Message {
 public:
  SetFriendOptionRequest();
  virtual ~SetFriendOptionRequest();

  SetFriendOptionRequest(const SetFriendOptionRequest& from);

  inline SetFriendOptionRequest& operator=(const SetFriendOptionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFriendOptionRequest& default_instance();

  void Swap(SetFriendOptionRequest* other);

  // implements Message ----------------------------------------------

  SetFriendOptionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetFriendOptionRequest& from);
  void MergeFrom(const SetFriendOptionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 verify_type = 2;
  inline bool has_verify_type() const;
  inline void clear_verify_type();
  static const int kVerifyTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 verify_type() const;
  inline void set_verify_type(::google::protobuf::uint32 value);

  // optional uint32 question_type = 3;
  inline bool has_question_type() const;
  inline void clear_question_type();
  static const int kQuestionTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 question_type() const;
  inline void set_question_type(::google::protobuf::uint32 value);

  // optional string answer = 4;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 4;
  inline const ::std::string& answer() const;
  inline void set_answer(const ::std::string& value);
  inline void set_answer(const char* value);
  inline void set_answer(const char* value, size_t size);
  inline ::std::string* mutable_answer();
  inline ::std::string* release_answer();
  inline void set_allocated_answer(::std::string* answer);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.SetFriendOptionRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_verify_type();
  inline void clear_has_verify_type();
  inline void set_has_question_type();
  inline void clear_has_question_type();
  inline void set_has_answer();
  inline void clear_has_answer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 verify_type_;
  ::google::protobuf::uint32 question_type_;
  ::std::string* answer_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static SetFriendOptionRequest* default_instance_;
};
// -------------------------------------------------------------------

class GroupManagerVerifyRequest : public ::google::protobuf::Message {
 public:
  GroupManagerVerifyRequest();
  virtual ~GroupManagerVerifyRequest();

  GroupManagerVerifyRequest(const GroupManagerVerifyRequest& from);

  inline GroupManagerVerifyRequest& operator=(const GroupManagerVerifyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupManagerVerifyRequest& default_instance();

  void Swap(GroupManagerVerifyRequest* other);

  // implements Message ----------------------------------------------

  GroupManagerVerifyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupManagerVerifyRequest& from);
  void MergeFrom(const GroupManagerVerifyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional string msg = 3;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 3;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GroupManagerVerifyRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* msg_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GroupManagerVerifyRequest* default_instance_;
};
// -------------------------------------------------------------------

class GroupManagerVerifyResponse : public ::google::protobuf::Message {
 public:
  GroupManagerVerifyResponse();
  virtual ~GroupManagerVerifyResponse();

  GroupManagerVerifyResponse(const GroupManagerVerifyResponse& from);

  inline GroupManagerVerifyResponse& operator=(const GroupManagerVerifyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupManagerVerifyResponse& default_instance();

  void Swap(GroupManagerVerifyResponse* other);

  // implements Message ----------------------------------------------

  GroupManagerVerifyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupManagerVerifyResponse& from);
  void MergeFrom(const GroupManagerVerifyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint32 is_allow = 3;
  inline bool has_is_allow() const;
  inline void clear_is_allow();
  static const int kIsAllowFieldNumber = 3;
  inline ::google::protobuf::uint32 is_allow() const;
  inline void set_is_allow(::google::protobuf::uint32 value);

  // optional string reason = 4;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 4;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GroupManagerVerifyResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_is_allow();
  inline void clear_has_is_allow();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* reason_;
  ::google::protobuf::uint32 is_allow_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GroupManagerVerifyResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteGroupRequest : public ::google::protobuf::Message {
 public:
  DeleteGroupRequest();
  virtual ~DeleteGroupRequest();

  DeleteGroupRequest(const DeleteGroupRequest& from);

  inline DeleteGroupRequest& operator=(const DeleteGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteGroupRequest& default_instance();

  void Swap(DeleteGroupRequest* other);

  // implements Message ----------------------------------------------

  DeleteGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteGroupRequest& from);
  void MergeFrom(const DeleteGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.DeleteGroupRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static DeleteGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteGroupResponse : public ::google::protobuf::Message {
 public:
  DeleteGroupResponse();
  virtual ~DeleteGroupResponse();

  DeleteGroupResponse(const DeleteGroupResponse& from);

  inline DeleteGroupResponse& operator=(const DeleteGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteGroupResponse& default_instance();

  void Swap(DeleteGroupResponse* other);

  // implements Message ----------------------------------------------

  DeleteGroupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteGroupResponse& from);
  void MergeFrom(const DeleteGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TerminalProtocol.Result result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline const ::TerminalProtocol::Result& result() const;
  inline ::TerminalProtocol::Result* mutable_result();
  inline ::TerminalProtocol::Result* release_result();
  inline void set_allocated_result(::TerminalProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.DeleteGroupResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TerminalProtocol::Result* result_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static DeleteGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGroupRemarkRequest : public ::google::protobuf::Message {
 public:
  UpdateGroupRemarkRequest();
  virtual ~UpdateGroupRemarkRequest();

  UpdateGroupRemarkRequest(const UpdateGroupRemarkRequest& from);

  inline UpdateGroupRemarkRequest& operator=(const UpdateGroupRemarkRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupRemarkRequest& default_instance();

  void Swap(UpdateGroupRemarkRequest* other);

  // implements Message ----------------------------------------------

  UpdateGroupRemarkRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGroupRemarkRequest& from);
  void MergeFrom(const UpdateGroupRemarkRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // required uint64 group_user_id = 3;
  inline bool has_group_user_id() const;
  inline void clear_group_user_id();
  static const int kGroupUserIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_user_id() const;
  inline void set_group_user_id(::google::protobuf::uint64 value);

  // optional string remark = 4;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 4;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UpdateGroupRemarkRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_user_id();
  inline void clear_has_group_user_id();
  inline void set_has_remark();
  inline void clear_has_remark();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 group_user_id_;
  ::std::string* remark_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UpdateGroupRemarkRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGroupInfoRequest : public ::google::protobuf::Message {
 public:
  UpdateGroupInfoRequest();
  virtual ~UpdateGroupInfoRequest();

  UpdateGroupInfoRequest(const UpdateGroupInfoRequest& from);

  inline UpdateGroupInfoRequest& operator=(const UpdateGroupInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupInfoRequest& default_instance();

  void Swap(UpdateGroupInfoRequest* other);

  // implements Message ----------------------------------------------

  UpdateGroupInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGroupInfoRequest& from);
  void MergeFrom(const UpdateGroupInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional string group_name = 3;
  inline bool has_group_name() const;
  inline void clear_group_name();
  static const int kGroupNameFieldNumber = 3;
  inline const ::std::string& group_name() const;
  inline void set_group_name(const ::std::string& value);
  inline void set_group_name(const char* value);
  inline void set_group_name(const char* value, size_t size);
  inline ::std::string* mutable_group_name();
  inline ::std::string* release_group_name();
  inline void set_allocated_group_name(::std::string* group_name);

  // optional string remark = 4;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 4;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // optional uint32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional string group_intro = 6;
  inline bool has_group_intro() const;
  inline void clear_group_intro();
  static const int kGroupIntroFieldNumber = 6;
  inline const ::std::string& group_intro() const;
  inline void set_group_intro(const ::std::string& value);
  inline void set_group_intro(const char* value);
  inline void set_group_intro(const char* value, size_t size);
  inline ::std::string* mutable_group_intro();
  inline ::std::string* release_group_intro();
  inline void set_allocated_group_intro(::std::string* group_intro);

  // optional string group_notice = 7;
  inline bool has_group_notice() const;
  inline void clear_group_notice();
  static const int kGroupNoticeFieldNumber = 7;
  inline const ::std::string& group_notice() const;
  inline void set_group_notice(const ::std::string& value);
  inline void set_group_notice(const char* value);
  inline void set_group_notice(const char* value, size_t size);
  inline ::std::string* mutable_group_notice();
  inline ::std::string* release_group_notice();
  inline void set_allocated_group_notice(::std::string* group_notice);

  // optional string avatar = 8;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 8;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // optional uint32 avatar_id = 9;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 9;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // optional uint32 sub_type = 10;
  inline bool has_sub_type() const;
  inline void clear_sub_type();
  static const int kSubTypeFieldNumber = 10;
  inline ::google::protobuf::uint32 sub_type() const;
  inline void set_sub_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UpdateGroupInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_name();
  inline void clear_has_group_name();
  inline void set_has_remark();
  inline void clear_has_remark();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_group_intro();
  inline void clear_has_group_intro();
  inline void set_has_group_notice();
  inline void clear_has_group_notice();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_sub_type();
  inline void clear_has_sub_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* group_name_;
  ::std::string* remark_;
  ::std::string* group_intro_;
  ::std::string* group_notice_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 avatar_id_;
  ::std::string* avatar_;
  ::google::protobuf::uint32 sub_type_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UpdateGroupInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGroupOptionRequest : public ::google::protobuf::Message {
 public:
  UpdateGroupOptionRequest();
  virtual ~UpdateGroupOptionRequest();

  UpdateGroupOptionRequest(const UpdateGroupOptionRequest& from);

  inline UpdateGroupOptionRequest& operator=(const UpdateGroupOptionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupOptionRequest& default_instance();

  void Swap(UpdateGroupOptionRequest* other);

  // implements Message ----------------------------------------------

  UpdateGroupOptionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGroupOptionRequest& from);
  void MergeFrom(const UpdateGroupOptionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint32 verify_type = 3;
  inline bool has_verify_type() const;
  inline void clear_verify_type();
  static const int kVerifyTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 verify_type() const;
  inline void set_verify_type(::google::protobuf::uint32 value);

  // optional uint64 channel_id = 4;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 4;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UpdateGroupOptionRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_verify_type();
  inline void clear_has_verify_type();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::uint32 verify_type_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UpdateGroupOptionRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupOptionRequest : public ::google::protobuf::Message {
 public:
  GetGroupOptionRequest();
  virtual ~GetGroupOptionRequest();

  GetGroupOptionRequest(const GetGroupOptionRequest& from);

  inline GetGroupOptionRequest& operator=(const GetGroupOptionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupOptionRequest& default_instance();

  void Swap(GetGroupOptionRequest* other);

  // implements Message ----------------------------------------------

  GetGroupOptionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupOptionRequest& from);
  void MergeFrom(const GetGroupOptionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetGroupOptionRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetGroupOptionRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupOptionResponse : public ::google::protobuf::Message {
 public:
  GetGroupOptionResponse();
  virtual ~GetGroupOptionResponse();

  GetGroupOptionResponse(const GetGroupOptionResponse& from);

  inline GetGroupOptionResponse& operator=(const GetGroupOptionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupOptionResponse& default_instance();

  void Swap(GetGroupOptionResponse* other);

  // implements Message ----------------------------------------------

  GetGroupOptionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupOptionResponse& from);
  void MergeFrom(const GetGroupOptionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TerminalProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::TerminalProtocol::Result& result() const;
  inline ::TerminalProtocol::Result* mutable_result();
  inline ::TerminalProtocol::Result* release_result();
  inline void set_allocated_result(::TerminalProtocol::Result* result);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint32 verify_type = 4;
  inline bool has_verify_type() const;
  inline void clear_verify_type();
  static const int kVerifyTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 verify_type() const;
  inline void set_verify_type(::google::protobuf::uint32 value);

  // optional uint64 channel_id = 5;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 5;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // optional int32 msg_mode = 6;
  inline bool has_msg_mode() const;
  inline void clear_msg_mode();
  static const int kMsgModeFieldNumber = 6;
  inline ::google::protobuf::int32 msg_mode() const;
  inline void set_msg_mode(::google::protobuf::int32 value);

  // optional int32 talk_mode = 7;
  inline bool has_talk_mode() const;
  inline void clear_talk_mode();
  static const int kTalkModeFieldNumber = 7;
  inline ::google::protobuf::int32 talk_mode() const;
  inline void set_talk_mode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetGroupOptionResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_verify_type();
  inline void clear_has_verify_type();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_msg_mode();
  inline void clear_has_msg_mode();
  inline void set_has_talk_mode();
  inline void clear_has_talk_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TerminalProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::uint32 verify_type_;
  ::google::protobuf::int32 msg_mode_;
  ::google::protobuf::int32 talk_mode_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetGroupOptionResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGroupNotice : public ::google::protobuf::Message {
 public:
  UpdateGroupNotice();
  virtual ~UpdateGroupNotice();

  UpdateGroupNotice(const UpdateGroupNotice& from);

  inline UpdateGroupNotice& operator=(const UpdateGroupNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupNotice& default_instance();

  void Swap(UpdateGroupNotice* other);

  // implements Message ----------------------------------------------

  UpdateGroupNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGroupNotice& from);
  void MergeFrom(const UpdateGroupNotice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional string notice = 3;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 3;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UpdateGroupNotice)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_notice();
  inline void clear_has_notice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* notice_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UpdateGroupNotice* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupInfoRequest : public ::google::protobuf::Message {
 public:
  GetGroupInfoRequest();
  virtual ~GetGroupInfoRequest();

  GetGroupInfoRequest(const GetGroupInfoRequest& from);

  inline GetGroupInfoRequest& operator=(const GetGroupInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupInfoRequest& default_instance();

  void Swap(GetGroupInfoRequest* other);

  // implements Message ----------------------------------------------

  GetGroupInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupInfoRequest& from);
  void MergeFrom(const GetGroupInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetGroupInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetGroupInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupInfoResponse : public ::google::protobuf::Message {
 public:
  GetGroupInfoResponse();
  virtual ~GetGroupInfoResponse();

  GetGroupInfoResponse(const GetGroupInfoResponse& from);

  inline GetGroupInfoResponse& operator=(const GetGroupInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupInfoResponse& default_instance();

  void Swap(GetGroupInfoResponse* other);

  // implements Message ----------------------------------------------

  GetGroupInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupInfoResponse& from);
  void MergeFrom(const GetGroupInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional string group_name = 3;
  inline bool has_group_name() const;
  inline void clear_group_name();
  static const int kGroupNameFieldNumber = 3;
  inline const ::std::string& group_name() const;
  inline void set_group_name(const ::std::string& value);
  inline void set_group_name(const char* value);
  inline void set_group_name(const char* value, size_t size);
  inline ::std::string* mutable_group_name();
  inline ::std::string* release_group_name();
  inline void set_allocated_group_name(::std::string* group_name);

  // optional string remark = 4;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 4;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // optional uint32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional string group_intro = 6;
  inline bool has_group_intro() const;
  inline void clear_group_intro();
  static const int kGroupIntroFieldNumber = 6;
  inline const ::std::string& group_intro() const;
  inline void set_group_intro(const ::std::string& value);
  inline void set_group_intro(const char* value);
  inline void set_group_intro(const char* value, size_t size);
  inline ::std::string* mutable_group_intro();
  inline ::std::string* release_group_intro();
  inline void set_allocated_group_intro(::std::string* group_intro);

  // optional string group_notice = 7;
  inline bool has_group_notice() const;
  inline void clear_group_notice();
  static const int kGroupNoticeFieldNumber = 7;
  inline const ::std::string& group_notice() const;
  inline void set_group_notice(const ::std::string& value);
  inline void set_group_notice(const char* value);
  inline void set_group_notice(const char* value, size_t size);
  inline ::std::string* mutable_group_notice();
  inline ::std::string* release_group_notice();
  inline void set_allocated_group_notice(::std::string* group_notice);

  // optional string avatar = 8;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 8;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // optional uint32 sub_type = 9;
  inline bool has_sub_type() const;
  inline void clear_sub_type();
  static const int kSubTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 sub_type() const;
  inline void set_sub_type(::google::protobuf::uint32 value);

  // optional uint64 group_number = 10;
  inline bool has_group_number() const;
  inline void clear_group_number();
  static const int kGroupNumberFieldNumber = 10;
  inline ::google::protobuf::uint64 group_number() const;
  inline void set_group_number(::google::protobuf::uint64 value);

  // optional uint32 avatar_id = 11;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 11;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // optional uint64 owner_id = 12;
  inline bool has_owner_id() const;
  inline void clear_owner_id();
  static const int kOwnerIdFieldNumber = 12;
  inline ::google::protobuf::uint64 owner_id() const;
  inline void set_owner_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetGroupInfoResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_name();
  inline void clear_has_group_name();
  inline void set_has_remark();
  inline void clear_has_remark();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_group_intro();
  inline void clear_has_group_intro();
  inline void set_has_group_notice();
  inline void clear_has_group_notice();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_sub_type();
  inline void clear_has_sub_type();
  inline void set_has_group_number();
  inline void clear_has_group_number();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_owner_id();
  inline void clear_has_owner_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* group_name_;
  ::std::string* remark_;
  ::std::string* group_intro_;
  ::std::string* group_notice_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 sub_type_;
  ::std::string* avatar_;
  ::google::protobuf::uint64 group_number_;
  ::google::protobuf::uint64 owner_id_;
  ::google::protobuf::uint32 avatar_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetGroupInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGroupNoticeNotify : public ::google::protobuf::Message {
 public:
  UpdateGroupNoticeNotify();
  virtual ~UpdateGroupNoticeNotify();

  UpdateGroupNoticeNotify(const UpdateGroupNoticeNotify& from);

  inline UpdateGroupNoticeNotify& operator=(const UpdateGroupNoticeNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupNoticeNotify& default_instance();

  void Swap(UpdateGroupNoticeNotify* other);

  // implements Message ----------------------------------------------

  UpdateGroupNoticeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGroupNoticeNotify& from);
  void MergeFrom(const UpdateGroupNoticeNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional string notice = 3;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 3;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UpdateGroupNoticeNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_notice();
  inline void clear_has_notice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* notice_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UpdateGroupNoticeNotify* default_instance_;
};
// -------------------------------------------------------------------

class UpdateUserInfoRequest : public ::google::protobuf::Message {
 public:
  UpdateUserInfoRequest();
  virtual ~UpdateUserInfoRequest();

  UpdateUserInfoRequest(const UpdateUserInfoRequest& from);

  inline UpdateUserInfoRequest& operator=(const UpdateUserInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserInfoRequest& default_instance();

  void Swap(UpdateUserInfoRequest* other);

  // implements Message ----------------------------------------------

  UpdateUserInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateUserInfoRequest& from);
  void MergeFrom(const UpdateUserInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional uint32 sex = 3;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 3;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // optional string mobile = 4;
  inline bool has_mobile() const;
  inline void clear_mobile();
  static const int kMobileFieldNumber = 4;
  inline const ::std::string& mobile() const;
  inline void set_mobile(const ::std::string& value);
  inline void set_mobile(const char* value);
  inline void set_mobile(const char* value, size_t size);
  inline ::std::string* mutable_mobile();
  inline ::std::string* release_mobile();
  inline void set_allocated_mobile(::std::string* mobile);

  // optional string birthday = 5;
  inline bool has_birthday() const;
  inline void clear_birthday();
  static const int kBirthdayFieldNumber = 5;
  inline const ::std::string& birthday() const;
  inline void set_birthday(const ::std::string& value);
  inline void set_birthday(const char* value);
  inline void set_birthday(const char* value, size_t size);
  inline ::std::string* mutable_birthday();
  inline ::std::string* release_birthday();
  inline void set_allocated_birthday(::std::string* birthday);

  // optional string email = 6;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 6;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // optional uint32 age = 7;
  inline bool has_age() const;
  inline void clear_age();
  static const int kAgeFieldNumber = 7;
  inline ::google::protobuf::uint32 age() const;
  inline void set_age(::google::protobuf::uint32 value);

  // optional uint32 constellation = 8;
  inline bool has_constellation() const;
  inline void clear_constellation();
  static const int kConstellationFieldNumber = 8;
  inline ::google::protobuf::uint32 constellation() const;
  inline void set_constellation(::google::protobuf::uint32 value);

  // optional string sign = 9;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 9;
  inline const ::std::string& sign() const;
  inline void set_sign(const ::std::string& value);
  inline void set_sign(const char* value);
  inline void set_sign(const char* value, size_t size);
  inline ::std::string* mutable_sign();
  inline ::std::string* release_sign();
  inline void set_allocated_sign(::std::string* sign);

  // optional string like = 10;
  inline bool has_like() const;
  inline void clear_like();
  static const int kLikeFieldNumber = 10;
  inline const ::std::string& like() const;
  inline void set_like(const ::std::string& value);
  inline void set_like(const char* value);
  inline void set_like(const char* value, size_t size);
  inline ::std::string* mutable_like();
  inline ::std::string* release_like();
  inline void set_allocated_like(::std::string* like);

  // optional string city = 11;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 11;
  inline const ::std::string& city() const;
  inline void set_city(const ::std::string& value);
  inline void set_city(const char* value);
  inline void set_city(const char* value, size_t size);
  inline ::std::string* mutable_city();
  inline ::std::string* release_city();
  inline void set_allocated_city(::std::string* city);

  // optional string personal_desc = 12;
  inline bool has_personal_desc() const;
  inline void clear_personal_desc();
  static const int kPersonalDescFieldNumber = 12;
  inline const ::std::string& personal_desc() const;
  inline void set_personal_desc(const ::std::string& value);
  inline void set_personal_desc(const char* value);
  inline void set_personal_desc(const char* value, size_t size);
  inline ::std::string* mutable_personal_desc();
  inline ::std::string* release_personal_desc();
  inline void set_allocated_personal_desc(::std::string* personal_desc);

  // optional string real_name = 13;
  inline bool has_real_name() const;
  inline void clear_real_name();
  static const int kRealNameFieldNumber = 13;
  inline const ::std::string& real_name() const;
  inline void set_real_name(const ::std::string& value);
  inline void set_real_name(const char* value);
  inline void set_real_name(const char* value, size_t size);
  inline ::std::string* mutable_real_name();
  inline ::std::string* release_real_name();
  inline void set_allocated_real_name(::std::string* real_name);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UpdateUserInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_mobile();
  inline void clear_has_mobile();
  inline void set_has_birthday();
  inline void clear_has_birthday();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_age();
  inline void clear_has_age();
  inline void set_has_constellation();
  inline void clear_has_constellation();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_like();
  inline void clear_has_like();
  inline void set_has_city();
  inline void clear_has_city();
  inline void set_has_personal_desc();
  inline void clear_has_personal_desc();
  inline void set_has_real_name();
  inline void clear_has_real_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* nick_name_;
  ::std::string* mobile_;
  ::std::string* birthday_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 age_;
  ::std::string* email_;
  ::std::string* sign_;
  ::std::string* like_;
  ::std::string* city_;
  ::std::string* personal_desc_;
  ::std::string* real_name_;
  ::google::protobuf::uint32 constellation_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UpdateUserInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateUserMoodRequest : public ::google::protobuf::Message {
 public:
  UpdateUserMoodRequest();
  virtual ~UpdateUserMoodRequest();

  UpdateUserMoodRequest(const UpdateUserMoodRequest& from);

  inline UpdateUserMoodRequest& operator=(const UpdateUserMoodRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserMoodRequest& default_instance();

  void Swap(UpdateUserMoodRequest* other);

  // implements Message ----------------------------------------------

  UpdateUserMoodRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateUserMoodRequest& from);
  void MergeFrom(const UpdateUserMoodRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string mood = 2;
  inline bool has_mood() const;
  inline void clear_mood();
  static const int kMoodFieldNumber = 2;
  inline const ::std::string& mood() const;
  inline void set_mood(const ::std::string& value);
  inline void set_mood(const char* value);
  inline void set_mood(const char* value, size_t size);
  inline ::std::string* mutable_mood();
  inline ::std::string* release_mood();
  inline void set_allocated_mood(::std::string* mood);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UpdateUserMoodRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_mood();
  inline void clear_has_mood();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* mood_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UpdateUserMoodRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateUserNickNameRequest : public ::google::protobuf::Message {
 public:
  UpdateUserNickNameRequest();
  virtual ~UpdateUserNickNameRequest();

  UpdateUserNickNameRequest(const UpdateUserNickNameRequest& from);

  inline UpdateUserNickNameRequest& operator=(const UpdateUserNickNameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserNickNameRequest& default_instance();

  void Swap(UpdateUserNickNameRequest* other);

  // implements Message ----------------------------------------------

  UpdateUserNickNameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateUserNickNameRequest& from);
  void MergeFrom(const UpdateUserNickNameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UpdateUserNickNameRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* nick_name_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UpdateUserNickNameRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateAvatarRequest : public ::google::protobuf::Message {
 public:
  UpdateAvatarRequest();
  virtual ~UpdateAvatarRequest();

  UpdateAvatarRequest(const UpdateAvatarRequest& from);

  inline UpdateAvatarRequest& operator=(const UpdateAvatarRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAvatarRequest& default_instance();

  void Swap(UpdateAvatarRequest* other);

  // implements Message ----------------------------------------------

  UpdateAvatarRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateAvatarRequest& from);
  void MergeFrom(const UpdateAvatarRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 avatar_id = 2;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 2;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // optional string avatar = 3;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 3;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UpdateAvatarRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* avatar_;
  ::google::protobuf::uint32 avatar_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UpdateAvatarRequest* default_instance_;
};
// -------------------------------------------------------------------

class KickUserOffline : public ::google::protobuf::Message {
 public:
  KickUserOffline();
  virtual ~KickUserOffline();

  KickUserOffline(const KickUserOffline& from);

  inline KickUserOffline& operator=(const KickUserOffline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickUserOffline& default_instance();

  void Swap(KickUserOffline* other);

  // implements Message ----------------------------------------------

  KickUserOffline* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickUserOffline& from);
  void MergeFrom(const KickUserOffline& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .TerminalProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::TerminalProtocol::Result& result() const;
  inline ::TerminalProtocol::Result* mutable_result();
  inline ::TerminalProtocol::Result* release_result();
  inline void set_allocated_result(::TerminalProtocol::Result* result);

  // optional string ip = 2;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 2;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional uint32 port = 3;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 3;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.KickUserOffline)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::TerminalProtocol::Result* result_;
  ::std::string* ip_;
  ::google::protobuf::uint32 port_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static KickUserOffline* default_instance_;
};
// -------------------------------------------------------------------

class GetUserOnlineStateRequest : public ::google::protobuf::Message {
 public:
  GetUserOnlineStateRequest();
  virtual ~GetUserOnlineStateRequest();

  GetUserOnlineStateRequest(const GetUserOnlineStateRequest& from);

  inline GetUserOnlineStateRequest& operator=(const GetUserOnlineStateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserOnlineStateRequest& default_instance();

  void Swap(GetUserOnlineStateRequest* other);

  // implements Message ----------------------------------------------

  GetUserOnlineStateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserOnlineStateRequest& from);
  void MergeFrom(const GetUserOnlineStateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 user_id = 1;
  inline int user_id_size() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id(int index) const;
  inline void set_user_id(int index, ::google::protobuf::uint64 value);
  inline void add_user_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_id();

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetUserOnlineStateRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetUserOnlineStateRequest* default_instance_;
};
// -------------------------------------------------------------------

class UserOnlineStateInfo : public ::google::protobuf::Message {
 public:
  UserOnlineStateInfo();
  virtual ~UserOnlineStateInfo();

  UserOnlineStateInfo(const UserOnlineStateInfo& from);

  inline UserOnlineStateInfo& operator=(const UserOnlineStateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserOnlineStateInfo& default_instance();

  void Swap(UserOnlineStateInfo* other);

  // implements Message ----------------------------------------------

  UserOnlineStateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserOnlineStateInfo& from);
  void MergeFrom(const UserOnlineStateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 online_state = 2;
  inline bool has_online_state() const;
  inline void clear_online_state();
  static const int kOnlineStateFieldNumber = 2;
  inline ::google::protobuf::uint32 online_state() const;
  inline void set_online_state(::google::protobuf::uint32 value);

  // optional string mts_ip = 3;
  inline bool has_mts_ip() const;
  inline void clear_mts_ip();
  static const int kMtsIpFieldNumber = 3;
  inline const ::std::string& mts_ip() const;
  inline void set_mts_ip(const ::std::string& value);
  inline void set_mts_ip(const char* value);
  inline void set_mts_ip(const char* value, size_t size);
  inline ::std::string* mutable_mts_ip();
  inline ::std::string* release_mts_ip();
  inline void set_allocated_mts_ip(::std::string* mts_ip);

  // optional uint32 mts_port = 4;
  inline bool has_mts_port() const;
  inline void clear_mts_port();
  static const int kMtsPortFieldNumber = 4;
  inline ::google::protobuf::uint32 mts_port() const;
  inline void set_mts_port(::google::protobuf::uint32 value);

  // optional bool has_camera = 6;
  inline bool has_has_camera() const;
  inline void clear_has_camera();
  static const int kHasCameraFieldNumber = 6;
  inline bool has_camera() const;
  inline void set_has_camera(bool value);

  // optional uint32 terminal_type = 7;
  inline bool has_terminal_type() const;
  inline void clear_terminal_type();
  static const int kTerminalTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 terminal_type() const;
  inline void set_terminal_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UserOnlineStateInfo)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_online_state();
  inline void clear_has_online_state();
  inline void set_has_mts_ip();
  inline void clear_has_mts_ip();
  inline void set_has_mts_port();
  inline void clear_has_mts_port();
  inline void set_has_has_camera();
  inline void clear_has_has_camera();
  inline void set_has_terminal_type();
  inline void clear_has_terminal_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* mts_ip_;
  ::google::protobuf::uint32 online_state_;
  ::google::protobuf::uint32 mts_port_;
  bool has_camera_;
  ::google::protobuf::uint32 terminal_type_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UserOnlineStateInfo* default_instance_;
};
// -------------------------------------------------------------------

class GetUserOnlineStateResponse : public ::google::protobuf::Message {
 public:
  GetUserOnlineStateResponse();
  virtual ~GetUserOnlineStateResponse();

  GetUserOnlineStateResponse(const GetUserOnlineStateResponse& from);

  inline GetUserOnlineStateResponse& operator=(const GetUserOnlineStateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserOnlineStateResponse& default_instance();

  void Swap(GetUserOnlineStateResponse* other);

  // implements Message ----------------------------------------------

  GetUserOnlineStateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserOnlineStateResponse& from);
  void MergeFrom(const GetUserOnlineStateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TerminalProtocol.UserOnlineStateInfo user_info = 1;
  inline int user_info_size() const;
  inline void clear_user_info();
  static const int kUserInfoFieldNumber = 1;
  inline const ::TerminalProtocol::UserOnlineStateInfo& user_info(int index) const;
  inline ::TerminalProtocol::UserOnlineStateInfo* mutable_user_info(int index);
  inline ::TerminalProtocol::UserOnlineStateInfo* add_user_info();
  inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::UserOnlineStateInfo >&
      user_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::UserOnlineStateInfo >*
      mutable_user_info();

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetUserOnlineStateResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::UserOnlineStateInfo > user_info_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetUserOnlineStateResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupUserCardRequest : public ::google::protobuf::Message {
 public:
  GetGroupUserCardRequest();
  virtual ~GetGroupUserCardRequest();

  GetGroupUserCardRequest(const GetGroupUserCardRequest& from);

  inline GetGroupUserCardRequest& operator=(const GetGroupUserCardRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupUserCardRequest& default_instance();

  void Swap(GetGroupUserCardRequest* other);

  // implements Message ----------------------------------------------

  GetGroupUserCardRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupUserCardRequest& from);
  void MergeFrom(const GetGroupUserCardRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetGroupUserCardRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetGroupUserCardRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupUserCardResponse : public ::google::protobuf::Message {
 public:
  GetGroupUserCardResponse();
  virtual ~GetGroupUserCardResponse();

  GetGroupUserCardResponse(const GetGroupUserCardResponse& from);

  inline GetGroupUserCardResponse& operator=(const GetGroupUserCardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupUserCardResponse& default_instance();

  void Swap(GetGroupUserCardResponse* other);

  // implements Message ----------------------------------------------

  GetGroupUserCardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupUserCardResponse& from);
  void MergeFrom(const GetGroupUserCardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional string nickname = 3;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional string tel = 4;
  inline bool has_tel() const;
  inline void clear_tel();
  static const int kTelFieldNumber = 4;
  inline const ::std::string& tel() const;
  inline void set_tel(const ::std::string& value);
  inline void set_tel(const char* value);
  inline void set_tel(const char* value, size_t size);
  inline ::std::string* mutable_tel();
  inline ::std::string* release_tel();
  inline void set_allocated_tel(::std::string* tel);

  // optional string email = 5;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 5;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // optional string remark = 6;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 6;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetGroupUserCardResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_tel();
  inline void clear_has_tel();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_remark();
  inline void clear_has_remark();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* nickname_;
  ::std::string* tel_;
  ::std::string* email_;
  ::std::string* remark_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetGroupUserCardResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGroupUserCardRequest : public ::google::protobuf::Message {
 public:
  UpdateGroupUserCardRequest();
  virtual ~UpdateGroupUserCardRequest();

  UpdateGroupUserCardRequest(const UpdateGroupUserCardRequest& from);

  inline UpdateGroupUserCardRequest& operator=(const UpdateGroupUserCardRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupUserCardRequest& default_instance();

  void Swap(UpdateGroupUserCardRequest* other);

  // implements Message ----------------------------------------------

  UpdateGroupUserCardRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGroupUserCardRequest& from);
  void MergeFrom(const UpdateGroupUserCardRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional string nickname = 3;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional string tel = 4;
  inline bool has_tel() const;
  inline void clear_tel();
  static const int kTelFieldNumber = 4;
  inline const ::std::string& tel() const;
  inline void set_tel(const ::std::string& value);
  inline void set_tel(const char* value);
  inline void set_tel(const char* value, size_t size);
  inline ::std::string* mutable_tel();
  inline ::std::string* release_tel();
  inline void set_allocated_tel(::std::string* tel);

  // optional string email = 5;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 5;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // optional string remark = 6;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 6;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // optional uint64 group_user_id = 7;
  inline bool has_group_user_id() const;
  inline void clear_group_user_id();
  static const int kGroupUserIdFieldNumber = 7;
  inline ::google::protobuf::uint64 group_user_id() const;
  inline void set_group_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.UpdateGroupUserCardRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_tel();
  inline void clear_has_tel();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_remark();
  inline void clear_has_remark();
  inline void set_has_group_user_id();
  inline void clear_has_group_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* nickname_;
  ::std::string* tel_;
  ::std::string* email_;
  ::std::string* remark_;
  ::google::protobuf::uint64 group_user_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UpdateGroupUserCardRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetGroupMsgModeRequest : public ::google::protobuf::Message {
 public:
  SetGroupMsgModeRequest();
  virtual ~SetGroupMsgModeRequest();

  SetGroupMsgModeRequest(const SetGroupMsgModeRequest& from);

  inline SetGroupMsgModeRequest& operator=(const SetGroupMsgModeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupMsgModeRequest& default_instance();

  void Swap(SetGroupMsgModeRequest* other);

  // implements Message ----------------------------------------------

  SetGroupMsgModeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGroupMsgModeRequest& from);
  void MergeFrom(const SetGroupMsgModeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // required uint32 msg_mode = 3;
  inline bool has_msg_mode() const;
  inline void clear_msg_mode();
  static const int kMsgModeFieldNumber = 3;
  inline ::google::protobuf::uint32 msg_mode() const;
  inline void set_msg_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.SetGroupMsgModeRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_msg_mode();
  inline void clear_has_msg_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint32 msg_mode_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static SetGroupMsgModeRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetGroupTalkModeRequest : public ::google::protobuf::Message {
 public:
  SetGroupTalkModeRequest();
  virtual ~SetGroupTalkModeRequest();

  SetGroupTalkModeRequest(const SetGroupTalkModeRequest& from);

  inline SetGroupTalkModeRequest& operator=(const SetGroupTalkModeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupTalkModeRequest& default_instance();

  void Swap(SetGroupTalkModeRequest* other);

  // implements Message ----------------------------------------------

  SetGroupTalkModeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGroupTalkModeRequest& from);
  void MergeFrom(const SetGroupTalkModeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // required uint32 talk_mode = 3;
  inline bool has_talk_mode() const;
  inline void clear_talk_mode();
  static const int kTalkModeFieldNumber = 3;
  inline ::google::protobuf::uint32 talk_mode() const;
  inline void set_talk_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.SetGroupTalkModeRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_talk_mode();
  inline void clear_has_talk_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint32 talk_mode_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static SetGroupTalkModeRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendVerifyInfoRequest : public ::google::protobuf::Message {
 public:
  GetFriendVerifyInfoRequest();
  virtual ~GetFriendVerifyInfoRequest();

  GetFriendVerifyInfoRequest(const GetFriendVerifyInfoRequest& from);

  inline GetFriendVerifyInfoRequest& operator=(const GetFriendVerifyInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendVerifyInfoRequest& default_instance();

  void Swap(GetFriendVerifyInfoRequest* other);

  // implements Message ----------------------------------------------

  GetFriendVerifyInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendVerifyInfoRequest& from);
  void MergeFrom(const GetFriendVerifyInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetFriendVerifyInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetFriendVerifyInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendVerifyInfoResponse : public ::google::protobuf::Message {
 public:
  GetFriendVerifyInfoResponse();
  virtual ~GetFriendVerifyInfoResponse();

  GetFriendVerifyInfoResponse(const GetFriendVerifyInfoResponse& from);

  inline GetFriendVerifyInfoResponse& operator=(const GetFriendVerifyInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendVerifyInfoResponse& default_instance();

  void Swap(GetFriendVerifyInfoResponse* other);

  // implements Message ----------------------------------------------

  GetFriendVerifyInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendVerifyInfoResponse& from);
  void MergeFrom(const GetFriendVerifyInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 verify_type = 1;
  inline bool has_verify_type() const;
  inline void clear_verify_type();
  static const int kVerifyTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 verify_type() const;
  inline void set_verify_type(::google::protobuf::uint32 value);

  // optional uint32 question_type = 2;
  inline bool has_question_type() const;
  inline void clear_question_type();
  static const int kQuestionTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 question_type() const;
  inline void set_question_type(::google::protobuf::uint32 value);

  // optional string answer = 3;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 3;
  inline const ::std::string& answer() const;
  inline void set_answer(const ::std::string& value);
  inline void set_answer(const char* value);
  inline void set_answer(const char* value, size_t size);
  inline ::std::string* mutable_answer();
  inline ::std::string* release_answer();
  inline void set_allocated_answer(::std::string* answer);

  // required .TerminalProtocol.Result result = 4;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline const ::TerminalProtocol::Result& result() const;
  inline ::TerminalProtocol::Result* mutable_result();
  inline ::TerminalProtocol::Result* release_result();
  inline void set_allocated_result(::TerminalProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetFriendVerifyInfoResponse)
 private:
  inline void set_has_verify_type();
  inline void clear_has_verify_type();
  inline void set_has_question_type();
  inline void clear_has_question_type();
  inline void set_has_answer();
  inline void clear_has_answer();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 verify_type_;
  ::google::protobuf::uint32 question_type_;
  ::std::string* answer_;
  ::TerminalProtocol::Result* result_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetFriendVerifyInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupManagerListRequest : public ::google::protobuf::Message {
 public:
  GetGroupManagerListRequest();
  virtual ~GetGroupManagerListRequest();

  GetGroupManagerListRequest(const GetGroupManagerListRequest& from);

  inline GetGroupManagerListRequest& operator=(const GetGroupManagerListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupManagerListRequest& default_instance();

  void Swap(GetGroupManagerListRequest* other);

  // implements Message ----------------------------------------------

  GetGroupManagerListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupManagerListRequest& from);
  void MergeFrom(const GetGroupManagerListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetGroupManagerListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetGroupManagerListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupManagerListResponse : public ::google::protobuf::Message {
 public:
  GetGroupManagerListResponse();
  virtual ~GetGroupManagerListResponse();

  GetGroupManagerListResponse(const GetGroupManagerListResponse& from);

  inline GetGroupManagerListResponse& operator=(const GetGroupManagerListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupManagerListResponse& default_instance();

  void Swap(GetGroupManagerListResponse* other);

  // implements Message ----------------------------------------------

  GetGroupManagerListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupManagerListResponse& from);
  void MergeFrom(const GetGroupManagerListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint32 sum_num = 2;
  inline bool has_sum_num() const;
  inline void clear_sum_num();
  static const int kSumNumFieldNumber = 2;
  inline ::google::protobuf::uint32 sum_num() const;
  inline void set_sum_num(::google::protobuf::uint32 value);

  // repeated uint64 group_user_id = 3;
  inline int group_user_id_size() const;
  inline void clear_group_user_id();
  static const int kGroupUserIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_user_id(int index) const;
  inline void set_group_user_id(int index, ::google::protobuf::uint64 value);
  inline void add_group_user_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      group_user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_group_user_id();

  // required .TerminalProtocol.Result result = 4;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline const ::TerminalProtocol::Result& result() const;
  inline ::TerminalProtocol::Result* mutable_result();
  inline ::TerminalProtocol::Result* release_result();
  inline void set_allocated_result(::TerminalProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.GetGroupManagerListResponse)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_sum_num();
  inline void clear_has_sum_num();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > group_user_id_;
  ::TerminalProtocol::Result* result_;
  ::google::protobuf::uint32 sum_num_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetGroupManagerListResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteHistoryMessageRequest : public ::google::protobuf::Message {
 public:
  DeleteHistoryMessageRequest();
  virtual ~DeleteHistoryMessageRequest();

  DeleteHistoryMessageRequest(const DeleteHistoryMessageRequest& from);

  inline DeleteHistoryMessageRequest& operator=(const DeleteHistoryMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteHistoryMessageRequest& default_instance();

  void Swap(DeleteHistoryMessageRequest* other);

  // implements Message ----------------------------------------------

  DeleteHistoryMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteHistoryMessageRequest& from);
  void MergeFrom(const DeleteHistoryMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 msg_type = 2;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 msg_type() const;
  inline void set_msg_type(::google::protobuf::uint32 value);

  // optional uint32 last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 last_time() const;
  inline void set_last_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TerminalProtocol.DeleteHistoryMessageRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 msg_type_;
  ::google::protobuf::uint32 last_time_;
  friend void  protobuf_AddDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_terminal_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_terminal_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static DeleteHistoryMessageRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// Result

// required uint32 code = 1;
inline bool Result::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Result::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Result::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Result::clear_code() {
  code_ = 0u;
  clear_has_code();
}
inline ::google::protobuf::uint32 Result::code() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.Result.code)
  return code_;
}
inline void Result::set_code(::google::protobuf::uint32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.Result.code)
}

// required string msg = 2;
inline bool Result::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Result::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Result::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Result::clear_msg() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& Result::msg() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.Result.msg)
  return *msg_;
}
inline void Result::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.Result.msg)
}
inline void Result::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.Result.msg)
}
inline void Result::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.Result.msg)
}
inline ::std::string* Result::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.Result.msg)
  return msg_;
}
inline ::std::string* Result::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Result::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.Result.msg)
}

// -------------------------------------------------------------------

// LoginRequest

// required string login_name = 1;
inline bool LoginRequest::has_login_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRequest::set_has_login_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRequest::clear_has_login_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRequest::clear_login_name() {
  if (login_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_->clear();
  }
  clear_has_login_name();
}
inline const ::std::string& LoginRequest::login_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginRequest.login_name)
  return *login_name_;
}
inline void LoginRequest::set_login_name(const ::std::string& value) {
  set_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_ = new ::std::string;
  }
  login_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginRequest.login_name)
}
inline void LoginRequest::set_login_name(const char* value) {
  set_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_ = new ::std::string;
  }
  login_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.LoginRequest.login_name)
}
inline void LoginRequest::set_login_name(const char* value, size_t size) {
  set_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_ = new ::std::string;
  }
  login_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.LoginRequest.login_name)
}
inline ::std::string* LoginRequest::mutable_login_name() {
  set_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.LoginRequest.login_name)
  return login_name_;
}
inline ::std::string* LoginRequest::release_login_name() {
  clear_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = login_name_;
    login_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginRequest::set_allocated_login_name(::std::string* login_name) {
  if (login_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete login_name_;
  }
  if (login_name) {
    set_has_login_name();
    login_name_ = login_name;
  } else {
    clear_has_login_name();
    login_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.LoginRequest.login_name)
}

// required string password = 2;
inline bool LoginRequest::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRequest::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRequest::clear_password() {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginRequest.password)
  return *password_;
}
inline void LoginRequest::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.LoginRequest.password)
}
inline ::std::string* LoginRequest::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.LoginRequest.password)
  return password_;
}
inline ::std::string* LoginRequest::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginRequest::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.LoginRequest.password)
}

// required uint32 online_state = 3;
inline bool LoginRequest::has_online_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRequest::set_has_online_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRequest::clear_has_online_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRequest::clear_online_state() {
  online_state_ = 0u;
  clear_has_online_state();
}
inline ::google::protobuf::uint32 LoginRequest::online_state() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginRequest.online_state)
  return online_state_;
}
inline void LoginRequest::set_online_state(::google::protobuf::uint32 value) {
  set_has_online_state();
  online_state_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginRequest.online_state)
}

// required uint32 terminal_type = 4;
inline bool LoginRequest::has_terminal_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginRequest::set_has_terminal_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginRequest::clear_has_terminal_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginRequest::clear_terminal_type() {
  terminal_type_ = 0u;
  clear_has_terminal_type();
}
inline ::google::protobuf::uint32 LoginRequest::terminal_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginRequest.terminal_type)
  return terminal_type_;
}
inline void LoginRequest::set_terminal_type(::google::protobuf::uint32 value) {
  set_has_terminal_type();
  terminal_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginRequest.terminal_type)
}

// optional string mac_addr = 5;
inline bool LoginRequest::has_mac_addr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginRequest::set_has_mac_addr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginRequest::clear_has_mac_addr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginRequest::clear_mac_addr() {
  if (mac_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_addr_->clear();
  }
  clear_has_mac_addr();
}
inline const ::std::string& LoginRequest::mac_addr() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginRequest.mac_addr)
  return *mac_addr_;
}
inline void LoginRequest::set_mac_addr(const ::std::string& value) {
  set_has_mac_addr();
  if (mac_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_addr_ = new ::std::string;
  }
  mac_addr_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginRequest.mac_addr)
}
inline void LoginRequest::set_mac_addr(const char* value) {
  set_has_mac_addr();
  if (mac_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_addr_ = new ::std::string;
  }
  mac_addr_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.LoginRequest.mac_addr)
}
inline void LoginRequest::set_mac_addr(const char* value, size_t size) {
  set_has_mac_addr();
  if (mac_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_addr_ = new ::std::string;
  }
  mac_addr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.LoginRequest.mac_addr)
}
inline ::std::string* LoginRequest::mutable_mac_addr() {
  set_has_mac_addr();
  if (mac_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_addr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.LoginRequest.mac_addr)
  return mac_addr_;
}
inline ::std::string* LoginRequest::release_mac_addr() {
  clear_has_mac_addr();
  if (mac_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mac_addr_;
    mac_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginRequest::set_allocated_mac_addr(::std::string* mac_addr) {
  if (mac_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mac_addr_;
  }
  if (mac_addr) {
    set_has_mac_addr();
    mac_addr_ = mac_addr;
  } else {
    clear_has_mac_addr();
    mac_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.LoginRequest.mac_addr)
}

// optional uint32 has_camera = 6;
inline bool LoginRequest::has_has_camera() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginRequest::set_has_has_camera() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginRequest::clear_has_has_camera() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginRequest::clear_has_camera() {
  has_camera_ = 0u;
  clear_has_has_camera();
}
inline ::google::protobuf::uint32 LoginRequest::has_camera() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginRequest.has_camera)
  return has_camera_;
}
inline void LoginRequest::set_has_camera(::google::protobuf::uint32 value) {
  set_has_has_camera();
  has_camera_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginRequest.has_camera)
}

// optional uint32 login_type = 7;
inline bool LoginRequest::has_login_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginRequest::set_has_login_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginRequest::clear_has_login_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginRequest::clear_login_type() {
  login_type_ = 0u;
  clear_has_login_type();
}
inline ::google::protobuf::uint32 LoginRequest::login_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginRequest.login_type)
  return login_type_;
}
inline void LoginRequest::set_login_type(::google::protobuf::uint32 value) {
  set_has_login_type();
  login_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginRequest.login_type)
}

// -------------------------------------------------------------------

// Redirect

// required string server_ip = 1;
inline bool Redirect::has_server_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Redirect::set_has_server_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Redirect::clear_has_server_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Redirect::clear_server_ip() {
  if (server_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_ip_->clear();
  }
  clear_has_server_ip();
}
inline const ::std::string& Redirect::server_ip() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.Redirect.server_ip)
  return *server_ip_;
}
inline void Redirect::set_server_ip(const ::std::string& value) {
  set_has_server_ip();
  if (server_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_ip_ = new ::std::string;
  }
  server_ip_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.Redirect.server_ip)
}
inline void Redirect::set_server_ip(const char* value) {
  set_has_server_ip();
  if (server_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_ip_ = new ::std::string;
  }
  server_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.Redirect.server_ip)
}
inline void Redirect::set_server_ip(const char* value, size_t size) {
  set_has_server_ip();
  if (server_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_ip_ = new ::std::string;
  }
  server_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.Redirect.server_ip)
}
inline ::std::string* Redirect::mutable_server_ip() {
  set_has_server_ip();
  if (server_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.Redirect.server_ip)
  return server_ip_;
}
inline ::std::string* Redirect::release_server_ip() {
  clear_has_server_ip();
  if (server_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = server_ip_;
    server_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Redirect::set_allocated_server_ip(::std::string* server_ip) {
  if (server_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete server_ip_;
  }
  if (server_ip) {
    set_has_server_ip();
    server_ip_ = server_ip;
  } else {
    clear_has_server_ip();
    server_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.Redirect.server_ip)
}

// required uint32 server_port = 2;
inline bool Redirect::has_server_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Redirect::set_has_server_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Redirect::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Redirect::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 Redirect::server_port() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.Redirect.server_port)
  return server_port_;
}
inline void Redirect::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.Redirect.server_port)
}

// optional uint32 app_id = 3;
inline bool Redirect::has_app_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Redirect::set_has_app_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Redirect::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Redirect::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 Redirect::app_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.Redirect.app_id)
  return app_id_;
}
inline void Redirect::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.Redirect.app_id)
}

// -------------------------------------------------------------------

// LoginResponse

// required .TerminalProtocol.Result result = 1;
inline bool LoginResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginResponse::clear_result() {
  if (result_ != NULL) result_->::TerminalProtocol::Result::Clear();
  clear_has_result();
}
inline const ::TerminalProtocol::Result& LoginResponse::result() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::TerminalProtocol::Result* LoginResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::TerminalProtocol::Result;
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.LoginResponse.result)
  return result_;
}
inline ::TerminalProtocol::Result* LoginResponse::release_result() {
  clear_has_result();
  ::TerminalProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void LoginResponse::set_allocated_result(::TerminalProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.LoginResponse.result)
}

// optional uint64 user_id = 2;
inline bool LoginResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 LoginResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginResponse.user_id)
  return user_id_;
}
inline void LoginResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginResponse.user_id)
}

// optional uint64 tt_number = 3;
inline bool LoginResponse::has_tt_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginResponse::set_has_tt_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginResponse::clear_has_tt_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginResponse::clear_tt_number() {
  tt_number_ = GOOGLE_ULONGLONG(0);
  clear_has_tt_number();
}
inline ::google::protobuf::uint64 LoginResponse::tt_number() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginResponse.tt_number)
  return tt_number_;
}
inline void LoginResponse::set_tt_number(::google::protobuf::uint64 value) {
  set_has_tt_number();
  tt_number_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginResponse.tt_number)
}

// optional string nick_name = 4;
inline bool LoginResponse::has_nick_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginResponse::set_has_nick_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginResponse::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginResponse::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& LoginResponse::nick_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginResponse.nick_name)
  return *nick_name_;
}
inline void LoginResponse::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginResponse.nick_name)
}
inline void LoginResponse::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.LoginResponse.nick_name)
}
inline void LoginResponse::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.LoginResponse.nick_name)
}
inline ::std::string* LoginResponse::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.LoginResponse.nick_name)
  return nick_name_;
}
inline ::std::string* LoginResponse::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginResponse::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.LoginResponse.nick_name)
}

// optional string avatar_id = 5;
inline bool LoginResponse::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginResponse::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginResponse::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginResponse::clear_avatar_id() {
  if (avatar_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_id_->clear();
  }
  clear_has_avatar_id();
}
inline const ::std::string& LoginResponse::avatar_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginResponse.avatar_id)
  return *avatar_id_;
}
inline void LoginResponse::set_avatar_id(const ::std::string& value) {
  set_has_avatar_id();
  if (avatar_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_id_ = new ::std::string;
  }
  avatar_id_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginResponse.avatar_id)
}
inline void LoginResponse::set_avatar_id(const char* value) {
  set_has_avatar_id();
  if (avatar_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_id_ = new ::std::string;
  }
  avatar_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.LoginResponse.avatar_id)
}
inline void LoginResponse::set_avatar_id(const char* value, size_t size) {
  set_has_avatar_id();
  if (avatar_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_id_ = new ::std::string;
  }
  avatar_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.LoginResponse.avatar_id)
}
inline ::std::string* LoginResponse::mutable_avatar_id() {
  set_has_avatar_id();
  if (avatar_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.LoginResponse.avatar_id)
  return avatar_id_;
}
inline ::std::string* LoginResponse::release_avatar_id() {
  clear_has_avatar_id();
  if (avatar_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_id_;
    avatar_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginResponse::set_allocated_avatar_id(::std::string* avatar_id) {
  if (avatar_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_id_;
  }
  if (avatar_id) {
    set_has_avatar_id();
    avatar_id_ = avatar_id;
  } else {
    clear_has_avatar_id();
    avatar_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.LoginResponse.avatar_id)
}

// optional string avatar = 6;
inline bool LoginResponse::has_avatar() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginResponse::set_has_avatar() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginResponse::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginResponse::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& LoginResponse::avatar() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginResponse.avatar)
  return *avatar_;
}
inline void LoginResponse::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginResponse.avatar)
}
inline void LoginResponse::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.LoginResponse.avatar)
}
inline void LoginResponse::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.LoginResponse.avatar)
}
inline ::std::string* LoginResponse::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.LoginResponse.avatar)
  return avatar_;
}
inline ::std::string* LoginResponse::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginResponse::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.LoginResponse.avatar)
}

// optional string token = 7;
inline bool LoginResponse::has_token() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginResponse::set_has_token() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginResponse::clear_has_token() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginResponse::clear_token() {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& LoginResponse::token() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginResponse.token)
  return *token_;
}
inline void LoginResponse::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginResponse.token)
}
inline void LoginResponse::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.LoginResponse.token)
}
inline void LoginResponse::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.LoginResponse.token)
}
inline ::std::string* LoginResponse::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.LoginResponse.token)
  return token_;
}
inline ::std::string* LoginResponse::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginResponse::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.LoginResponse.token)
}

// optional string mts_ip = 8;
inline bool LoginResponse::has_mts_ip() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LoginResponse::set_has_mts_ip() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LoginResponse::clear_has_mts_ip() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LoginResponse::clear_mts_ip() {
  if (mts_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_->clear();
  }
  clear_has_mts_ip();
}
inline const ::std::string& LoginResponse::mts_ip() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginResponse.mts_ip)
  return *mts_ip_;
}
inline void LoginResponse::set_mts_ip(const ::std::string& value) {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  mts_ip_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginResponse.mts_ip)
}
inline void LoginResponse::set_mts_ip(const char* value) {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  mts_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.LoginResponse.mts_ip)
}
inline void LoginResponse::set_mts_ip(const char* value, size_t size) {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  mts_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.LoginResponse.mts_ip)
}
inline ::std::string* LoginResponse::mutable_mts_ip() {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.LoginResponse.mts_ip)
  return mts_ip_;
}
inline ::std::string* LoginResponse::release_mts_ip() {
  clear_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mts_ip_;
    mts_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginResponse::set_allocated_mts_ip(::std::string* mts_ip) {
  if (mts_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mts_ip_;
  }
  if (mts_ip) {
    set_has_mts_ip();
    mts_ip_ = mts_ip;
  } else {
    clear_has_mts_ip();
    mts_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.LoginResponse.mts_ip)
}

// optional uint32 mts_port = 9;
inline bool LoginResponse::has_mts_port() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LoginResponse::set_has_mts_port() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LoginResponse::clear_has_mts_port() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LoginResponse::clear_mts_port() {
  mts_port_ = 0u;
  clear_has_mts_port();
}
inline ::google::protobuf::uint32 LoginResponse::mts_port() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LoginResponse.mts_port)
  return mts_port_;
}
inline void LoginResponse::set_mts_port(::google::protobuf::uint32 value) {
  set_has_mts_port();
  mts_port_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.LoginResponse.mts_port)
}

// -------------------------------------------------------------------

// KeepaliveRequest

// required uint64 user_id = 1;
inline bool KeepaliveRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeepaliveRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeepaliveRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeepaliveRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 KeepaliveRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.KeepaliveRequest.user_id)
  return user_id_;
}
inline void KeepaliveRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.KeepaliveRequest.user_id)
}

// -------------------------------------------------------------------

// LogoutRequest

// required uint64 user_id = 1;
inline bool LogoutRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogoutRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogoutRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogoutRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 LogoutRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LogoutRequest.user_id)
  return user_id_;
}
inline void LogoutRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.LogoutRequest.user_id)
}

// required uint32 terminal_type = 2;
inline bool LogoutRequest::has_terminal_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogoutRequest::set_has_terminal_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogoutRequest::clear_has_terminal_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogoutRequest::clear_terminal_type() {
  terminal_type_ = 0u;
  clear_has_terminal_type();
}
inline ::google::protobuf::uint32 LogoutRequest::terminal_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LogoutRequest.terminal_type)
  return terminal_type_;
}
inline void LogoutRequest::set_terminal_type(::google::protobuf::uint32 value) {
  set_has_terminal_type();
  terminal_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.LogoutRequest.terminal_type)
}

// -------------------------------------------------------------------

// LogoutResponse

// required .TerminalProtocol.Result result = 1;
inline bool LogoutResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogoutResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogoutResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogoutResponse::clear_result() {
  if (result_ != NULL) result_->::TerminalProtocol::Result::Clear();
  clear_has_result();
}
inline const ::TerminalProtocol::Result& LogoutResponse::result() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LogoutResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::TerminalProtocol::Result* LogoutResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::TerminalProtocol::Result;
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.LogoutResponse.result)
  return result_;
}
inline ::TerminalProtocol::Result* LogoutResponse::release_result() {
  clear_has_result();
  ::TerminalProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void LogoutResponse::set_allocated_result(::TerminalProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.LogoutResponse.result)
}

// optional uint64 user_id = 2;
inline bool LogoutResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogoutResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogoutResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogoutResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 LogoutResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.LogoutResponse.user_id)
  return user_id_;
}
inline void LogoutResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.LogoutResponse.user_id)
}

// -------------------------------------------------------------------

// GetFriendListRequest

// required uint64 user_id = 1;
inline bool GetFriendListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFriendListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFriendListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFriendListRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetFriendListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetFriendListRequest.user_id)
  return user_id_;
}
inline void GetFriendListRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetFriendListRequest.user_id)
}

// optional uint64 version_id = 2;
inline bool GetFriendListRequest::has_version_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFriendListRequest::set_has_version_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFriendListRequest::clear_has_version_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFriendListRequest::clear_version_id() {
  version_id_ = GOOGLE_ULONGLONG(0);
  clear_has_version_id();
}
inline ::google::protobuf::uint64 GetFriendListRequest::version_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetFriendListRequest.version_id)
  return version_id_;
}
inline void GetFriendListRequest::set_version_id(::google::protobuf::uint64 value) {
  set_has_version_id();
  version_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetFriendListRequest.version_id)
}

// -------------------------------------------------------------------

// GetFriendListResponse

// required uint64 user_id = 1;
inline bool GetFriendListResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFriendListResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFriendListResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFriendListResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetFriendListResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetFriendListResponse.user_id)
  return user_id_;
}
inline void GetFriendListResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetFriendListResponse.user_id)
}

// optional uint64 version_id = 2;
inline bool GetFriendListResponse::has_version_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFriendListResponse::set_has_version_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFriendListResponse::clear_has_version_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFriendListResponse::clear_version_id() {
  version_id_ = GOOGLE_ULONGLONG(0);
  clear_has_version_id();
}
inline ::google::protobuf::uint64 GetFriendListResponse::version_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetFriendListResponse.version_id)
  return version_id_;
}
inline void GetFriendListResponse::set_version_id(::google::protobuf::uint64 value) {
  set_has_version_id();
  version_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetFriendListResponse.version_id)
}

// repeated uint64 friend_id = 3;
inline int GetFriendListResponse::friend_id_size() const {
  return friend_id_.size();
}
inline void GetFriendListResponse::clear_friend_id() {
  friend_id_.Clear();
}
inline ::google::protobuf::uint64 GetFriendListResponse::friend_id(int index) const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetFriendListResponse.friend_id)
  return friend_id_.Get(index);
}
inline void GetFriendListResponse::set_friend_id(int index, ::google::protobuf::uint64 value) {
  friend_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetFriendListResponse.friend_id)
}
inline void GetFriendListResponse::add_friend_id(::google::protobuf::uint64 value) {
  friend_id_.Add(value);
  // @@protoc_insertion_point(field_add:TerminalProtocol.GetFriendListResponse.friend_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetFriendListResponse::friend_id() const {
  // @@protoc_insertion_point(field_list:TerminalProtocol.GetFriendListResponse.friend_id)
  return friend_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetFriendListResponse::mutable_friend_id() {
  // @@protoc_insertion_point(field_mutable_list:TerminalProtocol.GetFriendListResponse.friend_id)
  return &friend_id_;
}

// -------------------------------------------------------------------

// GetFriendBasicInfoRequest

// required uint64 user_id = 1;
inline bool GetFriendBasicInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFriendBasicInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFriendBasicInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFriendBasicInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetFriendBasicInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetFriendBasicInfoRequest.user_id)
  return user_id_;
}
inline void GetFriendBasicInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetFriendBasicInfoRequest.user_id)
}

// repeated uint64 friend_id = 2;
inline int GetFriendBasicInfoRequest::friend_id_size() const {
  return friend_id_.size();
}
inline void GetFriendBasicInfoRequest::clear_friend_id() {
  friend_id_.Clear();
}
inline ::google::protobuf::uint64 GetFriendBasicInfoRequest::friend_id(int index) const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetFriendBasicInfoRequest.friend_id)
  return friend_id_.Get(index);
}
inline void GetFriendBasicInfoRequest::set_friend_id(int index, ::google::protobuf::uint64 value) {
  friend_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetFriendBasicInfoRequest.friend_id)
}
inline void GetFriendBasicInfoRequest::add_friend_id(::google::protobuf::uint64 value) {
  friend_id_.Add(value);
  // @@protoc_insertion_point(field_add:TerminalProtocol.GetFriendBasicInfoRequest.friend_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetFriendBasicInfoRequest::friend_id() const {
  // @@protoc_insertion_point(field_list:TerminalProtocol.GetFriendBasicInfoRequest.friend_id)
  return friend_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetFriendBasicInfoRequest::mutable_friend_id() {
  // @@protoc_insertion_point(field_mutable_list:TerminalProtocol.GetFriendBasicInfoRequest.friend_id)
  return &friend_id_;
}

// -------------------------------------------------------------------

// FriendBasicInfo

// required uint64 user_id = 1;
inline bool FriendBasicInfo::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendBasicInfo::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendBasicInfo::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendBasicInfo::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 FriendBasicInfo::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendBasicInfo.user_id)
  return user_id_;
}
inline void FriendBasicInfo::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.FriendBasicInfo.user_id)
}

// optional string nick_name = 2;
inline bool FriendBasicInfo::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendBasicInfo::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendBasicInfo::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendBasicInfo::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& FriendBasicInfo::nick_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendBasicInfo.nick_name)
  return *nick_name_;
}
inline void FriendBasicInfo::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.FriendBasicInfo.nick_name)
}
inline void FriendBasicInfo::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.FriendBasicInfo.nick_name)
}
inline void FriendBasicInfo::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.FriendBasicInfo.nick_name)
}
inline ::std::string* FriendBasicInfo::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.FriendBasicInfo.nick_name)
  return nick_name_;
}
inline ::std::string* FriendBasicInfo::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendBasicInfo::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.FriendBasicInfo.nick_name)
}

// optional uint32 avatar_id = 5;
inline bool FriendBasicInfo::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendBasicInfo::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendBasicInfo::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendBasicInfo::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 FriendBasicInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendBasicInfo.avatar_id)
  return avatar_id_;
}
inline void FriendBasicInfo::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.FriendBasicInfo.avatar_id)
}

// optional string avatar = 6;
inline bool FriendBasicInfo::has_avatar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendBasicInfo::set_has_avatar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendBasicInfo::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendBasicInfo::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& FriendBasicInfo::avatar() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendBasicInfo.avatar)
  return *avatar_;
}
inline void FriendBasicInfo::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.FriendBasicInfo.avatar)
}
inline void FriendBasicInfo::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.FriendBasicInfo.avatar)
}
inline void FriendBasicInfo::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.FriendBasicInfo.avatar)
}
inline ::std::string* FriendBasicInfo::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.FriendBasicInfo.avatar)
  return avatar_;
}
inline ::std::string* FriendBasicInfo::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendBasicInfo::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.FriendBasicInfo.avatar)
}

// optional string sign = 7;
inline bool FriendBasicInfo::has_sign() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendBasicInfo::set_has_sign() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendBasicInfo::clear_has_sign() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendBasicInfo::clear_sign() {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_->clear();
  }
  clear_has_sign();
}
inline const ::std::string& FriendBasicInfo::sign() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendBasicInfo.sign)
  return *sign_;
}
inline void FriendBasicInfo::set_sign(const ::std::string& value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.FriendBasicInfo.sign)
}
inline void FriendBasicInfo::set_sign(const char* value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.FriendBasicInfo.sign)
}
inline void FriendBasicInfo::set_sign(const char* value, size_t size) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.FriendBasicInfo.sign)
}
inline ::std::string* FriendBasicInfo::mutable_sign() {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.FriendBasicInfo.sign)
  return sign_;
}
inline ::std::string* FriendBasicInfo::release_sign() {
  clear_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sign_;
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendBasicInfo::set_allocated_sign(::std::string* sign) {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sign_;
  }
  if (sign) {
    set_has_sign();
    sign_ = sign;
  } else {
    clear_has_sign();
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.FriendBasicInfo.sign)
}

// optional uint32 level = 8;
inline bool FriendBasicInfo::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FriendBasicInfo::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FriendBasicInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FriendBasicInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 FriendBasicInfo::level() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendBasicInfo.level)
  return level_;
}
inline void FriendBasicInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.FriendBasicInfo.level)
}

// -------------------------------------------------------------------

// GetFriendBasicInfoResponse

// optional uint64 user_id = 1;
inline bool GetFriendBasicInfoResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFriendBasicInfoResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFriendBasicInfoResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFriendBasicInfoResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetFriendBasicInfoResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetFriendBasicInfoResponse.user_id)
  return user_id_;
}
inline void GetFriendBasicInfoResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetFriendBasicInfoResponse.user_id)
}

// repeated .TerminalProtocol.FriendBasicInfo friend_info = 2;
inline int GetFriendBasicInfoResponse::friend_info_size() const {
  return friend_info_.size();
}
inline void GetFriendBasicInfoResponse::clear_friend_info() {
  friend_info_.Clear();
}
inline const ::TerminalProtocol::FriendBasicInfo& GetFriendBasicInfoResponse::friend_info(int index) const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetFriendBasicInfoResponse.friend_info)
  return friend_info_.Get(index);
}
inline ::TerminalProtocol::FriendBasicInfo* GetFriendBasicInfoResponse::mutable_friend_info(int index) {
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetFriendBasicInfoResponse.friend_info)
  return friend_info_.Mutable(index);
}
inline ::TerminalProtocol::FriendBasicInfo* GetFriendBasicInfoResponse::add_friend_info() {
  // @@protoc_insertion_point(field_add:TerminalProtocol.GetFriendBasicInfoResponse.friend_info)
  return friend_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::FriendBasicInfo >&
GetFriendBasicInfoResponse::friend_info() const {
  // @@protoc_insertion_point(field_list:TerminalProtocol.GetFriendBasicInfoResponse.friend_info)
  return friend_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::FriendBasicInfo >*
GetFriendBasicInfoResponse::mutable_friend_info() {
  // @@protoc_insertion_point(field_mutable_list:TerminalProtocol.GetFriendBasicInfoResponse.friend_info)
  return &friend_info_;
}

// -------------------------------------------------------------------

// GetUserInfoRequest

// required uint64 user_id = 1;
inline bool GetUserInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetUserInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoRequest.user_id)
  return user_id_;
}
inline void GetUserInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoRequest.user_id)
}

// required uint64 friend_id = 2;
inline bool GetUserInfoRequest::has_friend_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserInfoRequest::set_has_friend_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserInfoRequest::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserInfoRequest::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 GetUserInfoRequest::friend_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoRequest.friend_id)
  return friend_id_;
}
inline void GetUserInfoRequest::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoRequest.friend_id)
}

// -------------------------------------------------------------------

// GetUserInfoResponse

// required uint64 user_id = 1;
inline bool GetUserInfoResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserInfoResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserInfoResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserInfoResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetUserInfoResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.user_id)
  return user_id_;
}
inline void GetUserInfoResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.user_id)
}

// optional uint64 tt_number = 2;
inline bool GetUserInfoResponse::has_tt_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserInfoResponse::set_has_tt_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserInfoResponse::clear_has_tt_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserInfoResponse::clear_tt_number() {
  tt_number_ = GOOGLE_ULONGLONG(0);
  clear_has_tt_number();
}
inline ::google::protobuf::uint64 GetUserInfoResponse::tt_number() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.tt_number)
  return tt_number_;
}
inline void GetUserInfoResponse::set_tt_number(::google::protobuf::uint64 value) {
  set_has_tt_number();
  tt_number_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.tt_number)
}

// optional string user_name = 3;
inline bool GetUserInfoResponse::has_user_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserInfoResponse::set_has_user_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserInfoResponse::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserInfoResponse::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& GetUserInfoResponse::user_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.user_name)
  return *user_name_;
}
inline void GetUserInfoResponse::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.user_name)
}
inline void GetUserInfoResponse::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetUserInfoResponse.user_name)
}
inline void GetUserInfoResponse::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetUserInfoResponse.user_name)
}
inline ::std::string* GetUserInfoResponse::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetUserInfoResponse.user_name)
  return user_name_;
}
inline ::std::string* GetUserInfoResponse::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetUserInfoResponse.user_name)
}

// optional string nick_name = 4;
inline bool GetUserInfoResponse::has_nick_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetUserInfoResponse::set_has_nick_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetUserInfoResponse::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetUserInfoResponse::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& GetUserInfoResponse::nick_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.nick_name)
  return *nick_name_;
}
inline void GetUserInfoResponse::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.nick_name)
}
inline void GetUserInfoResponse::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetUserInfoResponse.nick_name)
}
inline void GetUserInfoResponse::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetUserInfoResponse.nick_name)
}
inline ::std::string* GetUserInfoResponse::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetUserInfoResponse.nick_name)
  return nick_name_;
}
inline ::std::string* GetUserInfoResponse::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetUserInfoResponse.nick_name)
}

// optional uint32 sex = 5;
inline bool GetUserInfoResponse::has_sex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetUserInfoResponse::set_has_sex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetUserInfoResponse::clear_has_sex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetUserInfoResponse::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 GetUserInfoResponse::sex() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.sex)
  return sex_;
}
inline void GetUserInfoResponse::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.sex)
}

// optional string mobile = 6;
inline bool GetUserInfoResponse::has_mobile() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetUserInfoResponse::set_has_mobile() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetUserInfoResponse::clear_has_mobile() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetUserInfoResponse::clear_mobile() {
  if (mobile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_->clear();
  }
  clear_has_mobile();
}
inline const ::std::string& GetUserInfoResponse::mobile() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.mobile)
  return *mobile_;
}
inline void GetUserInfoResponse::set_mobile(const ::std::string& value) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.mobile)
}
inline void GetUserInfoResponse::set_mobile(const char* value) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetUserInfoResponse.mobile)
}
inline void GetUserInfoResponse::set_mobile(const char* value, size_t size) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetUserInfoResponse.mobile)
}
inline ::std::string* GetUserInfoResponse::mutable_mobile() {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetUserInfoResponse.mobile)
  return mobile_;
}
inline ::std::string* GetUserInfoResponse::release_mobile() {
  clear_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mobile_;
    mobile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_mobile(::std::string* mobile) {
  if (mobile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mobile_;
  }
  if (mobile) {
    set_has_mobile();
    mobile_ = mobile;
  } else {
    clear_has_mobile();
    mobile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetUserInfoResponse.mobile)
}

// optional string birthday = 7;
inline bool GetUserInfoResponse::has_birthday() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetUserInfoResponse::set_has_birthday() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetUserInfoResponse::clear_has_birthday() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetUserInfoResponse::clear_birthday() {
  if (birthday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_->clear();
  }
  clear_has_birthday();
}
inline const ::std::string& GetUserInfoResponse::birthday() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.birthday)
  return *birthday_;
}
inline void GetUserInfoResponse::set_birthday(const ::std::string& value) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.birthday)
}
inline void GetUserInfoResponse::set_birthday(const char* value) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetUserInfoResponse.birthday)
}
inline void GetUserInfoResponse::set_birthday(const char* value, size_t size) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetUserInfoResponse.birthday)
}
inline ::std::string* GetUserInfoResponse::mutable_birthday() {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetUserInfoResponse.birthday)
  return birthday_;
}
inline ::std::string* GetUserInfoResponse::release_birthday() {
  clear_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = birthday_;
    birthday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_birthday(::std::string* birthday) {
  if (birthday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete birthday_;
  }
  if (birthday) {
    set_has_birthday();
    birthday_ = birthday;
  } else {
    clear_has_birthday();
    birthday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetUserInfoResponse.birthday)
}

// optional string email = 8;
inline bool GetUserInfoResponse::has_email() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetUserInfoResponse::set_has_email() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetUserInfoResponse::clear_has_email() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetUserInfoResponse::clear_email() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& GetUserInfoResponse::email() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.email)
  return *email_;
}
inline void GetUserInfoResponse::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.email)
}
inline void GetUserInfoResponse::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetUserInfoResponse.email)
}
inline void GetUserInfoResponse::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetUserInfoResponse.email)
}
inline ::std::string* GetUserInfoResponse::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetUserInfoResponse.email)
  return email_;
}
inline ::std::string* GetUserInfoResponse::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetUserInfoResponse.email)
}

// optional uint32 user_grade = 9;
inline bool GetUserInfoResponse::has_user_grade() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetUserInfoResponse::set_has_user_grade() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetUserInfoResponse::clear_has_user_grade() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetUserInfoResponse::clear_user_grade() {
  user_grade_ = 0u;
  clear_has_user_grade();
}
inline ::google::protobuf::uint32 GetUserInfoResponse::user_grade() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.user_grade)
  return user_grade_;
}
inline void GetUserInfoResponse::set_user_grade(::google::protobuf::uint32 value) {
  set_has_user_grade();
  user_grade_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.user_grade)
}

// optional uint32 age = 10;
inline bool GetUserInfoResponse::has_age() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GetUserInfoResponse::set_has_age() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GetUserInfoResponse::clear_has_age() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GetUserInfoResponse::clear_age() {
  age_ = 0u;
  clear_has_age();
}
inline ::google::protobuf::uint32 GetUserInfoResponse::age() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.age)
  return age_;
}
inline void GetUserInfoResponse::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.age)
}

// optional uint32 constellation = 11;
inline bool GetUserInfoResponse::has_constellation() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GetUserInfoResponse::set_has_constellation() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GetUserInfoResponse::clear_has_constellation() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GetUserInfoResponse::clear_constellation() {
  constellation_ = 0u;
  clear_has_constellation();
}
inline ::google::protobuf::uint32 GetUserInfoResponse::constellation() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.constellation)
  return constellation_;
}
inline void GetUserInfoResponse::set_constellation(::google::protobuf::uint32 value) {
  set_has_constellation();
  constellation_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.constellation)
}

// optional string sign = 12;
inline bool GetUserInfoResponse::has_sign() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GetUserInfoResponse::set_has_sign() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GetUserInfoResponse::clear_has_sign() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GetUserInfoResponse::clear_sign() {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_->clear();
  }
  clear_has_sign();
}
inline const ::std::string& GetUserInfoResponse::sign() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.sign)
  return *sign_;
}
inline void GetUserInfoResponse::set_sign(const ::std::string& value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.sign)
}
inline void GetUserInfoResponse::set_sign(const char* value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetUserInfoResponse.sign)
}
inline void GetUserInfoResponse::set_sign(const char* value, size_t size) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetUserInfoResponse.sign)
}
inline ::std::string* GetUserInfoResponse::mutable_sign() {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetUserInfoResponse.sign)
  return sign_;
}
inline ::std::string* GetUserInfoResponse::release_sign() {
  clear_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sign_;
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_sign(::std::string* sign) {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sign_;
  }
  if (sign) {
    set_has_sign();
    sign_ = sign;
  } else {
    clear_has_sign();
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetUserInfoResponse.sign)
}

// optional string like = 13;
inline bool GetUserInfoResponse::has_like() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GetUserInfoResponse::set_has_like() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GetUserInfoResponse::clear_has_like() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GetUserInfoResponse::clear_like() {
  if (like_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_->clear();
  }
  clear_has_like();
}
inline const ::std::string& GetUserInfoResponse::like() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.like)
  return *like_;
}
inline void GetUserInfoResponse::set_like(const ::std::string& value) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.like)
}
inline void GetUserInfoResponse::set_like(const char* value) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetUserInfoResponse.like)
}
inline void GetUserInfoResponse::set_like(const char* value, size_t size) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetUserInfoResponse.like)
}
inline ::std::string* GetUserInfoResponse::mutable_like() {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetUserInfoResponse.like)
  return like_;
}
inline ::std::string* GetUserInfoResponse::release_like() {
  clear_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = like_;
    like_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_like(::std::string* like) {
  if (like_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete like_;
  }
  if (like) {
    set_has_like();
    like_ = like;
  } else {
    clear_has_like();
    like_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetUserInfoResponse.like)
}

// optional string city = 14;
inline bool GetUserInfoResponse::has_city() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GetUserInfoResponse::set_has_city() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GetUserInfoResponse::clear_has_city() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GetUserInfoResponse::clear_city() {
  if (city_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_->clear();
  }
  clear_has_city();
}
inline const ::std::string& GetUserInfoResponse::city() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.city)
  return *city_;
}
inline void GetUserInfoResponse::set_city(const ::std::string& value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.city)
}
inline void GetUserInfoResponse::set_city(const char* value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetUserInfoResponse.city)
}
inline void GetUserInfoResponse::set_city(const char* value, size_t size) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetUserInfoResponse.city)
}
inline ::std::string* GetUserInfoResponse::mutable_city() {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetUserInfoResponse.city)
  return city_;
}
inline ::std::string* GetUserInfoResponse::release_city() {
  clear_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = city_;
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_city(::std::string* city) {
  if (city_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete city_;
  }
  if (city) {
    set_has_city();
    city_ = city;
  } else {
    clear_has_city();
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetUserInfoResponse.city)
}

// optional string personal_desc = 15;
inline bool GetUserInfoResponse::has_personal_desc() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GetUserInfoResponse::set_has_personal_desc() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GetUserInfoResponse::clear_has_personal_desc() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GetUserInfoResponse::clear_personal_desc() {
  if (personal_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_->clear();
  }
  clear_has_personal_desc();
}
inline const ::std::string& GetUserInfoResponse::personal_desc() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.personal_desc)
  return *personal_desc_;
}
inline void GetUserInfoResponse::set_personal_desc(const ::std::string& value) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.personal_desc)
}
inline void GetUserInfoResponse::set_personal_desc(const char* value) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetUserInfoResponse.personal_desc)
}
inline void GetUserInfoResponse::set_personal_desc(const char* value, size_t size) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetUserInfoResponse.personal_desc)
}
inline ::std::string* GetUserInfoResponse::mutable_personal_desc() {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetUserInfoResponse.personal_desc)
  return personal_desc_;
}
inline ::std::string* GetUserInfoResponse::release_personal_desc() {
  clear_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = personal_desc_;
    personal_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_personal_desc(::std::string* personal_desc) {
  if (personal_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete personal_desc_;
  }
  if (personal_desc) {
    set_has_personal_desc();
    personal_desc_ = personal_desc;
  } else {
    clear_has_personal_desc();
    personal_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetUserInfoResponse.personal_desc)
}

// optional string real_name = 16;
inline bool GetUserInfoResponse::has_real_name() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GetUserInfoResponse::set_has_real_name() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GetUserInfoResponse::clear_has_real_name() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GetUserInfoResponse::clear_real_name() {
  if (real_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_->clear();
  }
  clear_has_real_name();
}
inline const ::std::string& GetUserInfoResponse::real_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.real_name)
  return *real_name_;
}
inline void GetUserInfoResponse::set_real_name(const ::std::string& value) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.real_name)
}
inline void GetUserInfoResponse::set_real_name(const char* value) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetUserInfoResponse.real_name)
}
inline void GetUserInfoResponse::set_real_name(const char* value, size_t size) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetUserInfoResponse.real_name)
}
inline ::std::string* GetUserInfoResponse::mutable_real_name() {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetUserInfoResponse.real_name)
  return real_name_;
}
inline ::std::string* GetUserInfoResponse::release_real_name() {
  clear_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = real_name_;
    real_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_real_name(::std::string* real_name) {
  if (real_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete real_name_;
  }
  if (real_name) {
    set_has_real_name();
    real_name_ = real_name;
  } else {
    clear_has_real_name();
    real_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetUserInfoResponse.real_name)
}

// optional uint64 friend_id = 17;
inline bool GetUserInfoResponse::has_friend_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GetUserInfoResponse::set_has_friend_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GetUserInfoResponse::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GetUserInfoResponse::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 GetUserInfoResponse::friend_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserInfoResponse.friend_id)
  return friend_id_;
}
inline void GetUserInfoResponse::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserInfoResponse.friend_id)
}

// -------------------------------------------------------------------

// ChangeOnlineStateRequest

// required uint64 user_id = 1;
inline bool ChangeOnlineStateRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeOnlineStateRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeOnlineStateRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeOnlineStateRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 ChangeOnlineStateRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.ChangeOnlineStateRequest.user_id)
  return user_id_;
}
inline void ChangeOnlineStateRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.ChangeOnlineStateRequest.user_id)
}

// required uint32 terminal_type = 2;
inline bool ChangeOnlineStateRequest::has_terminal_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeOnlineStateRequest::set_has_terminal_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeOnlineStateRequest::clear_has_terminal_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeOnlineStateRequest::clear_terminal_type() {
  terminal_type_ = 0u;
  clear_has_terminal_type();
}
inline ::google::protobuf::uint32 ChangeOnlineStateRequest::terminal_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.ChangeOnlineStateRequest.terminal_type)
  return terminal_type_;
}
inline void ChangeOnlineStateRequest::set_terminal_type(::google::protobuf::uint32 value) {
  set_has_terminal_type();
  terminal_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.ChangeOnlineStateRequest.terminal_type)
}

// required uint32 online_state = 3;
inline bool ChangeOnlineStateRequest::has_online_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeOnlineStateRequest::set_has_online_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeOnlineStateRequest::clear_has_online_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeOnlineStateRequest::clear_online_state() {
  online_state_ = 0u;
  clear_has_online_state();
}
inline ::google::protobuf::uint32 ChangeOnlineStateRequest::online_state() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.ChangeOnlineStateRequest.online_state)
  return online_state_;
}
inline void ChangeOnlineStateRequest::set_online_state(::google::protobuf::uint32 value) {
  set_has_online_state();
  online_state_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.ChangeOnlineStateRequest.online_state)
}

// -------------------------------------------------------------------

// FriendOnlineStateNotify

// required uint64 user_id = 1;
inline bool FriendOnlineStateNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendOnlineStateNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendOnlineStateNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendOnlineStateNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 FriendOnlineStateNotify::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendOnlineStateNotify.user_id)
  return user_id_;
}
inline void FriendOnlineStateNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.FriendOnlineStateNotify.user_id)
}

// required uint32 terminal_type = 2;
inline bool FriendOnlineStateNotify::has_terminal_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendOnlineStateNotify::set_has_terminal_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendOnlineStateNotify::clear_has_terminal_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendOnlineStateNotify::clear_terminal_type() {
  terminal_type_ = 0u;
  clear_has_terminal_type();
}
inline ::google::protobuf::uint32 FriendOnlineStateNotify::terminal_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendOnlineStateNotify.terminal_type)
  return terminal_type_;
}
inline void FriendOnlineStateNotify::set_terminal_type(::google::protobuf::uint32 value) {
  set_has_terminal_type();
  terminal_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.FriendOnlineStateNotify.terminal_type)
}

// required uint32 online_state = 3;
inline bool FriendOnlineStateNotify::has_online_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendOnlineStateNotify::set_has_online_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendOnlineStateNotify::clear_has_online_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendOnlineStateNotify::clear_online_state() {
  online_state_ = 0u;
  clear_has_online_state();
}
inline ::google::protobuf::uint32 FriendOnlineStateNotify::online_state() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendOnlineStateNotify.online_state)
  return online_state_;
}
inline void FriendOnlineStateNotify::set_online_state(::google::protobuf::uint32 value) {
  set_has_online_state();
  online_state_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.FriendOnlineStateNotify.online_state)
}

// optional string mts_ip = 4;
inline bool FriendOnlineStateNotify::has_mts_ip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendOnlineStateNotify::set_has_mts_ip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendOnlineStateNotify::clear_has_mts_ip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendOnlineStateNotify::clear_mts_ip() {
  if (mts_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_->clear();
  }
  clear_has_mts_ip();
}
inline const ::std::string& FriendOnlineStateNotify::mts_ip() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendOnlineStateNotify.mts_ip)
  return *mts_ip_;
}
inline void FriendOnlineStateNotify::set_mts_ip(const ::std::string& value) {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  mts_ip_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.FriendOnlineStateNotify.mts_ip)
}
inline void FriendOnlineStateNotify::set_mts_ip(const char* value) {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  mts_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.FriendOnlineStateNotify.mts_ip)
}
inline void FriendOnlineStateNotify::set_mts_ip(const char* value, size_t size) {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  mts_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.FriendOnlineStateNotify.mts_ip)
}
inline ::std::string* FriendOnlineStateNotify::mutable_mts_ip() {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.FriendOnlineStateNotify.mts_ip)
  return mts_ip_;
}
inline ::std::string* FriendOnlineStateNotify::release_mts_ip() {
  clear_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mts_ip_;
    mts_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendOnlineStateNotify::set_allocated_mts_ip(::std::string* mts_ip) {
  if (mts_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mts_ip_;
  }
  if (mts_ip) {
    set_has_mts_ip();
    mts_ip_ = mts_ip;
  } else {
    clear_has_mts_ip();
    mts_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.FriendOnlineStateNotify.mts_ip)
}

// optional uint32 mts_port = 5;
inline bool FriendOnlineStateNotify::has_mts_port() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendOnlineStateNotify::set_has_mts_port() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendOnlineStateNotify::clear_has_mts_port() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendOnlineStateNotify::clear_mts_port() {
  mts_port_ = 0u;
  clear_has_mts_port();
}
inline ::google::protobuf::uint32 FriendOnlineStateNotify::mts_port() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendOnlineStateNotify.mts_port)
  return mts_port_;
}
inline void FriendOnlineStateNotify::set_mts_port(::google::protobuf::uint32 value) {
  set_has_mts_port();
  mts_port_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.FriendOnlineStateNotify.mts_port)
}

// -------------------------------------------------------------------

// FriendsOnlineStateNotify

// required uint64 user_id = 1;
inline bool FriendsOnlineStateNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendsOnlineStateNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendsOnlineStateNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendsOnlineStateNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 FriendsOnlineStateNotify::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendsOnlineStateNotify.user_id)
  return user_id_;
}
inline void FriendsOnlineStateNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.FriendsOnlineStateNotify.user_id)
}

// required uint32 sum_num = 2;
inline bool FriendsOnlineStateNotify::has_sum_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendsOnlineStateNotify::set_has_sum_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendsOnlineStateNotify::clear_has_sum_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendsOnlineStateNotify::clear_sum_num() {
  sum_num_ = 0u;
  clear_has_sum_num();
}
inline ::google::protobuf::uint32 FriendsOnlineStateNotify::sum_num() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendsOnlineStateNotify.sum_num)
  return sum_num_;
}
inline void FriendsOnlineStateNotify::set_sum_num(::google::protobuf::uint32 value) {
  set_has_sum_num();
  sum_num_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.FriendsOnlineStateNotify.sum_num)
}

// required uint32 cur_num = 3;
inline bool FriendsOnlineStateNotify::has_cur_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendsOnlineStateNotify::set_has_cur_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendsOnlineStateNotify::clear_has_cur_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendsOnlineStateNotify::clear_cur_num() {
  cur_num_ = 0u;
  clear_has_cur_num();
}
inline ::google::protobuf::uint32 FriendsOnlineStateNotify::cur_num() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendsOnlineStateNotify.cur_num)
  return cur_num_;
}
inline void FriendsOnlineStateNotify::set_cur_num(::google::protobuf::uint32 value) {
  set_has_cur_num();
  cur_num_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.FriendsOnlineStateNotify.cur_num)
}

// repeated .TerminalProtocol.FriendOnlineStateNotify friend_state = 4;
inline int FriendsOnlineStateNotify::friend_state_size() const {
  return friend_state_.size();
}
inline void FriendsOnlineStateNotify::clear_friend_state() {
  friend_state_.Clear();
}
inline const ::TerminalProtocol::FriendOnlineStateNotify& FriendsOnlineStateNotify::friend_state(int index) const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.FriendsOnlineStateNotify.friend_state)
  return friend_state_.Get(index);
}
inline ::TerminalProtocol::FriendOnlineStateNotify* FriendsOnlineStateNotify::mutable_friend_state(int index) {
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.FriendsOnlineStateNotify.friend_state)
  return friend_state_.Mutable(index);
}
inline ::TerminalProtocol::FriendOnlineStateNotify* FriendsOnlineStateNotify::add_friend_state() {
  // @@protoc_insertion_point(field_add:TerminalProtocol.FriendsOnlineStateNotify.friend_state)
  return friend_state_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::FriendOnlineStateNotify >&
FriendsOnlineStateNotify::friend_state() const {
  // @@protoc_insertion_point(field_list:TerminalProtocol.FriendsOnlineStateNotify.friend_state)
  return friend_state_;
}
inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::FriendOnlineStateNotify >*
FriendsOnlineStateNotify::mutable_friend_state() {
  // @@protoc_insertion_point(field_mutable_list:TerminalProtocol.FriendsOnlineStateNotify.friend_state)
  return &friend_state_;
}

// -------------------------------------------------------------------

// GetGroupListRequest

// required uint64 user_id = 1;
inline bool GetGroupListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupListRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupListRequest.user_id)
  return user_id_;
}
inline void GetGroupListRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupListRequest.user_id)
}

// -------------------------------------------------------------------

// GroupListItem

// required uint64 group_id = 1;
inline bool GroupListItem::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupListItem::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupListItem::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupListItem::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GroupListItem::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupListItem.group_id)
  return group_id_;
}
inline void GroupListItem::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupListItem.group_id)
}

// optional string group_name = 2;
inline bool GroupListItem::has_group_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupListItem::set_has_group_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupListItem::clear_has_group_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupListItem::clear_group_name() {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_->clear();
  }
  clear_has_group_name();
}
inline const ::std::string& GroupListItem::group_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupListItem.group_name)
  return *group_name_;
}
inline void GroupListItem::set_group_name(const ::std::string& value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupListItem.group_name)
}
inline void GroupListItem::set_group_name(const char* value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GroupListItem.group_name)
}
inline void GroupListItem::set_group_name(const char* value, size_t size) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GroupListItem.group_name)
}
inline ::std::string* GroupListItem::mutable_group_name() {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GroupListItem.group_name)
  return group_name_;
}
inline ::std::string* GroupListItem::release_group_name() {
  clear_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_name_;
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupListItem::set_allocated_group_name(::std::string* group_name) {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_name_;
  }
  if (group_name) {
    set_has_group_name();
    group_name_ = group_name;
  } else {
    clear_has_group_name();
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GroupListItem.group_name)
}

// optional string remark = 3;
inline bool GroupListItem::has_remark() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupListItem::set_has_remark() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupListItem::clear_has_remark() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupListItem::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& GroupListItem::remark() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupListItem.remark)
  return *remark_;
}
inline void GroupListItem::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupListItem.remark)
}
inline void GroupListItem::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GroupListItem.remark)
}
inline void GroupListItem::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GroupListItem.remark)
}
inline ::std::string* GroupListItem::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GroupListItem.remark)
  return remark_;
}
inline ::std::string* GroupListItem::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupListItem::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GroupListItem.remark)
}

// optional uint32 avatar_id = 4;
inline bool GroupListItem::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupListItem::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupListItem::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupListItem::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 GroupListItem::avatar_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupListItem.avatar_id)
  return avatar_id_;
}
inline void GroupListItem::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupListItem.avatar_id)
}

// optional string avatar = 5;
inline bool GroupListItem::has_avatar() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupListItem::set_has_avatar() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupListItem::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupListItem::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& GroupListItem::avatar() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupListItem.avatar)
  return *avatar_;
}
inline void GroupListItem::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupListItem.avatar)
}
inline void GroupListItem::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GroupListItem.avatar)
}
inline void GroupListItem::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GroupListItem.avatar)
}
inline ::std::string* GroupListItem::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GroupListItem.avatar)
  return avatar_;
}
inline ::std::string* GroupListItem::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupListItem::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GroupListItem.avatar)
}

// -------------------------------------------------------------------

// GetGroupListResponse

// required uint64 user_id = 1;
inline bool GetGroupListResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupListResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupListResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupListResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupListResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupListResponse.user_id)
  return user_id_;
}
inline void GetGroupListResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupListResponse.user_id)
}

// repeated .TerminalProtocol.GroupListItem group_item = 2;
inline int GetGroupListResponse::group_item_size() const {
  return group_item_.size();
}
inline void GetGroupListResponse::clear_group_item() {
  group_item_.Clear();
}
inline const ::TerminalProtocol::GroupListItem& GetGroupListResponse::group_item(int index) const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupListResponse.group_item)
  return group_item_.Get(index);
}
inline ::TerminalProtocol::GroupListItem* GetGroupListResponse::mutable_group_item(int index) {
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetGroupListResponse.group_item)
  return group_item_.Mutable(index);
}
inline ::TerminalProtocol::GroupListItem* GetGroupListResponse::add_group_item() {
  // @@protoc_insertion_point(field_add:TerminalProtocol.GetGroupListResponse.group_item)
  return group_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupListItem >&
GetGroupListResponse::group_item() const {
  // @@protoc_insertion_point(field_list:TerminalProtocol.GetGroupListResponse.group_item)
  return group_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupListItem >*
GetGroupListResponse::mutable_group_item() {
  // @@protoc_insertion_point(field_mutable_list:TerminalProtocol.GetGroupListResponse.group_item)
  return &group_item_;
}

// -------------------------------------------------------------------

// CreateGroupRequest

// required uint64 user_id = 1;
inline bool CreateGroupRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateGroupRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateGroupRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateGroupRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 CreateGroupRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.CreateGroupRequest.user_id)
  return user_id_;
}
inline void CreateGroupRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.CreateGroupRequest.user_id)
}

// required string group_name = 2;
inline bool CreateGroupRequest::has_group_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateGroupRequest::set_has_group_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateGroupRequest::clear_has_group_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateGroupRequest::clear_group_name() {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_->clear();
  }
  clear_has_group_name();
}
inline const ::std::string& CreateGroupRequest::group_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.CreateGroupRequest.group_name)
  return *group_name_;
}
inline void CreateGroupRequest::set_group_name(const ::std::string& value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.CreateGroupRequest.group_name)
}
inline void CreateGroupRequest::set_group_name(const char* value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.CreateGroupRequest.group_name)
}
inline void CreateGroupRequest::set_group_name(const char* value, size_t size) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.CreateGroupRequest.group_name)
}
inline ::std::string* CreateGroupRequest::mutable_group_name() {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.CreateGroupRequest.group_name)
  return group_name_;
}
inline ::std::string* CreateGroupRequest::release_group_name() {
  clear_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_name_;
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateGroupRequest::set_allocated_group_name(::std::string* group_name) {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_name_;
  }
  if (group_name) {
    set_has_group_name();
    group_name_ = group_name;
  } else {
    clear_has_group_name();
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.CreateGroupRequest.group_name)
}

// optional uint32 group_type = 3;
inline bool CreateGroupRequest::has_group_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateGroupRequest::set_has_group_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateGroupRequest::clear_has_group_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateGroupRequest::clear_group_type() {
  group_type_ = 0u;
  clear_has_group_type();
}
inline ::google::protobuf::uint32 CreateGroupRequest::group_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.CreateGroupRequest.group_type)
  return group_type_;
}
inline void CreateGroupRequest::set_group_type(::google::protobuf::uint32 value) {
  set_has_group_type();
  group_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.CreateGroupRequest.group_type)
}

// optional string group_icon = 4;
inline bool CreateGroupRequest::has_group_icon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateGroupRequest::set_has_group_icon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateGroupRequest::clear_has_group_icon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateGroupRequest::clear_group_icon() {
  if (group_icon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_icon_->clear();
  }
  clear_has_group_icon();
}
inline const ::std::string& CreateGroupRequest::group_icon() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.CreateGroupRequest.group_icon)
  return *group_icon_;
}
inline void CreateGroupRequest::set_group_icon(const ::std::string& value) {
  set_has_group_icon();
  if (group_icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_icon_ = new ::std::string;
  }
  group_icon_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.CreateGroupRequest.group_icon)
}
inline void CreateGroupRequest::set_group_icon(const char* value) {
  set_has_group_icon();
  if (group_icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_icon_ = new ::std::string;
  }
  group_icon_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.CreateGroupRequest.group_icon)
}
inline void CreateGroupRequest::set_group_icon(const char* value, size_t size) {
  set_has_group_icon();
  if (group_icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_icon_ = new ::std::string;
  }
  group_icon_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.CreateGroupRequest.group_icon)
}
inline ::std::string* CreateGroupRequest::mutable_group_icon() {
  set_has_group_icon();
  if (group_icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_icon_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.CreateGroupRequest.group_icon)
  return group_icon_;
}
inline ::std::string* CreateGroupRequest::release_group_icon() {
  clear_has_group_icon();
  if (group_icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_icon_;
    group_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateGroupRequest::set_allocated_group_icon(::std::string* group_icon) {
  if (group_icon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_icon_;
  }
  if (group_icon) {
    set_has_group_icon();
    group_icon_ = group_icon;
  } else {
    clear_has_group_icon();
    group_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.CreateGroupRequest.group_icon)
}

// optional uint32 verify_type = 5;
inline bool CreateGroupRequest::has_verify_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateGroupRequest::set_has_verify_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateGroupRequest::clear_has_verify_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateGroupRequest::clear_verify_type() {
  verify_type_ = 0u;
  clear_has_verify_type();
}
inline ::google::protobuf::uint32 CreateGroupRequest::verify_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.CreateGroupRequest.verify_type)
  return verify_type_;
}
inline void CreateGroupRequest::set_verify_type(::google::protobuf::uint32 value) {
  set_has_verify_type();
  verify_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.CreateGroupRequest.verify_type)
}

// optional string group_intro = 6;
inline bool CreateGroupRequest::has_group_intro() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateGroupRequest::set_has_group_intro() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateGroupRequest::clear_has_group_intro() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateGroupRequest::clear_group_intro() {
  if (group_intro_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_->clear();
  }
  clear_has_group_intro();
}
inline const ::std::string& CreateGroupRequest::group_intro() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.CreateGroupRequest.group_intro)
  return *group_intro_;
}
inline void CreateGroupRequest::set_group_intro(const ::std::string& value) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.CreateGroupRequest.group_intro)
}
inline void CreateGroupRequest::set_group_intro(const char* value) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.CreateGroupRequest.group_intro)
}
inline void CreateGroupRequest::set_group_intro(const char* value, size_t size) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.CreateGroupRequest.group_intro)
}
inline ::std::string* CreateGroupRequest::mutable_group_intro() {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.CreateGroupRequest.group_intro)
  return group_intro_;
}
inline ::std::string* CreateGroupRequest::release_group_intro() {
  clear_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_intro_;
    group_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateGroupRequest::set_allocated_group_intro(::std::string* group_intro) {
  if (group_intro_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_intro_;
  }
  if (group_intro) {
    set_has_group_intro();
    group_intro_ = group_intro;
  } else {
    clear_has_group_intro();
    group_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.CreateGroupRequest.group_intro)
}

// optional string group_sign = 7;
inline bool CreateGroupRequest::has_group_sign() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateGroupRequest::set_has_group_sign() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateGroupRequest::clear_has_group_sign() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateGroupRequest::clear_group_sign() {
  if (group_sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_sign_->clear();
  }
  clear_has_group_sign();
}
inline const ::std::string& CreateGroupRequest::group_sign() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.CreateGroupRequest.group_sign)
  return *group_sign_;
}
inline void CreateGroupRequest::set_group_sign(const ::std::string& value) {
  set_has_group_sign();
  if (group_sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_sign_ = new ::std::string;
  }
  group_sign_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.CreateGroupRequest.group_sign)
}
inline void CreateGroupRequest::set_group_sign(const char* value) {
  set_has_group_sign();
  if (group_sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_sign_ = new ::std::string;
  }
  group_sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.CreateGroupRequest.group_sign)
}
inline void CreateGroupRequest::set_group_sign(const char* value, size_t size) {
  set_has_group_sign();
  if (group_sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_sign_ = new ::std::string;
  }
  group_sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.CreateGroupRequest.group_sign)
}
inline ::std::string* CreateGroupRequest::mutable_group_sign() {
  set_has_group_sign();
  if (group_sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.CreateGroupRequest.group_sign)
  return group_sign_;
}
inline ::std::string* CreateGroupRequest::release_group_sign() {
  clear_has_group_sign();
  if (group_sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_sign_;
    group_sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateGroupRequest::set_allocated_group_sign(::std::string* group_sign) {
  if (group_sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_sign_;
  }
  if (group_sign) {
    set_has_group_sign();
    group_sign_ = group_sign;
  } else {
    clear_has_group_sign();
    group_sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.CreateGroupRequest.group_sign)
}

// optional uint32 avatar_id = 8;
inline bool CreateGroupRequest::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreateGroupRequest::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreateGroupRequest::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreateGroupRequest::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 CreateGroupRequest::avatar_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.CreateGroupRequest.avatar_id)
  return avatar_id_;
}
inline void CreateGroupRequest::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.CreateGroupRequest.avatar_id)
}

// optional uint32 sub_type = 9;
inline bool CreateGroupRequest::has_sub_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CreateGroupRequest::set_has_sub_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CreateGroupRequest::clear_has_sub_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CreateGroupRequest::clear_sub_type() {
  sub_type_ = 0u;
  clear_has_sub_type();
}
inline ::google::protobuf::uint32 CreateGroupRequest::sub_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.CreateGroupRequest.sub_type)
  return sub_type_;
}
inline void CreateGroupRequest::set_sub_type(::google::protobuf::uint32 value) {
  set_has_sub_type();
  sub_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.CreateGroupRequest.sub_type)
}

// -------------------------------------------------------------------

// CreateGroupResponse

// required .TerminalProtocol.Result result = 1;
inline bool CreateGroupResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateGroupResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateGroupResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateGroupResponse::clear_result() {
  if (result_ != NULL) result_->::TerminalProtocol::Result::Clear();
  clear_has_result();
}
inline const ::TerminalProtocol::Result& CreateGroupResponse::result() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.CreateGroupResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::TerminalProtocol::Result* CreateGroupResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::TerminalProtocol::Result;
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.CreateGroupResponse.result)
  return result_;
}
inline ::TerminalProtocol::Result* CreateGroupResponse::release_result() {
  clear_has_result();
  ::TerminalProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void CreateGroupResponse::set_allocated_result(::TerminalProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.CreateGroupResponse.result)
}

// optional uint64 user_id = 2;
inline bool CreateGroupResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateGroupResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateGroupResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateGroupResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 CreateGroupResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.CreateGroupResponse.user_id)
  return user_id_;
}
inline void CreateGroupResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.CreateGroupResponse.user_id)
}

// optional uint64 group_id = 3;
inline bool CreateGroupResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateGroupResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateGroupResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateGroupResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 CreateGroupResponse::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.CreateGroupResponse.group_id)
  return group_id_;
}
inline void CreateGroupResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.CreateGroupResponse.group_id)
}

// optional uint32 group_number = 4;
inline bool CreateGroupResponse::has_group_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateGroupResponse::set_has_group_number() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateGroupResponse::clear_has_group_number() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateGroupResponse::clear_group_number() {
  group_number_ = 0u;
  clear_has_group_number();
}
inline ::google::protobuf::uint32 CreateGroupResponse::group_number() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.CreateGroupResponse.group_number)
  return group_number_;
}
inline void CreateGroupResponse::set_group_number(::google::protobuf::uint32 value) {
  set_has_group_number();
  group_number_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.CreateGroupResponse.group_number)
}

// -------------------------------------------------------------------

// JoinGroupRequest

// required uint64 user_id = 1;
inline bool JoinGroupRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinGroupRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinGroupRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinGroupRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 JoinGroupRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupRequest.user_id)
  return user_id_;
}
inline void JoinGroupRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupRequest.user_id)
}

// required uint64 group_id = 2;
inline bool JoinGroupRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinGroupRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinGroupRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinGroupRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 JoinGroupRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupRequest.group_id)
  return group_id_;
}
inline void JoinGroupRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupRequest.group_id)
}

// -------------------------------------------------------------------

// JoinGroupResponse

// required uint64 user_id = 1;
inline bool JoinGroupResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinGroupResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinGroupResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinGroupResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 JoinGroupResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupResponse.user_id)
  return user_id_;
}
inline void JoinGroupResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupResponse.user_id)
}

// required uint64 group_id = 2;
inline bool JoinGroupResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinGroupResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinGroupResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinGroupResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 JoinGroupResponse::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupResponse.group_id)
  return group_id_;
}
inline void JoinGroupResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupResponse.group_id)
}

// optional uint32 verify_type = 3;
inline bool JoinGroupResponse::has_verify_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinGroupResponse::set_has_verify_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinGroupResponse::clear_has_verify_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinGroupResponse::clear_verify_type() {
  verify_type_ = 0u;
  clear_has_verify_type();
}
inline ::google::protobuf::uint32 JoinGroupResponse::verify_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupResponse.verify_type)
  return verify_type_;
}
inline void JoinGroupResponse::set_verify_type(::google::protobuf::uint32 value) {
  set_has_verify_type();
  verify_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupResponse.verify_type)
}

// -------------------------------------------------------------------

// JoinGroupVerifyRequest

// required uint64 user_id = 1;
inline bool JoinGroupVerifyRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinGroupVerifyRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinGroupVerifyRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinGroupVerifyRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 JoinGroupVerifyRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupVerifyRequest.user_id)
  return user_id_;
}
inline void JoinGroupVerifyRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupVerifyRequest.user_id)
}

// required uint64 group_id = 2;
inline bool JoinGroupVerifyRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinGroupVerifyRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinGroupVerifyRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinGroupVerifyRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 JoinGroupVerifyRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupVerifyRequest.group_id)
  return group_id_;
}
inline void JoinGroupVerifyRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupVerifyRequest.group_id)
}

// optional uint32 verify_type = 3;
inline bool JoinGroupVerifyRequest::has_verify_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinGroupVerifyRequest::set_has_verify_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinGroupVerifyRequest::clear_has_verify_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinGroupVerifyRequest::clear_verify_type() {
  verify_type_ = 0u;
  clear_has_verify_type();
}
inline ::google::protobuf::uint32 JoinGroupVerifyRequest::verify_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupVerifyRequest.verify_type)
  return verify_type_;
}
inline void JoinGroupVerifyRequest::set_verify_type(::google::protobuf::uint32 value) {
  set_has_verify_type();
  verify_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupVerifyRequest.verify_type)
}

// required string verify_msg = 4;
inline bool JoinGroupVerifyRequest::has_verify_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinGroupVerifyRequest::set_has_verify_msg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinGroupVerifyRequest::clear_has_verify_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinGroupVerifyRequest::clear_verify_msg() {
  if (verify_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verify_msg_->clear();
  }
  clear_has_verify_msg();
}
inline const ::std::string& JoinGroupVerifyRequest::verify_msg() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupVerifyRequest.verify_msg)
  return *verify_msg_;
}
inline void JoinGroupVerifyRequest::set_verify_msg(const ::std::string& value) {
  set_has_verify_msg();
  if (verify_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verify_msg_ = new ::std::string;
  }
  verify_msg_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupVerifyRequest.verify_msg)
}
inline void JoinGroupVerifyRequest::set_verify_msg(const char* value) {
  set_has_verify_msg();
  if (verify_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verify_msg_ = new ::std::string;
  }
  verify_msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.JoinGroupVerifyRequest.verify_msg)
}
inline void JoinGroupVerifyRequest::set_verify_msg(const char* value, size_t size) {
  set_has_verify_msg();
  if (verify_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verify_msg_ = new ::std::string;
  }
  verify_msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.JoinGroupVerifyRequest.verify_msg)
}
inline ::std::string* JoinGroupVerifyRequest::mutable_verify_msg() {
  set_has_verify_msg();
  if (verify_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verify_msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.JoinGroupVerifyRequest.verify_msg)
  return verify_msg_;
}
inline ::std::string* JoinGroupVerifyRequest::release_verify_msg() {
  clear_has_verify_msg();
  if (verify_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = verify_msg_;
    verify_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JoinGroupVerifyRequest::set_allocated_verify_msg(::std::string* verify_msg) {
  if (verify_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete verify_msg_;
  }
  if (verify_msg) {
    set_has_verify_msg();
    verify_msg_ = verify_msg;
  } else {
    clear_has_verify_msg();
    verify_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.JoinGroupVerifyRequest.verify_msg)
}

// optional uint64 group_manager_id = 5;
inline bool JoinGroupVerifyRequest::has_group_manager_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JoinGroupVerifyRequest::set_has_group_manager_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JoinGroupVerifyRequest::clear_has_group_manager_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JoinGroupVerifyRequest::clear_group_manager_id() {
  group_manager_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_manager_id();
}
inline ::google::protobuf::uint64 JoinGroupVerifyRequest::group_manager_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupVerifyRequest.group_manager_id)
  return group_manager_id_;
}
inline void JoinGroupVerifyRequest::set_group_manager_id(::google::protobuf::uint64 value) {
  set_has_group_manager_id();
  group_manager_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupVerifyRequest.group_manager_id)
}

// -------------------------------------------------------------------

// JoinGroupVerifyResponse

// required .TerminalProtocol.Result result = 1;
inline bool JoinGroupVerifyResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinGroupVerifyResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinGroupVerifyResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinGroupVerifyResponse::clear_result() {
  if (result_ != NULL) result_->::TerminalProtocol::Result::Clear();
  clear_has_result();
}
inline const ::TerminalProtocol::Result& JoinGroupVerifyResponse::result() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupVerifyResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::TerminalProtocol::Result* JoinGroupVerifyResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::TerminalProtocol::Result;
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.JoinGroupVerifyResponse.result)
  return result_;
}
inline ::TerminalProtocol::Result* JoinGroupVerifyResponse::release_result() {
  clear_has_result();
  ::TerminalProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void JoinGroupVerifyResponse::set_allocated_result(::TerminalProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.JoinGroupVerifyResponse.result)
}

// -------------------------------------------------------------------

// JoinGroupConfirmRequest

// required .TerminalProtocol.Result result = 1;
inline bool JoinGroupConfirmRequest::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinGroupConfirmRequest::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinGroupConfirmRequest::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinGroupConfirmRequest::clear_result() {
  if (result_ != NULL) result_->::TerminalProtocol::Result::Clear();
  clear_has_result();
}
inline const ::TerminalProtocol::Result& JoinGroupConfirmRequest::result() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupConfirmRequest.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::TerminalProtocol::Result* JoinGroupConfirmRequest::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::TerminalProtocol::Result;
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.JoinGroupConfirmRequest.result)
  return result_;
}
inline ::TerminalProtocol::Result* JoinGroupConfirmRequest::release_result() {
  clear_has_result();
  ::TerminalProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void JoinGroupConfirmRequest::set_allocated_result(::TerminalProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.JoinGroupConfirmRequest.result)
}

// required uint64 user_id = 2;
inline bool JoinGroupConfirmRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinGroupConfirmRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinGroupConfirmRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinGroupConfirmRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 JoinGroupConfirmRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupConfirmRequest.user_id)
  return user_id_;
}
inline void JoinGroupConfirmRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupConfirmRequest.user_id)
}

// required uint64 group_user_id = 3;
inline bool JoinGroupConfirmRequest::has_group_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinGroupConfirmRequest::set_has_group_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinGroupConfirmRequest::clear_has_group_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinGroupConfirmRequest::clear_group_user_id() {
  group_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_user_id();
}
inline ::google::protobuf::uint64 JoinGroupConfirmRequest::group_user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupConfirmRequest.group_user_id)
  return group_user_id_;
}
inline void JoinGroupConfirmRequest::set_group_user_id(::google::protobuf::uint64 value) {
  set_has_group_user_id();
  group_user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupConfirmRequest.group_user_id)
}

// optional uint64 group_id = 4;
inline bool JoinGroupConfirmRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinGroupConfirmRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinGroupConfirmRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinGroupConfirmRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 JoinGroupConfirmRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupConfirmRequest.group_id)
  return group_id_;
}
inline void JoinGroupConfirmRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupConfirmRequest.group_id)
}

// -------------------------------------------------------------------

// JoinGroupNotify

// required .TerminalProtocol.Result result = 1;
inline bool JoinGroupNotify::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinGroupNotify::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinGroupNotify::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinGroupNotify::clear_result() {
  if (result_ != NULL) result_->::TerminalProtocol::Result::Clear();
  clear_has_result();
}
inline const ::TerminalProtocol::Result& JoinGroupNotify::result() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupNotify.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::TerminalProtocol::Result* JoinGroupNotify::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::TerminalProtocol::Result;
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.JoinGroupNotify.result)
  return result_;
}
inline ::TerminalProtocol::Result* JoinGroupNotify::release_result() {
  clear_has_result();
  ::TerminalProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void JoinGroupNotify::set_allocated_result(::TerminalProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.JoinGroupNotify.result)
}

// required uint64 user_id = 2;
inline bool JoinGroupNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinGroupNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinGroupNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinGroupNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 JoinGroupNotify::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupNotify.user_id)
  return user_id_;
}
inline void JoinGroupNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupNotify.user_id)
}

// required uint64 group_id = 3;
inline bool JoinGroupNotify::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinGroupNotify::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinGroupNotify::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinGroupNotify::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 JoinGroupNotify::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupNotify.group_id)
  return group_id_;
}
inline void JoinGroupNotify::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupNotify.group_id)
}

// optional uint64 group_manager_id = 4;
inline bool JoinGroupNotify::has_group_manager_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinGroupNotify::set_has_group_manager_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinGroupNotify::clear_has_group_manager_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinGroupNotify::clear_group_manager_id() {
  group_manager_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_manager_id();
}
inline ::google::protobuf::uint64 JoinGroupNotify::group_manager_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.JoinGroupNotify.group_manager_id)
  return group_manager_id_;
}
inline void JoinGroupNotify::set_group_manager_id(::google::protobuf::uint64 value) {
  set_has_group_manager_id();
  group_manager_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.JoinGroupNotify.group_manager_id)
}

// -------------------------------------------------------------------

// ExitGroupRequest

// required uint64 user_id = 1;
inline bool ExitGroupRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitGroupRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitGroupRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitGroupRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 ExitGroupRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.ExitGroupRequest.user_id)
  return user_id_;
}
inline void ExitGroupRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.ExitGroupRequest.user_id)
}

// required uint64 group_id = 2;
inline bool ExitGroupRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExitGroupRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExitGroupRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExitGroupRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 ExitGroupRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.ExitGroupRequest.group_id)
  return group_id_;
}
inline void ExitGroupRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.ExitGroupRequest.group_id)
}

// -------------------------------------------------------------------

// ExitGroupResponse

// required uint64 user_id = 1;
inline bool ExitGroupResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitGroupResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitGroupResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitGroupResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 ExitGroupResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.ExitGroupResponse.user_id)
  return user_id_;
}
inline void ExitGroupResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.ExitGroupResponse.user_id)
}

// required uint64 group_id = 2;
inline bool ExitGroupResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExitGroupResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExitGroupResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExitGroupResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 ExitGroupResponse::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.ExitGroupResponse.group_id)
  return group_id_;
}
inline void ExitGroupResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.ExitGroupResponse.group_id)
}

// required .TerminalProtocol.Result result = 3;
inline bool ExitGroupResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExitGroupResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExitGroupResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExitGroupResponse::clear_result() {
  if (result_ != NULL) result_->::TerminalProtocol::Result::Clear();
  clear_has_result();
}
inline const ::TerminalProtocol::Result& ExitGroupResponse::result() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.ExitGroupResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::TerminalProtocol::Result* ExitGroupResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::TerminalProtocol::Result;
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.ExitGroupResponse.result)
  return result_;
}
inline ::TerminalProtocol::Result* ExitGroupResponse::release_result() {
  clear_has_result();
  ::TerminalProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void ExitGroupResponse::set_allocated_result(::TerminalProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.ExitGroupResponse.result)
}

// -------------------------------------------------------------------

// GetGroupUserListRequest

// required uint64 user_id = 1;
inline bool GetGroupUserListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupUserListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupUserListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupUserListRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupUserListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserListRequest.user_id)
  return user_id_;
}
inline void GetGroupUserListRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupUserListRequest.user_id)
}

// required uint64 group_id = 2;
inline bool GetGroupUserListRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupUserListRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupUserListRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupUserListRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupUserListRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserListRequest.group_id)
  return group_id_;
}
inline void GetGroupUserListRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupUserListRequest.group_id)
}

// -------------------------------------------------------------------

// GetGroupUserListResponse

// repeated uint64 user_id = 1;
inline int GetGroupUserListResponse::user_id_size() const {
  return user_id_.size();
}
inline void GetGroupUserListResponse::clear_user_id() {
  user_id_.Clear();
}
inline ::google::protobuf::uint64 GetGroupUserListResponse::user_id(int index) const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserListResponse.user_id)
  return user_id_.Get(index);
}
inline void GetGroupUserListResponse::set_user_id(int index, ::google::protobuf::uint64 value) {
  user_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupUserListResponse.user_id)
}
inline void GetGroupUserListResponse::add_user_id(::google::protobuf::uint64 value) {
  user_id_.Add(value);
  // @@protoc_insertion_point(field_add:TerminalProtocol.GetGroupUserListResponse.user_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetGroupUserListResponse::user_id() const {
  // @@protoc_insertion_point(field_list:TerminalProtocol.GetGroupUserListResponse.user_id)
  return user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetGroupUserListResponse::mutable_user_id() {
  // @@protoc_insertion_point(field_mutable_list:TerminalProtocol.GetGroupUserListResponse.user_id)
  return &user_id_;
}

// -------------------------------------------------------------------

// GetGroupUserInfoRequest

// required uint64 group_id = 1;
inline bool GetGroupUserInfoRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupUserInfoRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupUserInfoRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupUserInfoRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupUserInfoRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserInfoRequest.group_id)
  return group_id_;
}
inline void GetGroupUserInfoRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupUserInfoRequest.group_id)
}

// repeated uint64 user_id = 2;
inline int GetGroupUserInfoRequest::user_id_size() const {
  return user_id_.size();
}
inline void GetGroupUserInfoRequest::clear_user_id() {
  user_id_.Clear();
}
inline ::google::protobuf::uint64 GetGroupUserInfoRequest::user_id(int index) const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserInfoRequest.user_id)
  return user_id_.Get(index);
}
inline void GetGroupUserInfoRequest::set_user_id(int index, ::google::protobuf::uint64 value) {
  user_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupUserInfoRequest.user_id)
}
inline void GetGroupUserInfoRequest::add_user_id(::google::protobuf::uint64 value) {
  user_id_.Add(value);
  // @@protoc_insertion_point(field_add:TerminalProtocol.GetGroupUserInfoRequest.user_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetGroupUserInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_list:TerminalProtocol.GetGroupUserInfoRequest.user_id)
  return user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetGroupUserInfoRequest::mutable_user_id() {
  // @@protoc_insertion_point(field_mutable_list:TerminalProtocol.GetGroupUserInfoRequest.user_id)
  return &user_id_;
}

// -------------------------------------------------------------------

// GroupUserInfo

// required uint64 user_id = 1;
inline bool GroupUserInfo::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupUserInfo::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupUserInfo::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupUserInfo::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GroupUserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupUserInfo.user_id)
  return user_id_;
}
inline void GroupUserInfo::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupUserInfo.user_id)
}

// optional string nick_name = 2;
inline bool GroupUserInfo::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupUserInfo::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupUserInfo::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupUserInfo::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& GroupUserInfo::nick_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupUserInfo.nick_name)
  return *nick_name_;
}
inline void GroupUserInfo::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupUserInfo.nick_name)
}
inline void GroupUserInfo::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GroupUserInfo.nick_name)
}
inline void GroupUserInfo::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GroupUserInfo.nick_name)
}
inline ::std::string* GroupUserInfo::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GroupUserInfo.nick_name)
  return nick_name_;
}
inline ::std::string* GroupUserInfo::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupUserInfo::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GroupUserInfo.nick_name)
}

// optional uint32 online_state = 3;
inline bool GroupUserInfo::has_online_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupUserInfo::set_has_online_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupUserInfo::clear_has_online_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupUserInfo::clear_online_state() {
  online_state_ = 0u;
  clear_has_online_state();
}
inline ::google::protobuf::uint32 GroupUserInfo::online_state() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupUserInfo.online_state)
  return online_state_;
}
inline void GroupUserInfo::set_online_state(::google::protobuf::uint32 value) {
  set_has_online_state();
  online_state_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupUserInfo.online_state)
}

// optional uint32 avatar_id = 4;
inline bool GroupUserInfo::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupUserInfo::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupUserInfo::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupUserInfo::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 GroupUserInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupUserInfo.avatar_id)
  return avatar_id_;
}
inline void GroupUserInfo::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupUserInfo.avatar_id)
}

// optional string avatar = 5;
inline bool GroupUserInfo::has_avatar() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupUserInfo::set_has_avatar() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupUserInfo::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupUserInfo::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& GroupUserInfo::avatar() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupUserInfo.avatar)
  return *avatar_;
}
inline void GroupUserInfo::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupUserInfo.avatar)
}
inline void GroupUserInfo::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GroupUserInfo.avatar)
}
inline void GroupUserInfo::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GroupUserInfo.avatar)
}
inline ::std::string* GroupUserInfo::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GroupUserInfo.avatar)
  return avatar_;
}
inline ::std::string* GroupUserInfo::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupUserInfo::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GroupUserInfo.avatar)
}

// optional uint32 role = 6;
inline bool GroupUserInfo::has_role() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GroupUserInfo::set_has_role() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GroupUserInfo::clear_has_role() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GroupUserInfo::clear_role() {
  role_ = 0u;
  clear_has_role();
}
inline ::google::protobuf::uint32 GroupUserInfo::role() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupUserInfo.role)
  return role_;
}
inline void GroupUserInfo::set_role(::google::protobuf::uint32 value) {
  set_has_role();
  role_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupUserInfo.role)
}

// -------------------------------------------------------------------

// GetGroupUserInfoResponse

// optional uint64 group_id = 1;
inline bool GetGroupUserInfoResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupUserInfoResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupUserInfoResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupUserInfoResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupUserInfoResponse::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserInfoResponse.group_id)
  return group_id_;
}
inline void GetGroupUserInfoResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupUserInfoResponse.group_id)
}

// repeated .TerminalProtocol.GroupUserInfo user_info = 2;
inline int GetGroupUserInfoResponse::user_info_size() const {
  return user_info_.size();
}
inline void GetGroupUserInfoResponse::clear_user_info() {
  user_info_.Clear();
}
inline const ::TerminalProtocol::GroupUserInfo& GetGroupUserInfoResponse::user_info(int index) const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserInfoResponse.user_info)
  return user_info_.Get(index);
}
inline ::TerminalProtocol::GroupUserInfo* GetGroupUserInfoResponse::mutable_user_info(int index) {
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetGroupUserInfoResponse.user_info)
  return user_info_.Mutable(index);
}
inline ::TerminalProtocol::GroupUserInfo* GetGroupUserInfoResponse::add_user_info() {
  // @@protoc_insertion_point(field_add:TerminalProtocol.GetGroupUserInfoResponse.user_info)
  return user_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupUserInfo >&
GetGroupUserInfoResponse::user_info() const {
  // @@protoc_insertion_point(field_list:TerminalProtocol.GetGroupUserInfoResponse.user_info)
  return user_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupUserInfo >*
GetGroupUserInfoResponse::mutable_user_info() {
  // @@protoc_insertion_point(field_mutable_list:TerminalProtocol.GetGroupUserInfoResponse.user_info)
  return &user_info_;
}

// -------------------------------------------------------------------

// SearchGroupUserListRequest

// required uint64 group_id = 1;
inline bool SearchGroupUserListRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchGroupUserListRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchGroupUserListRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchGroupUserListRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 SearchGroupUserListRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SearchGroupUserListRequest.group_id)
  return group_id_;
}
inline void SearchGroupUserListRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SearchGroupUserListRequest.group_id)
}

// required string search_string = 2;
inline bool SearchGroupUserListRequest::has_search_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SearchGroupUserListRequest::set_has_search_string() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SearchGroupUserListRequest::clear_has_search_string() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SearchGroupUserListRequest::clear_search_string() {
  if (search_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_string_->clear();
  }
  clear_has_search_string();
}
inline const ::std::string& SearchGroupUserListRequest::search_string() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SearchGroupUserListRequest.search_string)
  return *search_string_;
}
inline void SearchGroupUserListRequest::set_search_string(const ::std::string& value) {
  set_has_search_string();
  if (search_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_string_ = new ::std::string;
  }
  search_string_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.SearchGroupUserListRequest.search_string)
}
inline void SearchGroupUserListRequest::set_search_string(const char* value) {
  set_has_search_string();
  if (search_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_string_ = new ::std::string;
  }
  search_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.SearchGroupUserListRequest.search_string)
}
inline void SearchGroupUserListRequest::set_search_string(const char* value, size_t size) {
  set_has_search_string();
  if (search_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_string_ = new ::std::string;
  }
  search_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.SearchGroupUserListRequest.search_string)
}
inline ::std::string* SearchGroupUserListRequest::mutable_search_string() {
  set_has_search_string();
  if (search_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.SearchGroupUserListRequest.search_string)
  return search_string_;
}
inline ::std::string* SearchGroupUserListRequest::release_search_string() {
  clear_has_search_string();
  if (search_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = search_string_;
    search_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SearchGroupUserListRequest::set_allocated_search_string(::std::string* search_string) {
  if (search_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete search_string_;
  }
  if (search_string) {
    set_has_search_string();
    search_string_ = search_string;
  } else {
    clear_has_search_string();
    search_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.SearchGroupUserListRequest.search_string)
}

// -------------------------------------------------------------------

// SearchGroupUserListResponse

// required uint64 group_id = 1;
inline bool SearchGroupUserListResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchGroupUserListResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchGroupUserListResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchGroupUserListResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 SearchGroupUserListResponse::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SearchGroupUserListResponse.group_id)
  return group_id_;
}
inline void SearchGroupUserListResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SearchGroupUserListResponse.group_id)
}

// repeated .TerminalProtocol.GroupUserInfo list_item = 2;
inline int SearchGroupUserListResponse::list_item_size() const {
  return list_item_.size();
}
inline void SearchGroupUserListResponse::clear_list_item() {
  list_item_.Clear();
}
inline const ::TerminalProtocol::GroupUserInfo& SearchGroupUserListResponse::list_item(int index) const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SearchGroupUserListResponse.list_item)
  return list_item_.Get(index);
}
inline ::TerminalProtocol::GroupUserInfo* SearchGroupUserListResponse::mutable_list_item(int index) {
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.SearchGroupUserListResponse.list_item)
  return list_item_.Mutable(index);
}
inline ::TerminalProtocol::GroupUserInfo* SearchGroupUserListResponse::add_list_item() {
  // @@protoc_insertion_point(field_add:TerminalProtocol.SearchGroupUserListResponse.list_item)
  return list_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupUserInfo >&
SearchGroupUserListResponse::list_item() const {
  // @@protoc_insertion_point(field_list:TerminalProtocol.SearchGroupUserListResponse.list_item)
  return list_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::GroupUserInfo >*
SearchGroupUserListResponse::mutable_list_item() {
  // @@protoc_insertion_point(field_mutable_list:TerminalProtocol.SearchGroupUserListResponse.list_item)
  return &list_item_;
}

// -------------------------------------------------------------------

// AddFriendRequest

// required uint64 user_id = 1;
inline bool AddFriendRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFriendRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFriendRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFriendRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AddFriendRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendRequest.user_id)
  return user_id_;
}
inline void AddFriendRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendRequest.user_id)
}

// required uint64 friend_id = 2;
inline bool AddFriendRequest::has_friend_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFriendRequest::set_has_friend_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFriendRequest::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFriendRequest::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 AddFriendRequest::friend_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendRequest.friend_id)
  return friend_id_;
}
inline void AddFriendRequest::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendRequest.friend_id)
}

// -------------------------------------------------------------------

// AddFriendResponse

// required uint32 verify_type = 1;
inline bool AddFriendResponse::has_verify_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFriendResponse::set_has_verify_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFriendResponse::clear_has_verify_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFriendResponse::clear_verify_type() {
  verify_type_ = 0u;
  clear_has_verify_type();
}
inline ::google::protobuf::uint32 AddFriendResponse::verify_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendResponse.verify_type)
  return verify_type_;
}
inline void AddFriendResponse::set_verify_type(::google::protobuf::uint32 value) {
  set_has_verify_type();
  verify_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendResponse.verify_type)
}

// optional uint32 question_type = 2;
inline bool AddFriendResponse::has_question_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFriendResponse::set_has_question_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFriendResponse::clear_has_question_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFriendResponse::clear_question_type() {
  question_type_ = 0u;
  clear_has_question_type();
}
inline ::google::protobuf::uint32 AddFriendResponse::question_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendResponse.question_type)
  return question_type_;
}
inline void AddFriendResponse::set_question_type(::google::protobuf::uint32 value) {
  set_has_question_type();
  question_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendResponse.question_type)
}

// -------------------------------------------------------------------

// AddFriendVerifyRequest

// required uint64 user_id = 1;
inline bool AddFriendVerifyRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFriendVerifyRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFriendVerifyRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFriendVerifyRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AddFriendVerifyRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendVerifyRequest.user_id)
  return user_id_;
}
inline void AddFriendVerifyRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendVerifyRequest.user_id)
}

// required uint64 friend_id = 2;
inline bool AddFriendVerifyRequest::has_friend_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFriendVerifyRequest::set_has_friend_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFriendVerifyRequest::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFriendVerifyRequest::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 AddFriendVerifyRequest::friend_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendVerifyRequest.friend_id)
  return friend_id_;
}
inline void AddFriendVerifyRequest::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendVerifyRequest.friend_id)
}

// required uint32 type = 3;
inline bool AddFriendVerifyRequest::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddFriendVerifyRequest::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddFriendVerifyRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddFriendVerifyRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 AddFriendVerifyRequest::type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendVerifyRequest.type)
  return type_;
}
inline void AddFriendVerifyRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendVerifyRequest.type)
}

// optional uint32 question_type = 4;
inline bool AddFriendVerifyRequest::has_question_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddFriendVerifyRequest::set_has_question_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddFriendVerifyRequest::clear_has_question_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddFriendVerifyRequest::clear_question_type() {
  question_type_ = 0u;
  clear_has_question_type();
}
inline ::google::protobuf::uint32 AddFriendVerifyRequest::question_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendVerifyRequest.question_type)
  return question_type_;
}
inline void AddFriendVerifyRequest::set_question_type(::google::protobuf::uint32 value) {
  set_has_question_type();
  question_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendVerifyRequest.question_type)
}

// optional string verify_msg = 5;
inline bool AddFriendVerifyRequest::has_verify_msg() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddFriendVerifyRequest::set_has_verify_msg() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddFriendVerifyRequest::clear_has_verify_msg() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddFriendVerifyRequest::clear_verify_msg() {
  if (verify_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verify_msg_->clear();
  }
  clear_has_verify_msg();
}
inline const ::std::string& AddFriendVerifyRequest::verify_msg() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendVerifyRequest.verify_msg)
  return *verify_msg_;
}
inline void AddFriendVerifyRequest::set_verify_msg(const ::std::string& value) {
  set_has_verify_msg();
  if (verify_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verify_msg_ = new ::std::string;
  }
  verify_msg_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendVerifyRequest.verify_msg)
}
inline void AddFriendVerifyRequest::set_verify_msg(const char* value) {
  set_has_verify_msg();
  if (verify_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verify_msg_ = new ::std::string;
  }
  verify_msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.AddFriendVerifyRequest.verify_msg)
}
inline void AddFriendVerifyRequest::set_verify_msg(const char* value, size_t size) {
  set_has_verify_msg();
  if (verify_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verify_msg_ = new ::std::string;
  }
  verify_msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.AddFriendVerifyRequest.verify_msg)
}
inline ::std::string* AddFriendVerifyRequest::mutable_verify_msg() {
  set_has_verify_msg();
  if (verify_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    verify_msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.AddFriendVerifyRequest.verify_msg)
  return verify_msg_;
}
inline ::std::string* AddFriendVerifyRequest::release_verify_msg() {
  clear_has_verify_msg();
  if (verify_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = verify_msg_;
    verify_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AddFriendVerifyRequest::set_allocated_verify_msg(::std::string* verify_msg) {
  if (verify_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete verify_msg_;
  }
  if (verify_msg) {
    set_has_verify_msg();
    verify_msg_ = verify_msg;
  } else {
    clear_has_verify_msg();
    verify_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.AddFriendVerifyRequest.verify_msg)
}

// -------------------------------------------------------------------

// AddFriendVerifyResponse

// required uint64 user_id = 1;
inline bool AddFriendVerifyResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFriendVerifyResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFriendVerifyResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFriendVerifyResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AddFriendVerifyResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendVerifyResponse.user_id)
  return user_id_;
}
inline void AddFriendVerifyResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendVerifyResponse.user_id)
}

// required uint64 friend_id = 2;
inline bool AddFriendVerifyResponse::has_friend_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFriendVerifyResponse::set_has_friend_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFriendVerifyResponse::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFriendVerifyResponse::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 AddFriendVerifyResponse::friend_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendVerifyResponse.friend_id)
  return friend_id_;
}
inline void AddFriendVerifyResponse::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendVerifyResponse.friend_id)
}

// required uint32 is_allow = 3;
inline bool AddFriendVerifyResponse::has_is_allow() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddFriendVerifyResponse::set_has_is_allow() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddFriendVerifyResponse::clear_has_is_allow() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddFriendVerifyResponse::clear_is_allow() {
  is_allow_ = 0u;
  clear_has_is_allow();
}
inline ::google::protobuf::uint32 AddFriendVerifyResponse::is_allow() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendVerifyResponse.is_allow)
  return is_allow_;
}
inline void AddFriendVerifyResponse::set_is_allow(::google::protobuf::uint32 value) {
  set_has_is_allow();
  is_allow_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendVerifyResponse.is_allow)
}

// optional string reason = 4;
inline bool AddFriendVerifyResponse::has_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddFriendVerifyResponse::set_has_reason() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddFriendVerifyResponse::clear_has_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddFriendVerifyResponse::clear_reason() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& AddFriendVerifyResponse::reason() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendVerifyResponse.reason)
  return *reason_;
}
inline void AddFriendVerifyResponse::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendVerifyResponse.reason)
}
inline void AddFriendVerifyResponse::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.AddFriendVerifyResponse.reason)
}
inline void AddFriendVerifyResponse::set_reason(const char* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.AddFriendVerifyResponse.reason)
}
inline ::std::string* AddFriendVerifyResponse::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.AddFriendVerifyResponse.reason)
  return reason_;
}
inline ::std::string* AddFriendVerifyResponse::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AddFriendVerifyResponse::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.AddFriendVerifyResponse.reason)
}

// -------------------------------------------------------------------

// AddFriendConfirmRequest

// required .TerminalProtocol.Result result = 1;
inline bool AddFriendConfirmRequest::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFriendConfirmRequest::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFriendConfirmRequest::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFriendConfirmRequest::clear_result() {
  if (result_ != NULL) result_->::TerminalProtocol::Result::Clear();
  clear_has_result();
}
inline const ::TerminalProtocol::Result& AddFriendConfirmRequest::result() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendConfirmRequest.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::TerminalProtocol::Result* AddFriendConfirmRequest::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::TerminalProtocol::Result;
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.AddFriendConfirmRequest.result)
  return result_;
}
inline ::TerminalProtocol::Result* AddFriendConfirmRequest::release_result() {
  clear_has_result();
  ::TerminalProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void AddFriendConfirmRequest::set_allocated_result(::TerminalProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.AddFriendConfirmRequest.result)
}

// required uint64 user_id = 2;
inline bool AddFriendConfirmRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFriendConfirmRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFriendConfirmRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFriendConfirmRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AddFriendConfirmRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendConfirmRequest.user_id)
  return user_id_;
}
inline void AddFriendConfirmRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendConfirmRequest.user_id)
}

// required uint64 friend_id = 3;
inline bool AddFriendConfirmRequest::has_friend_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddFriendConfirmRequest::set_has_friend_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddFriendConfirmRequest::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddFriendConfirmRequest::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 AddFriendConfirmRequest::friend_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendConfirmRequest.friend_id)
  return friend_id_;
}
inline void AddFriendConfirmRequest::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendConfirmRequest.friend_id)
}

// -------------------------------------------------------------------

// AddFriendNotify

// required .TerminalProtocol.Result result = 1;
inline bool AddFriendNotify::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFriendNotify::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFriendNotify::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFriendNotify::clear_result() {
  if (result_ != NULL) result_->::TerminalProtocol::Result::Clear();
  clear_has_result();
}
inline const ::TerminalProtocol::Result& AddFriendNotify::result() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendNotify.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::TerminalProtocol::Result* AddFriendNotify::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::TerminalProtocol::Result;
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.AddFriendNotify.result)
  return result_;
}
inline ::TerminalProtocol::Result* AddFriendNotify::release_result() {
  clear_has_result();
  ::TerminalProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void AddFriendNotify::set_allocated_result(::TerminalProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.AddFriendNotify.result)
}

// required uint64 user_id = 2;
inline bool AddFriendNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFriendNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFriendNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFriendNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AddFriendNotify::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendNotify.user_id)
  return user_id_;
}
inline void AddFriendNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendNotify.user_id)
}

// required uint64 friend_id = 3;
inline bool AddFriendNotify::has_friend_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddFriendNotify::set_has_friend_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddFriendNotify::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddFriendNotify::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 AddFriendNotify::friend_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddFriendNotify.friend_id)
  return friend_id_;
}
inline void AddFriendNotify::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddFriendNotify.friend_id)
}

// -------------------------------------------------------------------

// DeleteFriendRequest

// required uint64 user_id = 1;
inline bool DeleteFriendRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteFriendRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteFriendRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteFriendRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 DeleteFriendRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.DeleteFriendRequest.user_id)
  return user_id_;
}
inline void DeleteFriendRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.DeleteFriendRequest.user_id)
}

// required uint64 friend_id = 2;
inline bool DeleteFriendRequest::has_friend_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteFriendRequest::set_has_friend_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteFriendRequest::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteFriendRequest::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 DeleteFriendRequest::friend_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.DeleteFriendRequest.friend_id)
  return friend_id_;
}
inline void DeleteFriendRequest::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.DeleteFriendRequest.friend_id)
}

// -------------------------------------------------------------------

// DeleteFriendNotify

// required uint64 user_id = 1;
inline bool DeleteFriendNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteFriendNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteFriendNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteFriendNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 DeleteFriendNotify::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.DeleteFriendNotify.user_id)
  return user_id_;
}
inline void DeleteFriendNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.DeleteFriendNotify.user_id)
}

// required uint64 friend_id = 2;
inline bool DeleteFriendNotify::has_friend_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteFriendNotify::set_has_friend_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteFriendNotify::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteFriendNotify::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 DeleteFriendNotify::friend_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.DeleteFriendNotify.friend_id)
  return friend_id_;
}
inline void DeleteFriendNotify::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.DeleteFriendNotify.friend_id)
}

// -------------------------------------------------------------------

// UpdateFriendBranchRequest

// required uint64 user_id = 1;
inline bool UpdateFriendBranchRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateFriendBranchRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateFriendBranchRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateFriendBranchRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateFriendBranchRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateFriendBranchRequest.user_id)
  return user_id_;
}
inline void UpdateFriendBranchRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateFriendBranchRequest.user_id)
}

// required uint64 friend_id = 2;
inline bool UpdateFriendBranchRequest::has_friend_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateFriendBranchRequest::set_has_friend_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateFriendBranchRequest::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateFriendBranchRequest::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 UpdateFriendBranchRequest::friend_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateFriendBranchRequest.friend_id)
  return friend_id_;
}
inline void UpdateFriendBranchRequest::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateFriendBranchRequest.friend_id)
}

// required uint64 branch_id = 3;
inline bool UpdateFriendBranchRequest::has_branch_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateFriendBranchRequest::set_has_branch_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateFriendBranchRequest::clear_has_branch_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateFriendBranchRequest::clear_branch_id() {
  branch_id_ = GOOGLE_ULONGLONG(0);
  clear_has_branch_id();
}
inline ::google::protobuf::uint64 UpdateFriendBranchRequest::branch_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateFriendBranchRequest.branch_id)
  return branch_id_;
}
inline void UpdateFriendBranchRequest::set_branch_id(::google::protobuf::uint64 value) {
  set_has_branch_id();
  branch_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateFriendBranchRequest.branch_id)
}

// -------------------------------------------------------------------

// AddBranchRequest

// required uint64 user_id = 1;
inline bool AddBranchRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddBranchRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddBranchRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddBranchRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AddBranchRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddBranchRequest.user_id)
  return user_id_;
}
inline void AddBranchRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddBranchRequest.user_id)
}

// optional string branch_name = 2;
inline bool AddBranchRequest::has_branch_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddBranchRequest::set_has_branch_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddBranchRequest::clear_has_branch_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddBranchRequest::clear_branch_name() {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_->clear();
  }
  clear_has_branch_name();
}
inline const ::std::string& AddBranchRequest::branch_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddBranchRequest.branch_name)
  return *branch_name_;
}
inline void AddBranchRequest::set_branch_name(const ::std::string& value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddBranchRequest.branch_name)
}
inline void AddBranchRequest::set_branch_name(const char* value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.AddBranchRequest.branch_name)
}
inline void AddBranchRequest::set_branch_name(const char* value, size_t size) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.AddBranchRequest.branch_name)
}
inline ::std::string* AddBranchRequest::mutable_branch_name() {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.AddBranchRequest.branch_name)
  return branch_name_;
}
inline ::std::string* AddBranchRequest::release_branch_name() {
  clear_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = branch_name_;
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AddBranchRequest::set_allocated_branch_name(::std::string* branch_name) {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete branch_name_;
  }
  if (branch_name) {
    set_has_branch_name();
    branch_name_ = branch_name;
  } else {
    clear_has_branch_name();
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.AddBranchRequest.branch_name)
}

// optional uint32 branch_sort = 3;
inline bool AddBranchRequest::has_branch_sort() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddBranchRequest::set_has_branch_sort() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddBranchRequest::clear_has_branch_sort() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddBranchRequest::clear_branch_sort() {
  branch_sort_ = 0u;
  clear_has_branch_sort();
}
inline ::google::protobuf::uint32 AddBranchRequest::branch_sort() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddBranchRequest.branch_sort)
  return branch_sort_;
}
inline void AddBranchRequest::set_branch_sort(::google::protobuf::uint32 value) {
  set_has_branch_sort();
  branch_sort_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddBranchRequest.branch_sort)
}

// -------------------------------------------------------------------

// AddBranchResponse

// required uint64 user_id = 1;
inline bool AddBranchResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddBranchResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddBranchResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddBranchResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AddBranchResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddBranchResponse.user_id)
  return user_id_;
}
inline void AddBranchResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddBranchResponse.user_id)
}

// optional uint64 branch_id = 2;
inline bool AddBranchResponse::has_branch_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddBranchResponse::set_has_branch_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddBranchResponse::clear_has_branch_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddBranchResponse::clear_branch_id() {
  branch_id_ = GOOGLE_ULONGLONG(0);
  clear_has_branch_id();
}
inline ::google::protobuf::uint64 AddBranchResponse::branch_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddBranchResponse.branch_id)
  return branch_id_;
}
inline void AddBranchResponse::set_branch_id(::google::protobuf::uint64 value) {
  set_has_branch_id();
  branch_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddBranchResponse.branch_id)
}

// optional string branch_name = 3;
inline bool AddBranchResponse::has_branch_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddBranchResponse::set_has_branch_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddBranchResponse::clear_has_branch_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddBranchResponse::clear_branch_name() {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_->clear();
  }
  clear_has_branch_name();
}
inline const ::std::string& AddBranchResponse::branch_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddBranchResponse.branch_name)
  return *branch_name_;
}
inline void AddBranchResponse::set_branch_name(const ::std::string& value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddBranchResponse.branch_name)
}
inline void AddBranchResponse::set_branch_name(const char* value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.AddBranchResponse.branch_name)
}
inline void AddBranchResponse::set_branch_name(const char* value, size_t size) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.AddBranchResponse.branch_name)
}
inline ::std::string* AddBranchResponse::mutable_branch_name() {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.AddBranchResponse.branch_name)
  return branch_name_;
}
inline ::std::string* AddBranchResponse::release_branch_name() {
  clear_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = branch_name_;
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AddBranchResponse::set_allocated_branch_name(::std::string* branch_name) {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete branch_name_;
  }
  if (branch_name) {
    set_has_branch_name();
    branch_name_ = branch_name;
  } else {
    clear_has_branch_name();
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.AddBranchResponse.branch_name)
}

// optional uint32 branch_sort = 4;
inline bool AddBranchResponse::has_branch_sort() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddBranchResponse::set_has_branch_sort() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddBranchResponse::clear_has_branch_sort() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddBranchResponse::clear_branch_sort() {
  branch_sort_ = 0u;
  clear_has_branch_sort();
}
inline ::google::protobuf::uint32 AddBranchResponse::branch_sort() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.AddBranchResponse.branch_sort)
  return branch_sort_;
}
inline void AddBranchResponse::set_branch_sort(::google::protobuf::uint32 value) {
  set_has_branch_sort();
  branch_sort_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.AddBranchResponse.branch_sort)
}

// -------------------------------------------------------------------

// DeleteBranchRequest

// required uint64 user_id = 1;
inline bool DeleteBranchRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteBranchRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteBranchRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteBranchRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 DeleteBranchRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.DeleteBranchRequest.user_id)
  return user_id_;
}
inline void DeleteBranchRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.DeleteBranchRequest.user_id)
}

// required uint64 branch_id = 2;
inline bool DeleteBranchRequest::has_branch_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteBranchRequest::set_has_branch_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteBranchRequest::clear_has_branch_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteBranchRequest::clear_branch_id() {
  branch_id_ = GOOGLE_ULONGLONG(0);
  clear_has_branch_id();
}
inline ::google::protobuf::uint64 DeleteBranchRequest::branch_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.DeleteBranchRequest.branch_id)
  return branch_id_;
}
inline void DeleteBranchRequest::set_branch_id(::google::protobuf::uint64 value) {
  set_has_branch_id();
  branch_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.DeleteBranchRequest.branch_id)
}

// -------------------------------------------------------------------

// UpdateBranchNameRequest

// required uint64 user_id = 1;
inline bool UpdateBranchNameRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateBranchNameRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateBranchNameRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateBranchNameRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateBranchNameRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateBranchNameRequest.user_id)
  return user_id_;
}
inline void UpdateBranchNameRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateBranchNameRequest.user_id)
}

// optional uint64 branch_id = 2;
inline bool UpdateBranchNameRequest::has_branch_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateBranchNameRequest::set_has_branch_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateBranchNameRequest::clear_has_branch_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateBranchNameRequest::clear_branch_id() {
  branch_id_ = GOOGLE_ULONGLONG(0);
  clear_has_branch_id();
}
inline ::google::protobuf::uint64 UpdateBranchNameRequest::branch_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateBranchNameRequest.branch_id)
  return branch_id_;
}
inline void UpdateBranchNameRequest::set_branch_id(::google::protobuf::uint64 value) {
  set_has_branch_id();
  branch_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateBranchNameRequest.branch_id)
}

// optional string branch_name = 3;
inline bool UpdateBranchNameRequest::has_branch_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateBranchNameRequest::set_has_branch_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateBranchNameRequest::clear_has_branch_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateBranchNameRequest::clear_branch_name() {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_->clear();
  }
  clear_has_branch_name();
}
inline const ::std::string& UpdateBranchNameRequest::branch_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateBranchNameRequest.branch_name)
  return *branch_name_;
}
inline void UpdateBranchNameRequest::set_branch_name(const ::std::string& value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateBranchNameRequest.branch_name)
}
inline void UpdateBranchNameRequest::set_branch_name(const char* value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateBranchNameRequest.branch_name)
}
inline void UpdateBranchNameRequest::set_branch_name(const char* value, size_t size) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateBranchNameRequest.branch_name)
}
inline ::std::string* UpdateBranchNameRequest::mutable_branch_name() {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateBranchNameRequest.branch_name)
  return branch_name_;
}
inline ::std::string* UpdateBranchNameRequest::release_branch_name() {
  clear_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = branch_name_;
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateBranchNameRequest::set_allocated_branch_name(::std::string* branch_name) {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete branch_name_;
  }
  if (branch_name) {
    set_has_branch_name();
    branch_name_ = branch_name;
  } else {
    clear_has_branch_name();
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateBranchNameRequest.branch_name)
}

// optional uint32 branch_sort = 4;
inline bool UpdateBranchNameRequest::has_branch_sort() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateBranchNameRequest::set_has_branch_sort() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateBranchNameRequest::clear_has_branch_sort() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateBranchNameRequest::clear_branch_sort() {
  branch_sort_ = 0u;
  clear_has_branch_sort();
}
inline ::google::protobuf::uint32 UpdateBranchNameRequest::branch_sort() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateBranchNameRequest.branch_sort)
  return branch_sort_;
}
inline void UpdateBranchNameRequest::set_branch_sort(::google::protobuf::uint32 value) {
  set_has_branch_sort();
  branch_sort_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateBranchNameRequest.branch_sort)
}

// -------------------------------------------------------------------

// KickoutGroupUserRequest

// required uint64 user_id = 1;
inline bool KickoutGroupUserRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickoutGroupUserRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickoutGroupUserRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickoutGroupUserRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 KickoutGroupUserRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.KickoutGroupUserRequest.user_id)
  return user_id_;
}
inline void KickoutGroupUserRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.KickoutGroupUserRequest.user_id)
}

// optional uint64 group_user_id = 2;
inline bool KickoutGroupUserRequest::has_group_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KickoutGroupUserRequest::set_has_group_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KickoutGroupUserRequest::clear_has_group_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KickoutGroupUserRequest::clear_group_user_id() {
  group_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_user_id();
}
inline ::google::protobuf::uint64 KickoutGroupUserRequest::group_user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.KickoutGroupUserRequest.group_user_id)
  return group_user_id_;
}
inline void KickoutGroupUserRequest::set_group_user_id(::google::protobuf::uint64 value) {
  set_has_group_user_id();
  group_user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.KickoutGroupUserRequest.group_user_id)
}

// optional uint64 group_id = 3;
inline bool KickoutGroupUserRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KickoutGroupUserRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KickoutGroupUserRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KickoutGroupUserRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 KickoutGroupUserRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.KickoutGroupUserRequest.group_id)
  return group_id_;
}
inline void KickoutGroupUserRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.KickoutGroupUserRequest.group_id)
}

// -------------------------------------------------------------------

// SetGroupManagerRequest

// required uint64 user_id = 1;
inline bool SetGroupManagerRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGroupManagerRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGroupManagerRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGroupManagerRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 SetGroupManagerRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SetGroupManagerRequest.user_id)
  return user_id_;
}
inline void SetGroupManagerRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SetGroupManagerRequest.user_id)
}

// optional uint64 group_id = 2;
inline bool SetGroupManagerRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetGroupManagerRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetGroupManagerRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetGroupManagerRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 SetGroupManagerRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SetGroupManagerRequest.group_id)
  return group_id_;
}
inline void SetGroupManagerRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SetGroupManagerRequest.group_id)
}

// optional uint64 group_user_id = 3;
inline bool SetGroupManagerRequest::has_group_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetGroupManagerRequest::set_has_group_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetGroupManagerRequest::clear_has_group_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetGroupManagerRequest::clear_group_user_id() {
  group_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_user_id();
}
inline ::google::protobuf::uint64 SetGroupManagerRequest::group_user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SetGroupManagerRequest.group_user_id)
  return group_user_id_;
}
inline void SetGroupManagerRequest::set_group_user_id(::google::protobuf::uint64 value) {
  set_has_group_user_id();
  group_user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SetGroupManagerRequest.group_user_id)
}

// optional uint32 control_value = 4;
inline bool SetGroupManagerRequest::has_control_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetGroupManagerRequest::set_has_control_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetGroupManagerRequest::clear_has_control_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetGroupManagerRequest::clear_control_value() {
  control_value_ = 0u;
  clear_has_control_value();
}
inline ::google::protobuf::uint32 SetGroupManagerRequest::control_value() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SetGroupManagerRequest.control_value)
  return control_value_;
}
inline void SetGroupManagerRequest::set_control_value(::google::protobuf::uint32 value) {
  set_has_control_value();
  control_value_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SetGroupManagerRequest.control_value)
}

// -------------------------------------------------------------------

// UpdateFriendRemarkRequest

// required uint64 user_id = 1;
inline bool UpdateFriendRemarkRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateFriendRemarkRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateFriendRemarkRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateFriendRemarkRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateFriendRemarkRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateFriendRemarkRequest.user_id)
  return user_id_;
}
inline void UpdateFriendRemarkRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateFriendRemarkRequest.user_id)
}

// optional uint64 friend_id = 2;
inline bool UpdateFriendRemarkRequest::has_friend_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateFriendRemarkRequest::set_has_friend_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateFriendRemarkRequest::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateFriendRemarkRequest::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 UpdateFriendRemarkRequest::friend_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateFriendRemarkRequest.friend_id)
  return friend_id_;
}
inline void UpdateFriendRemarkRequest::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateFriendRemarkRequest.friend_id)
}

// optional string remark = 3;
inline bool UpdateFriendRemarkRequest::has_remark() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateFriendRemarkRequest::set_has_remark() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateFriendRemarkRequest::clear_has_remark() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateFriendRemarkRequest::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& UpdateFriendRemarkRequest::remark() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateFriendRemarkRequest.remark)
  return *remark_;
}
inline void UpdateFriendRemarkRequest::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateFriendRemarkRequest.remark)
}
inline void UpdateFriendRemarkRequest::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateFriendRemarkRequest.remark)
}
inline void UpdateFriendRemarkRequest::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateFriendRemarkRequest.remark)
}
inline ::std::string* UpdateFriendRemarkRequest::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateFriendRemarkRequest.remark)
  return remark_;
}
inline ::std::string* UpdateFriendRemarkRequest::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateFriendRemarkRequest::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateFriendRemarkRequest.remark)
}

// -------------------------------------------------------------------

// GetBranchListRequest

// required uint64 user_id = 1;
inline bool GetBranchListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBranchListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBranchListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBranchListRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetBranchListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetBranchListRequest.user_id)
  return user_id_;
}
inline void GetBranchListRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetBranchListRequest.user_id)
}

// optional uint64 version_id = 2;
inline bool GetBranchListRequest::has_version_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBranchListRequest::set_has_version_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBranchListRequest::clear_has_version_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBranchListRequest::clear_version_id() {
  version_id_ = GOOGLE_ULONGLONG(0);
  clear_has_version_id();
}
inline ::google::protobuf::uint64 GetBranchListRequest::version_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetBranchListRequest.version_id)
  return version_id_;
}
inline void GetBranchListRequest::set_version_id(::google::protobuf::uint64 value) {
  set_has_version_id();
  version_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetBranchListRequest.version_id)
}

// -------------------------------------------------------------------

// UserIdRemarkItem

// required uint64 user_id = 1;
inline bool UserIdRemarkItem::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserIdRemarkItem::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserIdRemarkItem::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserIdRemarkItem::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UserIdRemarkItem::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UserIdRemarkItem.user_id)
  return user_id_;
}
inline void UserIdRemarkItem::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UserIdRemarkItem.user_id)
}

// optional string user_remark = 2;
inline bool UserIdRemarkItem::has_user_remark() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserIdRemarkItem::set_has_user_remark() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserIdRemarkItem::clear_has_user_remark() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserIdRemarkItem::clear_user_remark() {
  if (user_remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_remark_->clear();
  }
  clear_has_user_remark();
}
inline const ::std::string& UserIdRemarkItem::user_remark() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UserIdRemarkItem.user_remark)
  return *user_remark_;
}
inline void UserIdRemarkItem::set_user_remark(const ::std::string& value) {
  set_has_user_remark();
  if (user_remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_remark_ = new ::std::string;
  }
  user_remark_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UserIdRemarkItem.user_remark)
}
inline void UserIdRemarkItem::set_user_remark(const char* value) {
  set_has_user_remark();
  if (user_remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_remark_ = new ::std::string;
  }
  user_remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UserIdRemarkItem.user_remark)
}
inline void UserIdRemarkItem::set_user_remark(const char* value, size_t size) {
  set_has_user_remark();
  if (user_remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_remark_ = new ::std::string;
  }
  user_remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UserIdRemarkItem.user_remark)
}
inline ::std::string* UserIdRemarkItem::mutable_user_remark() {
  set_has_user_remark();
  if (user_remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UserIdRemarkItem.user_remark)
  return user_remark_;
}
inline ::std::string* UserIdRemarkItem::release_user_remark() {
  clear_has_user_remark();
  if (user_remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_remark_;
    user_remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserIdRemarkItem::set_allocated_user_remark(::std::string* user_remark) {
  if (user_remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_remark_;
  }
  if (user_remark) {
    set_has_user_remark();
    user_remark_ = user_remark;
  } else {
    clear_has_user_remark();
    user_remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UserIdRemarkItem.user_remark)
}

// -------------------------------------------------------------------

// BranchListItem

// required uint64 branch_id = 1;
inline bool BranchListItem::has_branch_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BranchListItem::set_has_branch_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BranchListItem::clear_has_branch_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BranchListItem::clear_branch_id() {
  branch_id_ = GOOGLE_ULONGLONG(0);
  clear_has_branch_id();
}
inline ::google::protobuf::uint64 BranchListItem::branch_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.BranchListItem.branch_id)
  return branch_id_;
}
inline void BranchListItem::set_branch_id(::google::protobuf::uint64 value) {
  set_has_branch_id();
  branch_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.BranchListItem.branch_id)
}

// optional string branch_name = 2;
inline bool BranchListItem::has_branch_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BranchListItem::set_has_branch_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BranchListItem::clear_has_branch_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BranchListItem::clear_branch_name() {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_->clear();
  }
  clear_has_branch_name();
}
inline const ::std::string& BranchListItem::branch_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.BranchListItem.branch_name)
  return *branch_name_;
}
inline void BranchListItem::set_branch_name(const ::std::string& value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.BranchListItem.branch_name)
}
inline void BranchListItem::set_branch_name(const char* value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.BranchListItem.branch_name)
}
inline void BranchListItem::set_branch_name(const char* value, size_t size) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.BranchListItem.branch_name)
}
inline ::std::string* BranchListItem::mutable_branch_name() {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.BranchListItem.branch_name)
  return branch_name_;
}
inline ::std::string* BranchListItem::release_branch_name() {
  clear_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = branch_name_;
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BranchListItem::set_allocated_branch_name(::std::string* branch_name) {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete branch_name_;
  }
  if (branch_name) {
    set_has_branch_name();
    branch_name_ = branch_name;
  } else {
    clear_has_branch_name();
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.BranchListItem.branch_name)
}

// optional uint32 branch_sort = 3;
inline bool BranchListItem::has_branch_sort() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BranchListItem::set_has_branch_sort() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BranchListItem::clear_has_branch_sort() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BranchListItem::clear_branch_sort() {
  branch_sort_ = 0u;
  clear_has_branch_sort();
}
inline ::google::protobuf::uint32 BranchListItem::branch_sort() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.BranchListItem.branch_sort)
  return branch_sort_;
}
inline void BranchListItem::set_branch_sort(::google::protobuf::uint32 value) {
  set_has_branch_sort();
  branch_sort_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.BranchListItem.branch_sort)
}

// repeated .TerminalProtocol.UserIdRemarkItem users = 4;
inline int BranchListItem::users_size() const {
  return users_.size();
}
inline void BranchListItem::clear_users() {
  users_.Clear();
}
inline const ::TerminalProtocol::UserIdRemarkItem& BranchListItem::users(int index) const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.BranchListItem.users)
  return users_.Get(index);
}
inline ::TerminalProtocol::UserIdRemarkItem* BranchListItem::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.BranchListItem.users)
  return users_.Mutable(index);
}
inline ::TerminalProtocol::UserIdRemarkItem* BranchListItem::add_users() {
  // @@protoc_insertion_point(field_add:TerminalProtocol.BranchListItem.users)
  return users_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::UserIdRemarkItem >&
BranchListItem::users() const {
  // @@protoc_insertion_point(field_list:TerminalProtocol.BranchListItem.users)
  return users_;
}
inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::UserIdRemarkItem >*
BranchListItem::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:TerminalProtocol.BranchListItem.users)
  return &users_;
}

// -------------------------------------------------------------------

// GetBranchListResponse

// required uint64 user_id = 1;
inline bool GetBranchListResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBranchListResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBranchListResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBranchListResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetBranchListResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetBranchListResponse.user_id)
  return user_id_;
}
inline void GetBranchListResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetBranchListResponse.user_id)
}

// optional uint64 version_id = 2;
inline bool GetBranchListResponse::has_version_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBranchListResponse::set_has_version_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBranchListResponse::clear_has_version_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBranchListResponse::clear_version_id() {
  version_id_ = GOOGLE_ULONGLONG(0);
  clear_has_version_id();
}
inline ::google::protobuf::uint64 GetBranchListResponse::version_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetBranchListResponse.version_id)
  return version_id_;
}
inline void GetBranchListResponse::set_version_id(::google::protobuf::uint64 value) {
  set_has_version_id();
  version_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetBranchListResponse.version_id)
}

// repeated .TerminalProtocol.BranchListItem list_item = 3;
inline int GetBranchListResponse::list_item_size() const {
  return list_item_.size();
}
inline void GetBranchListResponse::clear_list_item() {
  list_item_.Clear();
}
inline const ::TerminalProtocol::BranchListItem& GetBranchListResponse::list_item(int index) const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetBranchListResponse.list_item)
  return list_item_.Get(index);
}
inline ::TerminalProtocol::BranchListItem* GetBranchListResponse::mutable_list_item(int index) {
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetBranchListResponse.list_item)
  return list_item_.Mutable(index);
}
inline ::TerminalProtocol::BranchListItem* GetBranchListResponse::add_list_item() {
  // @@protoc_insertion_point(field_add:TerminalProtocol.GetBranchListResponse.list_item)
  return list_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::BranchListItem >&
GetBranchListResponse::list_item() const {
  // @@protoc_insertion_point(field_list:TerminalProtocol.GetBranchListResponse.list_item)
  return list_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::BranchListItem >*
GetBranchListResponse::mutable_list_item() {
  // @@protoc_insertion_point(field_mutable_list:TerminalProtocol.GetBranchListResponse.list_item)
  return &list_item_;
}

// -------------------------------------------------------------------

// SetFriendOptionRequest

// required uint64 user_id = 1;
inline bool SetFriendOptionRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetFriendOptionRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetFriendOptionRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetFriendOptionRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 SetFriendOptionRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SetFriendOptionRequest.user_id)
  return user_id_;
}
inline void SetFriendOptionRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SetFriendOptionRequest.user_id)
}

// optional uint32 verify_type = 2;
inline bool SetFriendOptionRequest::has_verify_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetFriendOptionRequest::set_has_verify_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetFriendOptionRequest::clear_has_verify_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetFriendOptionRequest::clear_verify_type() {
  verify_type_ = 0u;
  clear_has_verify_type();
}
inline ::google::protobuf::uint32 SetFriendOptionRequest::verify_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SetFriendOptionRequest.verify_type)
  return verify_type_;
}
inline void SetFriendOptionRequest::set_verify_type(::google::protobuf::uint32 value) {
  set_has_verify_type();
  verify_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SetFriendOptionRequest.verify_type)
}

// optional uint32 question_type = 3;
inline bool SetFriendOptionRequest::has_question_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetFriendOptionRequest::set_has_question_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetFriendOptionRequest::clear_has_question_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetFriendOptionRequest::clear_question_type() {
  question_type_ = 0u;
  clear_has_question_type();
}
inline ::google::protobuf::uint32 SetFriendOptionRequest::question_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SetFriendOptionRequest.question_type)
  return question_type_;
}
inline void SetFriendOptionRequest::set_question_type(::google::protobuf::uint32 value) {
  set_has_question_type();
  question_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SetFriendOptionRequest.question_type)
}

// optional string answer = 4;
inline bool SetFriendOptionRequest::has_answer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetFriendOptionRequest::set_has_answer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetFriendOptionRequest::clear_has_answer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetFriendOptionRequest::clear_answer() {
  if (answer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_->clear();
  }
  clear_has_answer();
}
inline const ::std::string& SetFriendOptionRequest::answer() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SetFriendOptionRequest.answer)
  return *answer_;
}
inline void SetFriendOptionRequest::set_answer(const ::std::string& value) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.SetFriendOptionRequest.answer)
}
inline void SetFriendOptionRequest::set_answer(const char* value) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.SetFriendOptionRequest.answer)
}
inline void SetFriendOptionRequest::set_answer(const char* value, size_t size) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.SetFriendOptionRequest.answer)
}
inline ::std::string* SetFriendOptionRequest::mutable_answer() {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.SetFriendOptionRequest.answer)
  return answer_;
}
inline ::std::string* SetFriendOptionRequest::release_answer() {
  clear_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = answer_;
    answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetFriendOptionRequest::set_allocated_answer(::std::string* answer) {
  if (answer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete answer_;
  }
  if (answer) {
    set_has_answer();
    answer_ = answer;
  } else {
    clear_has_answer();
    answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.SetFriendOptionRequest.answer)
}

// -------------------------------------------------------------------

// GroupManagerVerifyRequest

// required uint64 user_id = 1;
inline bool GroupManagerVerifyRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupManagerVerifyRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupManagerVerifyRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupManagerVerifyRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GroupManagerVerifyRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupManagerVerifyRequest.user_id)
  return user_id_;
}
inline void GroupManagerVerifyRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupManagerVerifyRequest.user_id)
}

// required uint64 group_id = 2;
inline bool GroupManagerVerifyRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupManagerVerifyRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupManagerVerifyRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupManagerVerifyRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GroupManagerVerifyRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupManagerVerifyRequest.group_id)
  return group_id_;
}
inline void GroupManagerVerifyRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupManagerVerifyRequest.group_id)
}

// optional string msg = 3;
inline bool GroupManagerVerifyRequest::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupManagerVerifyRequest::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupManagerVerifyRequest::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupManagerVerifyRequest::clear_msg() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& GroupManagerVerifyRequest::msg() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupManagerVerifyRequest.msg)
  return *msg_;
}
inline void GroupManagerVerifyRequest::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupManagerVerifyRequest.msg)
}
inline void GroupManagerVerifyRequest::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GroupManagerVerifyRequest.msg)
}
inline void GroupManagerVerifyRequest::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GroupManagerVerifyRequest.msg)
}
inline ::std::string* GroupManagerVerifyRequest::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GroupManagerVerifyRequest.msg)
  return msg_;
}
inline ::std::string* GroupManagerVerifyRequest::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupManagerVerifyRequest::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GroupManagerVerifyRequest.msg)
}

// -------------------------------------------------------------------

// GroupManagerVerifyResponse

// required uint64 user_id = 1;
inline bool GroupManagerVerifyResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupManagerVerifyResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupManagerVerifyResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupManagerVerifyResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GroupManagerVerifyResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupManagerVerifyResponse.user_id)
  return user_id_;
}
inline void GroupManagerVerifyResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupManagerVerifyResponse.user_id)
}

// required uint64 group_id = 2;
inline bool GroupManagerVerifyResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupManagerVerifyResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupManagerVerifyResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupManagerVerifyResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GroupManagerVerifyResponse::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupManagerVerifyResponse.group_id)
  return group_id_;
}
inline void GroupManagerVerifyResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupManagerVerifyResponse.group_id)
}

// optional uint32 is_allow = 3;
inline bool GroupManagerVerifyResponse::has_is_allow() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupManagerVerifyResponse::set_has_is_allow() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupManagerVerifyResponse::clear_has_is_allow() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupManagerVerifyResponse::clear_is_allow() {
  is_allow_ = 0u;
  clear_has_is_allow();
}
inline ::google::protobuf::uint32 GroupManagerVerifyResponse::is_allow() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupManagerVerifyResponse.is_allow)
  return is_allow_;
}
inline void GroupManagerVerifyResponse::set_is_allow(::google::protobuf::uint32 value) {
  set_has_is_allow();
  is_allow_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupManagerVerifyResponse.is_allow)
}

// optional string reason = 4;
inline bool GroupManagerVerifyResponse::has_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupManagerVerifyResponse::set_has_reason() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupManagerVerifyResponse::clear_has_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupManagerVerifyResponse::clear_reason() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& GroupManagerVerifyResponse::reason() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GroupManagerVerifyResponse.reason)
  return *reason_;
}
inline void GroupManagerVerifyResponse::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GroupManagerVerifyResponse.reason)
}
inline void GroupManagerVerifyResponse::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GroupManagerVerifyResponse.reason)
}
inline void GroupManagerVerifyResponse::set_reason(const char* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GroupManagerVerifyResponse.reason)
}
inline ::std::string* GroupManagerVerifyResponse::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GroupManagerVerifyResponse.reason)
  return reason_;
}
inline ::std::string* GroupManagerVerifyResponse::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupManagerVerifyResponse::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GroupManagerVerifyResponse.reason)
}

// -------------------------------------------------------------------

// DeleteGroupRequest

// required uint64 user_id = 1;
inline bool DeleteGroupRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteGroupRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteGroupRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteGroupRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 DeleteGroupRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.DeleteGroupRequest.user_id)
  return user_id_;
}
inline void DeleteGroupRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.DeleteGroupRequest.user_id)
}

// optional uint64 group_id = 2;
inline bool DeleteGroupRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteGroupRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteGroupRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteGroupRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 DeleteGroupRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.DeleteGroupRequest.group_id)
  return group_id_;
}
inline void DeleteGroupRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.DeleteGroupRequest.group_id)
}

// -------------------------------------------------------------------

// DeleteGroupResponse

// optional .TerminalProtocol.Result result = 3;
inline bool DeleteGroupResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteGroupResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteGroupResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteGroupResponse::clear_result() {
  if (result_ != NULL) result_->::TerminalProtocol::Result::Clear();
  clear_has_result();
}
inline const ::TerminalProtocol::Result& DeleteGroupResponse::result() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.DeleteGroupResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::TerminalProtocol::Result* DeleteGroupResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::TerminalProtocol::Result;
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.DeleteGroupResponse.result)
  return result_;
}
inline ::TerminalProtocol::Result* DeleteGroupResponse::release_result() {
  clear_has_result();
  ::TerminalProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void DeleteGroupResponse::set_allocated_result(::TerminalProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.DeleteGroupResponse.result)
}

// -------------------------------------------------------------------

// UpdateGroupRemarkRequest

// required uint64 user_id = 1;
inline bool UpdateGroupRemarkRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGroupRemarkRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGroupRemarkRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGroupRemarkRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateGroupRemarkRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupRemarkRequest.user_id)
  return user_id_;
}
inline void UpdateGroupRemarkRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupRemarkRequest.user_id)
}

// required uint64 group_id = 2;
inline bool UpdateGroupRemarkRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateGroupRemarkRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateGroupRemarkRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateGroupRemarkRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 UpdateGroupRemarkRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupRemarkRequest.group_id)
  return group_id_;
}
inline void UpdateGroupRemarkRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupRemarkRequest.group_id)
}

// required uint64 group_user_id = 3;
inline bool UpdateGroupRemarkRequest::has_group_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateGroupRemarkRequest::set_has_group_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateGroupRemarkRequest::clear_has_group_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateGroupRemarkRequest::clear_group_user_id() {
  group_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_user_id();
}
inline ::google::protobuf::uint64 UpdateGroupRemarkRequest::group_user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupRemarkRequest.group_user_id)
  return group_user_id_;
}
inline void UpdateGroupRemarkRequest::set_group_user_id(::google::protobuf::uint64 value) {
  set_has_group_user_id();
  group_user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupRemarkRequest.group_user_id)
}

// optional string remark = 4;
inline bool UpdateGroupRemarkRequest::has_remark() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateGroupRemarkRequest::set_has_remark() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateGroupRemarkRequest::clear_has_remark() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateGroupRemarkRequest::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& UpdateGroupRemarkRequest::remark() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupRemarkRequest.remark)
  return *remark_;
}
inline void UpdateGroupRemarkRequest::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupRemarkRequest.remark)
}
inline void UpdateGroupRemarkRequest::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateGroupRemarkRequest.remark)
}
inline void UpdateGroupRemarkRequest::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateGroupRemarkRequest.remark)
}
inline ::std::string* UpdateGroupRemarkRequest::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateGroupRemarkRequest.remark)
  return remark_;
}
inline ::std::string* UpdateGroupRemarkRequest::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupRemarkRequest::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateGroupRemarkRequest.remark)
}

// -------------------------------------------------------------------

// UpdateGroupInfoRequest

// required uint64 user_id = 1;
inline bool UpdateGroupInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGroupInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGroupInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateGroupInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupInfoRequest.user_id)
  return user_id_;
}
inline void UpdateGroupInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupInfoRequest.user_id)
}

// required uint64 group_id = 2;
inline bool UpdateGroupInfoRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateGroupInfoRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateGroupInfoRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 UpdateGroupInfoRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupInfoRequest.group_id)
  return group_id_;
}
inline void UpdateGroupInfoRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupInfoRequest.group_id)
}

// optional string group_name = 3;
inline bool UpdateGroupInfoRequest::has_group_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_group_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateGroupInfoRequest::clear_has_group_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateGroupInfoRequest::clear_group_name() {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_->clear();
  }
  clear_has_group_name();
}
inline const ::std::string& UpdateGroupInfoRequest::group_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupInfoRequest.group_name)
  return *group_name_;
}
inline void UpdateGroupInfoRequest::set_group_name(const ::std::string& value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupInfoRequest.group_name)
}
inline void UpdateGroupInfoRequest::set_group_name(const char* value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateGroupInfoRequest.group_name)
}
inline void UpdateGroupInfoRequest::set_group_name(const char* value, size_t size) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateGroupInfoRequest.group_name)
}
inline ::std::string* UpdateGroupInfoRequest::mutable_group_name() {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateGroupInfoRequest.group_name)
  return group_name_;
}
inline ::std::string* UpdateGroupInfoRequest::release_group_name() {
  clear_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_name_;
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupInfoRequest::set_allocated_group_name(::std::string* group_name) {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_name_;
  }
  if (group_name) {
    set_has_group_name();
    group_name_ = group_name;
  } else {
    clear_has_group_name();
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateGroupInfoRequest.group_name)
}

// optional string remark = 4;
inline bool UpdateGroupInfoRequest::has_remark() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_remark() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateGroupInfoRequest::clear_has_remark() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateGroupInfoRequest::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& UpdateGroupInfoRequest::remark() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupInfoRequest.remark)
  return *remark_;
}
inline void UpdateGroupInfoRequest::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupInfoRequest.remark)
}
inline void UpdateGroupInfoRequest::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateGroupInfoRequest.remark)
}
inline void UpdateGroupInfoRequest::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateGroupInfoRequest.remark)
}
inline ::std::string* UpdateGroupInfoRequest::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateGroupInfoRequest.remark)
  return remark_;
}
inline ::std::string* UpdateGroupInfoRequest::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupInfoRequest::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateGroupInfoRequest.remark)
}

// optional uint32 type = 5;
inline bool UpdateGroupInfoRequest::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateGroupInfoRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateGroupInfoRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 UpdateGroupInfoRequest::type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupInfoRequest.type)
  return type_;
}
inline void UpdateGroupInfoRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupInfoRequest.type)
}

// optional string group_intro = 6;
inline bool UpdateGroupInfoRequest::has_group_intro() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_group_intro() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateGroupInfoRequest::clear_has_group_intro() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateGroupInfoRequest::clear_group_intro() {
  if (group_intro_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_->clear();
  }
  clear_has_group_intro();
}
inline const ::std::string& UpdateGroupInfoRequest::group_intro() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupInfoRequest.group_intro)
  return *group_intro_;
}
inline void UpdateGroupInfoRequest::set_group_intro(const ::std::string& value) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupInfoRequest.group_intro)
}
inline void UpdateGroupInfoRequest::set_group_intro(const char* value) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateGroupInfoRequest.group_intro)
}
inline void UpdateGroupInfoRequest::set_group_intro(const char* value, size_t size) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateGroupInfoRequest.group_intro)
}
inline ::std::string* UpdateGroupInfoRequest::mutable_group_intro() {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateGroupInfoRequest.group_intro)
  return group_intro_;
}
inline ::std::string* UpdateGroupInfoRequest::release_group_intro() {
  clear_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_intro_;
    group_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupInfoRequest::set_allocated_group_intro(::std::string* group_intro) {
  if (group_intro_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_intro_;
  }
  if (group_intro) {
    set_has_group_intro();
    group_intro_ = group_intro;
  } else {
    clear_has_group_intro();
    group_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateGroupInfoRequest.group_intro)
}

// optional string group_notice = 7;
inline bool UpdateGroupInfoRequest::has_group_notice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_group_notice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UpdateGroupInfoRequest::clear_has_group_notice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UpdateGroupInfoRequest::clear_group_notice() {
  if (group_notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_->clear();
  }
  clear_has_group_notice();
}
inline const ::std::string& UpdateGroupInfoRequest::group_notice() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupInfoRequest.group_notice)
  return *group_notice_;
}
inline void UpdateGroupInfoRequest::set_group_notice(const ::std::string& value) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupInfoRequest.group_notice)
}
inline void UpdateGroupInfoRequest::set_group_notice(const char* value) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateGroupInfoRequest.group_notice)
}
inline void UpdateGroupInfoRequest::set_group_notice(const char* value, size_t size) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateGroupInfoRequest.group_notice)
}
inline ::std::string* UpdateGroupInfoRequest::mutable_group_notice() {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateGroupInfoRequest.group_notice)
  return group_notice_;
}
inline ::std::string* UpdateGroupInfoRequest::release_group_notice() {
  clear_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_notice_;
    group_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupInfoRequest::set_allocated_group_notice(::std::string* group_notice) {
  if (group_notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_notice_;
  }
  if (group_notice) {
    set_has_group_notice();
    group_notice_ = group_notice;
  } else {
    clear_has_group_notice();
    group_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateGroupInfoRequest.group_notice)
}

// optional string avatar = 8;
inline bool UpdateGroupInfoRequest::has_avatar() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_avatar() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UpdateGroupInfoRequest::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UpdateGroupInfoRequest::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& UpdateGroupInfoRequest::avatar() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupInfoRequest.avatar)
  return *avatar_;
}
inline void UpdateGroupInfoRequest::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupInfoRequest.avatar)
}
inline void UpdateGroupInfoRequest::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateGroupInfoRequest.avatar)
}
inline void UpdateGroupInfoRequest::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateGroupInfoRequest.avatar)
}
inline ::std::string* UpdateGroupInfoRequest::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateGroupInfoRequest.avatar)
  return avatar_;
}
inline ::std::string* UpdateGroupInfoRequest::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupInfoRequest::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateGroupInfoRequest.avatar)
}

// optional uint32 avatar_id = 9;
inline bool UpdateGroupInfoRequest::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UpdateGroupInfoRequest::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UpdateGroupInfoRequest::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 UpdateGroupInfoRequest::avatar_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupInfoRequest.avatar_id)
  return avatar_id_;
}
inline void UpdateGroupInfoRequest::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupInfoRequest.avatar_id)
}

// optional uint32 sub_type = 10;
inline bool UpdateGroupInfoRequest::has_sub_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_sub_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UpdateGroupInfoRequest::clear_has_sub_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UpdateGroupInfoRequest::clear_sub_type() {
  sub_type_ = 0u;
  clear_has_sub_type();
}
inline ::google::protobuf::uint32 UpdateGroupInfoRequest::sub_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupInfoRequest.sub_type)
  return sub_type_;
}
inline void UpdateGroupInfoRequest::set_sub_type(::google::protobuf::uint32 value) {
  set_has_sub_type();
  sub_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupInfoRequest.sub_type)
}

// -------------------------------------------------------------------

// UpdateGroupOptionRequest

// required uint64 user_id = 1;
inline bool UpdateGroupOptionRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGroupOptionRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGroupOptionRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGroupOptionRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateGroupOptionRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupOptionRequest.user_id)
  return user_id_;
}
inline void UpdateGroupOptionRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupOptionRequest.user_id)
}

// required uint64 group_id = 2;
inline bool UpdateGroupOptionRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateGroupOptionRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateGroupOptionRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateGroupOptionRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 UpdateGroupOptionRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupOptionRequest.group_id)
  return group_id_;
}
inline void UpdateGroupOptionRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupOptionRequest.group_id)
}

// optional uint32 verify_type = 3;
inline bool UpdateGroupOptionRequest::has_verify_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateGroupOptionRequest::set_has_verify_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateGroupOptionRequest::clear_has_verify_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateGroupOptionRequest::clear_verify_type() {
  verify_type_ = 0u;
  clear_has_verify_type();
}
inline ::google::protobuf::uint32 UpdateGroupOptionRequest::verify_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupOptionRequest.verify_type)
  return verify_type_;
}
inline void UpdateGroupOptionRequest::set_verify_type(::google::protobuf::uint32 value) {
  set_has_verify_type();
  verify_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupOptionRequest.verify_type)
}

// optional uint64 channel_id = 4;
inline bool UpdateGroupOptionRequest::has_channel_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateGroupOptionRequest::set_has_channel_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateGroupOptionRequest::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateGroupOptionRequest::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 UpdateGroupOptionRequest::channel_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupOptionRequest.channel_id)
  return channel_id_;
}
inline void UpdateGroupOptionRequest::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupOptionRequest.channel_id)
}

// -------------------------------------------------------------------

// GetGroupOptionRequest

// required uint64 user_id = 1;
inline bool GetGroupOptionRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupOptionRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupOptionRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupOptionRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupOptionRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupOptionRequest.user_id)
  return user_id_;
}
inline void GetGroupOptionRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupOptionRequest.user_id)
}

// required uint64 group_id = 2;
inline bool GetGroupOptionRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupOptionRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupOptionRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupOptionRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupOptionRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupOptionRequest.group_id)
  return group_id_;
}
inline void GetGroupOptionRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupOptionRequest.group_id)
}

// -------------------------------------------------------------------

// GetGroupOptionResponse

// required .TerminalProtocol.Result result = 1;
inline bool GetGroupOptionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupOptionResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupOptionResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupOptionResponse::clear_result() {
  if (result_ != NULL) result_->::TerminalProtocol::Result::Clear();
  clear_has_result();
}
inline const ::TerminalProtocol::Result& GetGroupOptionResponse::result() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupOptionResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::TerminalProtocol::Result* GetGroupOptionResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::TerminalProtocol::Result;
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetGroupOptionResponse.result)
  return result_;
}
inline ::TerminalProtocol::Result* GetGroupOptionResponse::release_result() {
  clear_has_result();
  ::TerminalProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetGroupOptionResponse::set_allocated_result(::TerminalProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetGroupOptionResponse.result)
}

// optional uint64 user_id = 2;
inline bool GetGroupOptionResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupOptionResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupOptionResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupOptionResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupOptionResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupOptionResponse.user_id)
  return user_id_;
}
inline void GetGroupOptionResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupOptionResponse.user_id)
}

// optional uint64 group_id = 3;
inline bool GetGroupOptionResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetGroupOptionResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetGroupOptionResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetGroupOptionResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupOptionResponse::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupOptionResponse.group_id)
  return group_id_;
}
inline void GetGroupOptionResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupOptionResponse.group_id)
}

// optional uint32 verify_type = 4;
inline bool GetGroupOptionResponse::has_verify_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetGroupOptionResponse::set_has_verify_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetGroupOptionResponse::clear_has_verify_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetGroupOptionResponse::clear_verify_type() {
  verify_type_ = 0u;
  clear_has_verify_type();
}
inline ::google::protobuf::uint32 GetGroupOptionResponse::verify_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupOptionResponse.verify_type)
  return verify_type_;
}
inline void GetGroupOptionResponse::set_verify_type(::google::protobuf::uint32 value) {
  set_has_verify_type();
  verify_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupOptionResponse.verify_type)
}

// optional uint64 channel_id = 5;
inline bool GetGroupOptionResponse::has_channel_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetGroupOptionResponse::set_has_channel_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetGroupOptionResponse::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetGroupOptionResponse::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 GetGroupOptionResponse::channel_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupOptionResponse.channel_id)
  return channel_id_;
}
inline void GetGroupOptionResponse::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupOptionResponse.channel_id)
}

// optional int32 msg_mode = 6;
inline bool GetGroupOptionResponse::has_msg_mode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetGroupOptionResponse::set_has_msg_mode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetGroupOptionResponse::clear_has_msg_mode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetGroupOptionResponse::clear_msg_mode() {
  msg_mode_ = 0;
  clear_has_msg_mode();
}
inline ::google::protobuf::int32 GetGroupOptionResponse::msg_mode() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupOptionResponse.msg_mode)
  return msg_mode_;
}
inline void GetGroupOptionResponse::set_msg_mode(::google::protobuf::int32 value) {
  set_has_msg_mode();
  msg_mode_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupOptionResponse.msg_mode)
}

// optional int32 talk_mode = 7;
inline bool GetGroupOptionResponse::has_talk_mode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetGroupOptionResponse::set_has_talk_mode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetGroupOptionResponse::clear_has_talk_mode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetGroupOptionResponse::clear_talk_mode() {
  talk_mode_ = 0;
  clear_has_talk_mode();
}
inline ::google::protobuf::int32 GetGroupOptionResponse::talk_mode() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupOptionResponse.talk_mode)
  return talk_mode_;
}
inline void GetGroupOptionResponse::set_talk_mode(::google::protobuf::int32 value) {
  set_has_talk_mode();
  talk_mode_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupOptionResponse.talk_mode)
}

// -------------------------------------------------------------------

// UpdateGroupNotice

// required uint64 user_id = 1;
inline bool UpdateGroupNotice::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGroupNotice::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGroupNotice::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGroupNotice::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateGroupNotice::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupNotice.user_id)
  return user_id_;
}
inline void UpdateGroupNotice::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupNotice.user_id)
}

// required uint64 group_id = 2;
inline bool UpdateGroupNotice::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateGroupNotice::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateGroupNotice::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateGroupNotice::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 UpdateGroupNotice::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupNotice.group_id)
  return group_id_;
}
inline void UpdateGroupNotice::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupNotice.group_id)
}

// optional string notice = 3;
inline bool UpdateGroupNotice::has_notice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateGroupNotice::set_has_notice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateGroupNotice::clear_has_notice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateGroupNotice::clear_notice() {
  if (notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& UpdateGroupNotice::notice() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupNotice.notice)
  return *notice_;
}
inline void UpdateGroupNotice::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupNotice.notice)
}
inline void UpdateGroupNotice::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateGroupNotice.notice)
}
inline void UpdateGroupNotice::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateGroupNotice.notice)
}
inline ::std::string* UpdateGroupNotice::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateGroupNotice.notice)
  return notice_;
}
inline ::std::string* UpdateGroupNotice::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupNotice::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateGroupNotice.notice)
}

// -------------------------------------------------------------------

// GetGroupInfoRequest

// required uint64 user_id = 1;
inline bool GetGroupInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupInfoRequest.user_id)
  return user_id_;
}
inline void GetGroupInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupInfoRequest.user_id)
}

// required uint64 group_id = 2;
inline bool GetGroupInfoRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupInfoRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupInfoRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupInfoRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupInfoRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupInfoRequest.group_id)
  return group_id_;
}
inline void GetGroupInfoRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupInfoRequest.group_id)
}

// -------------------------------------------------------------------

// GetGroupInfoResponse

// required uint64 user_id = 1;
inline bool GetGroupInfoResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupInfoResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupInfoResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupInfoResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupInfoResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupInfoResponse.user_id)
  return user_id_;
}
inline void GetGroupInfoResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupInfoResponse.user_id)
}

// required uint64 group_id = 2;
inline bool GetGroupInfoResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupInfoResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupInfoResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupInfoResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupInfoResponse::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupInfoResponse.group_id)
  return group_id_;
}
inline void GetGroupInfoResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupInfoResponse.group_id)
}

// optional string group_name = 3;
inline bool GetGroupInfoResponse::has_group_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetGroupInfoResponse::set_has_group_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetGroupInfoResponse::clear_has_group_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetGroupInfoResponse::clear_group_name() {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_->clear();
  }
  clear_has_group_name();
}
inline const ::std::string& GetGroupInfoResponse::group_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupInfoResponse.group_name)
  return *group_name_;
}
inline void GetGroupInfoResponse::set_group_name(const ::std::string& value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupInfoResponse.group_name)
}
inline void GetGroupInfoResponse::set_group_name(const char* value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetGroupInfoResponse.group_name)
}
inline void GetGroupInfoResponse::set_group_name(const char* value, size_t size) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetGroupInfoResponse.group_name)
}
inline ::std::string* GetGroupInfoResponse::mutable_group_name() {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetGroupInfoResponse.group_name)
  return group_name_;
}
inline ::std::string* GetGroupInfoResponse::release_group_name() {
  clear_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_name_;
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupInfoResponse::set_allocated_group_name(::std::string* group_name) {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_name_;
  }
  if (group_name) {
    set_has_group_name();
    group_name_ = group_name;
  } else {
    clear_has_group_name();
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetGroupInfoResponse.group_name)
}

// optional string remark = 4;
inline bool GetGroupInfoResponse::has_remark() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetGroupInfoResponse::set_has_remark() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetGroupInfoResponse::clear_has_remark() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetGroupInfoResponse::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& GetGroupInfoResponse::remark() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupInfoResponse.remark)
  return *remark_;
}
inline void GetGroupInfoResponse::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupInfoResponse.remark)
}
inline void GetGroupInfoResponse::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetGroupInfoResponse.remark)
}
inline void GetGroupInfoResponse::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetGroupInfoResponse.remark)
}
inline ::std::string* GetGroupInfoResponse::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetGroupInfoResponse.remark)
  return remark_;
}
inline ::std::string* GetGroupInfoResponse::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupInfoResponse::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetGroupInfoResponse.remark)
}

// optional uint32 type = 5;
inline bool GetGroupInfoResponse::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetGroupInfoResponse::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetGroupInfoResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetGroupInfoResponse::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GetGroupInfoResponse::type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupInfoResponse.type)
  return type_;
}
inline void GetGroupInfoResponse::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupInfoResponse.type)
}

// optional string group_intro = 6;
inline bool GetGroupInfoResponse::has_group_intro() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetGroupInfoResponse::set_has_group_intro() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetGroupInfoResponse::clear_has_group_intro() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetGroupInfoResponse::clear_group_intro() {
  if (group_intro_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_->clear();
  }
  clear_has_group_intro();
}
inline const ::std::string& GetGroupInfoResponse::group_intro() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupInfoResponse.group_intro)
  return *group_intro_;
}
inline void GetGroupInfoResponse::set_group_intro(const ::std::string& value) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupInfoResponse.group_intro)
}
inline void GetGroupInfoResponse::set_group_intro(const char* value) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetGroupInfoResponse.group_intro)
}
inline void GetGroupInfoResponse::set_group_intro(const char* value, size_t size) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetGroupInfoResponse.group_intro)
}
inline ::std::string* GetGroupInfoResponse::mutable_group_intro() {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetGroupInfoResponse.group_intro)
  return group_intro_;
}
inline ::std::string* GetGroupInfoResponse::release_group_intro() {
  clear_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_intro_;
    group_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupInfoResponse::set_allocated_group_intro(::std::string* group_intro) {
  if (group_intro_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_intro_;
  }
  if (group_intro) {
    set_has_group_intro();
    group_intro_ = group_intro;
  } else {
    clear_has_group_intro();
    group_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetGroupInfoResponse.group_intro)
}

// optional string group_notice = 7;
inline bool GetGroupInfoResponse::has_group_notice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetGroupInfoResponse::set_has_group_notice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetGroupInfoResponse::clear_has_group_notice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetGroupInfoResponse::clear_group_notice() {
  if (group_notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_->clear();
  }
  clear_has_group_notice();
}
inline const ::std::string& GetGroupInfoResponse::group_notice() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupInfoResponse.group_notice)
  return *group_notice_;
}
inline void GetGroupInfoResponse::set_group_notice(const ::std::string& value) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupInfoResponse.group_notice)
}
inline void GetGroupInfoResponse::set_group_notice(const char* value) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetGroupInfoResponse.group_notice)
}
inline void GetGroupInfoResponse::set_group_notice(const char* value, size_t size) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetGroupInfoResponse.group_notice)
}
inline ::std::string* GetGroupInfoResponse::mutable_group_notice() {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetGroupInfoResponse.group_notice)
  return group_notice_;
}
inline ::std::string* GetGroupInfoResponse::release_group_notice() {
  clear_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_notice_;
    group_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupInfoResponse::set_allocated_group_notice(::std::string* group_notice) {
  if (group_notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_notice_;
  }
  if (group_notice) {
    set_has_group_notice();
    group_notice_ = group_notice;
  } else {
    clear_has_group_notice();
    group_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetGroupInfoResponse.group_notice)
}

// optional string avatar = 8;
inline bool GetGroupInfoResponse::has_avatar() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetGroupInfoResponse::set_has_avatar() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetGroupInfoResponse::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetGroupInfoResponse::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& GetGroupInfoResponse::avatar() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupInfoResponse.avatar)
  return *avatar_;
}
inline void GetGroupInfoResponse::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupInfoResponse.avatar)
}
inline void GetGroupInfoResponse::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetGroupInfoResponse.avatar)
}
inline void GetGroupInfoResponse::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetGroupInfoResponse.avatar)
}
inline ::std::string* GetGroupInfoResponse::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetGroupInfoResponse.avatar)
  return avatar_;
}
inline ::std::string* GetGroupInfoResponse::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupInfoResponse::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetGroupInfoResponse.avatar)
}

// optional uint32 sub_type = 9;
inline bool GetGroupInfoResponse::has_sub_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetGroupInfoResponse::set_has_sub_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetGroupInfoResponse::clear_has_sub_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetGroupInfoResponse::clear_sub_type() {
  sub_type_ = 0u;
  clear_has_sub_type();
}
inline ::google::protobuf::uint32 GetGroupInfoResponse::sub_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupInfoResponse.sub_type)
  return sub_type_;
}
inline void GetGroupInfoResponse::set_sub_type(::google::protobuf::uint32 value) {
  set_has_sub_type();
  sub_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupInfoResponse.sub_type)
}

// optional uint64 group_number = 10;
inline bool GetGroupInfoResponse::has_group_number() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GetGroupInfoResponse::set_has_group_number() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GetGroupInfoResponse::clear_has_group_number() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GetGroupInfoResponse::clear_group_number() {
  group_number_ = GOOGLE_ULONGLONG(0);
  clear_has_group_number();
}
inline ::google::protobuf::uint64 GetGroupInfoResponse::group_number() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupInfoResponse.group_number)
  return group_number_;
}
inline void GetGroupInfoResponse::set_group_number(::google::protobuf::uint64 value) {
  set_has_group_number();
  group_number_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupInfoResponse.group_number)
}

// optional uint32 avatar_id = 11;
inline bool GetGroupInfoResponse::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GetGroupInfoResponse::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GetGroupInfoResponse::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GetGroupInfoResponse::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 GetGroupInfoResponse::avatar_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupInfoResponse.avatar_id)
  return avatar_id_;
}
inline void GetGroupInfoResponse::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupInfoResponse.avatar_id)
}

// optional uint64 owner_id = 12;
inline bool GetGroupInfoResponse::has_owner_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GetGroupInfoResponse::set_has_owner_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GetGroupInfoResponse::clear_has_owner_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GetGroupInfoResponse::clear_owner_id() {
  owner_id_ = GOOGLE_ULONGLONG(0);
  clear_has_owner_id();
}
inline ::google::protobuf::uint64 GetGroupInfoResponse::owner_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupInfoResponse.owner_id)
  return owner_id_;
}
inline void GetGroupInfoResponse::set_owner_id(::google::protobuf::uint64 value) {
  set_has_owner_id();
  owner_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupInfoResponse.owner_id)
}

// -------------------------------------------------------------------

// UpdateGroupNoticeNotify

// required uint64 user_id = 1;
inline bool UpdateGroupNoticeNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGroupNoticeNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGroupNoticeNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGroupNoticeNotify::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateGroupNoticeNotify::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupNoticeNotify.user_id)
  return user_id_;
}
inline void UpdateGroupNoticeNotify::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupNoticeNotify.user_id)
}

// required uint64 group_id = 2;
inline bool UpdateGroupNoticeNotify::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateGroupNoticeNotify::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateGroupNoticeNotify::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateGroupNoticeNotify::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 UpdateGroupNoticeNotify::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupNoticeNotify.group_id)
  return group_id_;
}
inline void UpdateGroupNoticeNotify::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupNoticeNotify.group_id)
}

// optional string notice = 3;
inline bool UpdateGroupNoticeNotify::has_notice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateGroupNoticeNotify::set_has_notice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateGroupNoticeNotify::clear_has_notice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateGroupNoticeNotify::clear_notice() {
  if (notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& UpdateGroupNoticeNotify::notice() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupNoticeNotify.notice)
  return *notice_;
}
inline void UpdateGroupNoticeNotify::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupNoticeNotify.notice)
}
inline void UpdateGroupNoticeNotify::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateGroupNoticeNotify.notice)
}
inline void UpdateGroupNoticeNotify::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateGroupNoticeNotify.notice)
}
inline ::std::string* UpdateGroupNoticeNotify::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateGroupNoticeNotify.notice)
  return notice_;
}
inline ::std::string* UpdateGroupNoticeNotify::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupNoticeNotify::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateGroupNoticeNotify.notice)
}

// -------------------------------------------------------------------

// UpdateUserInfoRequest

// required uint64 user_id = 1;
inline bool UpdateUserInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateUserInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateUserInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateUserInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateUserInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserInfoRequest.user_id)
  return user_id_;
}
inline void UpdateUserInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserInfoRequest.user_id)
}

// optional string nick_name = 2;
inline bool UpdateUserInfoRequest::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateUserInfoRequest::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateUserInfoRequest::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateUserInfoRequest::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& UpdateUserInfoRequest::nick_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserInfoRequest.nick_name)
  return *nick_name_;
}
inline void UpdateUserInfoRequest::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserInfoRequest.nick_name)
}
inline void UpdateUserInfoRequest::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateUserInfoRequest.nick_name)
}
inline void UpdateUserInfoRequest::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateUserInfoRequest.nick_name)
}
inline ::std::string* UpdateUserInfoRequest::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateUserInfoRequest.nick_name)
  return nick_name_;
}
inline ::std::string* UpdateUserInfoRequest::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateUserInfoRequest.nick_name)
}

// optional uint32 sex = 3;
inline bool UpdateUserInfoRequest::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateUserInfoRequest::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateUserInfoRequest::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateUserInfoRequest::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 UpdateUserInfoRequest::sex() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserInfoRequest.sex)
  return sex_;
}
inline void UpdateUserInfoRequest::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserInfoRequest.sex)
}

// optional string mobile = 4;
inline bool UpdateUserInfoRequest::has_mobile() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateUserInfoRequest::set_has_mobile() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateUserInfoRequest::clear_has_mobile() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateUserInfoRequest::clear_mobile() {
  if (mobile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_->clear();
  }
  clear_has_mobile();
}
inline const ::std::string& UpdateUserInfoRequest::mobile() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserInfoRequest.mobile)
  return *mobile_;
}
inline void UpdateUserInfoRequest::set_mobile(const ::std::string& value) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserInfoRequest.mobile)
}
inline void UpdateUserInfoRequest::set_mobile(const char* value) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateUserInfoRequest.mobile)
}
inline void UpdateUserInfoRequest::set_mobile(const char* value, size_t size) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateUserInfoRequest.mobile)
}
inline ::std::string* UpdateUserInfoRequest::mutable_mobile() {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateUserInfoRequest.mobile)
  return mobile_;
}
inline ::std::string* UpdateUserInfoRequest::release_mobile() {
  clear_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mobile_;
    mobile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_mobile(::std::string* mobile) {
  if (mobile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mobile_;
  }
  if (mobile) {
    set_has_mobile();
    mobile_ = mobile;
  } else {
    clear_has_mobile();
    mobile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateUserInfoRequest.mobile)
}

// optional string birthday = 5;
inline bool UpdateUserInfoRequest::has_birthday() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateUserInfoRequest::set_has_birthday() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateUserInfoRequest::clear_has_birthday() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateUserInfoRequest::clear_birthday() {
  if (birthday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_->clear();
  }
  clear_has_birthday();
}
inline const ::std::string& UpdateUserInfoRequest::birthday() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserInfoRequest.birthday)
  return *birthday_;
}
inline void UpdateUserInfoRequest::set_birthday(const ::std::string& value) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserInfoRequest.birthday)
}
inline void UpdateUserInfoRequest::set_birthday(const char* value) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateUserInfoRequest.birthday)
}
inline void UpdateUserInfoRequest::set_birthday(const char* value, size_t size) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateUserInfoRequest.birthday)
}
inline ::std::string* UpdateUserInfoRequest::mutable_birthday() {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateUserInfoRequest.birthday)
  return birthday_;
}
inline ::std::string* UpdateUserInfoRequest::release_birthday() {
  clear_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = birthday_;
    birthday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_birthday(::std::string* birthday) {
  if (birthday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete birthday_;
  }
  if (birthday) {
    set_has_birthday();
    birthday_ = birthday;
  } else {
    clear_has_birthday();
    birthday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateUserInfoRequest.birthday)
}

// optional string email = 6;
inline bool UpdateUserInfoRequest::has_email() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateUserInfoRequest::set_has_email() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateUserInfoRequest::clear_has_email() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateUserInfoRequest::clear_email() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& UpdateUserInfoRequest::email() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserInfoRequest.email)
  return *email_;
}
inline void UpdateUserInfoRequest::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserInfoRequest.email)
}
inline void UpdateUserInfoRequest::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateUserInfoRequest.email)
}
inline void UpdateUserInfoRequest::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateUserInfoRequest.email)
}
inline ::std::string* UpdateUserInfoRequest::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateUserInfoRequest.email)
  return email_;
}
inline ::std::string* UpdateUserInfoRequest::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateUserInfoRequest.email)
}

// optional uint32 age = 7;
inline bool UpdateUserInfoRequest::has_age() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UpdateUserInfoRequest::set_has_age() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UpdateUserInfoRequest::clear_has_age() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UpdateUserInfoRequest::clear_age() {
  age_ = 0u;
  clear_has_age();
}
inline ::google::protobuf::uint32 UpdateUserInfoRequest::age() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserInfoRequest.age)
  return age_;
}
inline void UpdateUserInfoRequest::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserInfoRequest.age)
}

// optional uint32 constellation = 8;
inline bool UpdateUserInfoRequest::has_constellation() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UpdateUserInfoRequest::set_has_constellation() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UpdateUserInfoRequest::clear_has_constellation() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UpdateUserInfoRequest::clear_constellation() {
  constellation_ = 0u;
  clear_has_constellation();
}
inline ::google::protobuf::uint32 UpdateUserInfoRequest::constellation() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserInfoRequest.constellation)
  return constellation_;
}
inline void UpdateUserInfoRequest::set_constellation(::google::protobuf::uint32 value) {
  set_has_constellation();
  constellation_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserInfoRequest.constellation)
}

// optional string sign = 9;
inline bool UpdateUserInfoRequest::has_sign() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UpdateUserInfoRequest::set_has_sign() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UpdateUserInfoRequest::clear_has_sign() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UpdateUserInfoRequest::clear_sign() {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_->clear();
  }
  clear_has_sign();
}
inline const ::std::string& UpdateUserInfoRequest::sign() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserInfoRequest.sign)
  return *sign_;
}
inline void UpdateUserInfoRequest::set_sign(const ::std::string& value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserInfoRequest.sign)
}
inline void UpdateUserInfoRequest::set_sign(const char* value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateUserInfoRequest.sign)
}
inline void UpdateUserInfoRequest::set_sign(const char* value, size_t size) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateUserInfoRequest.sign)
}
inline ::std::string* UpdateUserInfoRequest::mutable_sign() {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateUserInfoRequest.sign)
  return sign_;
}
inline ::std::string* UpdateUserInfoRequest::release_sign() {
  clear_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sign_;
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_sign(::std::string* sign) {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sign_;
  }
  if (sign) {
    set_has_sign();
    sign_ = sign;
  } else {
    clear_has_sign();
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateUserInfoRequest.sign)
}

// optional string like = 10;
inline bool UpdateUserInfoRequest::has_like() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UpdateUserInfoRequest::set_has_like() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UpdateUserInfoRequest::clear_has_like() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UpdateUserInfoRequest::clear_like() {
  if (like_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_->clear();
  }
  clear_has_like();
}
inline const ::std::string& UpdateUserInfoRequest::like() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserInfoRequest.like)
  return *like_;
}
inline void UpdateUserInfoRequest::set_like(const ::std::string& value) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserInfoRequest.like)
}
inline void UpdateUserInfoRequest::set_like(const char* value) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateUserInfoRequest.like)
}
inline void UpdateUserInfoRequest::set_like(const char* value, size_t size) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateUserInfoRequest.like)
}
inline ::std::string* UpdateUserInfoRequest::mutable_like() {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateUserInfoRequest.like)
  return like_;
}
inline ::std::string* UpdateUserInfoRequest::release_like() {
  clear_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = like_;
    like_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_like(::std::string* like) {
  if (like_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete like_;
  }
  if (like) {
    set_has_like();
    like_ = like;
  } else {
    clear_has_like();
    like_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateUserInfoRequest.like)
}

// optional string city = 11;
inline bool UpdateUserInfoRequest::has_city() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UpdateUserInfoRequest::set_has_city() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UpdateUserInfoRequest::clear_has_city() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UpdateUserInfoRequest::clear_city() {
  if (city_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_->clear();
  }
  clear_has_city();
}
inline const ::std::string& UpdateUserInfoRequest::city() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserInfoRequest.city)
  return *city_;
}
inline void UpdateUserInfoRequest::set_city(const ::std::string& value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserInfoRequest.city)
}
inline void UpdateUserInfoRequest::set_city(const char* value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateUserInfoRequest.city)
}
inline void UpdateUserInfoRequest::set_city(const char* value, size_t size) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateUserInfoRequest.city)
}
inline ::std::string* UpdateUserInfoRequest::mutable_city() {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateUserInfoRequest.city)
  return city_;
}
inline ::std::string* UpdateUserInfoRequest::release_city() {
  clear_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = city_;
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_city(::std::string* city) {
  if (city_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete city_;
  }
  if (city) {
    set_has_city();
    city_ = city;
  } else {
    clear_has_city();
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateUserInfoRequest.city)
}

// optional string personal_desc = 12;
inline bool UpdateUserInfoRequest::has_personal_desc() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UpdateUserInfoRequest::set_has_personal_desc() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UpdateUserInfoRequest::clear_has_personal_desc() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UpdateUserInfoRequest::clear_personal_desc() {
  if (personal_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_->clear();
  }
  clear_has_personal_desc();
}
inline const ::std::string& UpdateUserInfoRequest::personal_desc() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserInfoRequest.personal_desc)
  return *personal_desc_;
}
inline void UpdateUserInfoRequest::set_personal_desc(const ::std::string& value) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserInfoRequest.personal_desc)
}
inline void UpdateUserInfoRequest::set_personal_desc(const char* value) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateUserInfoRequest.personal_desc)
}
inline void UpdateUserInfoRequest::set_personal_desc(const char* value, size_t size) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateUserInfoRequest.personal_desc)
}
inline ::std::string* UpdateUserInfoRequest::mutable_personal_desc() {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateUserInfoRequest.personal_desc)
  return personal_desc_;
}
inline ::std::string* UpdateUserInfoRequest::release_personal_desc() {
  clear_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = personal_desc_;
    personal_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_personal_desc(::std::string* personal_desc) {
  if (personal_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete personal_desc_;
  }
  if (personal_desc) {
    set_has_personal_desc();
    personal_desc_ = personal_desc;
  } else {
    clear_has_personal_desc();
    personal_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateUserInfoRequest.personal_desc)
}

// optional string real_name = 13;
inline bool UpdateUserInfoRequest::has_real_name() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void UpdateUserInfoRequest::set_has_real_name() {
  _has_bits_[0] |= 0x00001000u;
}
inline void UpdateUserInfoRequest::clear_has_real_name() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void UpdateUserInfoRequest::clear_real_name() {
  if (real_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_->clear();
  }
  clear_has_real_name();
}
inline const ::std::string& UpdateUserInfoRequest::real_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserInfoRequest.real_name)
  return *real_name_;
}
inline void UpdateUserInfoRequest::set_real_name(const ::std::string& value) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserInfoRequest.real_name)
}
inline void UpdateUserInfoRequest::set_real_name(const char* value) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateUserInfoRequest.real_name)
}
inline void UpdateUserInfoRequest::set_real_name(const char* value, size_t size) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateUserInfoRequest.real_name)
}
inline ::std::string* UpdateUserInfoRequest::mutable_real_name() {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateUserInfoRequest.real_name)
  return real_name_;
}
inline ::std::string* UpdateUserInfoRequest::release_real_name() {
  clear_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = real_name_;
    real_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_real_name(::std::string* real_name) {
  if (real_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete real_name_;
  }
  if (real_name) {
    set_has_real_name();
    real_name_ = real_name;
  } else {
    clear_has_real_name();
    real_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateUserInfoRequest.real_name)
}

// -------------------------------------------------------------------

// UpdateUserMoodRequest

// required uint64 user_id = 1;
inline bool UpdateUserMoodRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateUserMoodRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateUserMoodRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateUserMoodRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateUserMoodRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserMoodRequest.user_id)
  return user_id_;
}
inline void UpdateUserMoodRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserMoodRequest.user_id)
}

// optional string mood = 2;
inline bool UpdateUserMoodRequest::has_mood() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateUserMoodRequest::set_has_mood() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateUserMoodRequest::clear_has_mood() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateUserMoodRequest::clear_mood() {
  if (mood_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mood_->clear();
  }
  clear_has_mood();
}
inline const ::std::string& UpdateUserMoodRequest::mood() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserMoodRequest.mood)
  return *mood_;
}
inline void UpdateUserMoodRequest::set_mood(const ::std::string& value) {
  set_has_mood();
  if (mood_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mood_ = new ::std::string;
  }
  mood_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserMoodRequest.mood)
}
inline void UpdateUserMoodRequest::set_mood(const char* value) {
  set_has_mood();
  if (mood_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mood_ = new ::std::string;
  }
  mood_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateUserMoodRequest.mood)
}
inline void UpdateUserMoodRequest::set_mood(const char* value, size_t size) {
  set_has_mood();
  if (mood_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mood_ = new ::std::string;
  }
  mood_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateUserMoodRequest.mood)
}
inline ::std::string* UpdateUserMoodRequest::mutable_mood() {
  set_has_mood();
  if (mood_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mood_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateUserMoodRequest.mood)
  return mood_;
}
inline ::std::string* UpdateUserMoodRequest::release_mood() {
  clear_has_mood();
  if (mood_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mood_;
    mood_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserMoodRequest::set_allocated_mood(::std::string* mood) {
  if (mood_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mood_;
  }
  if (mood) {
    set_has_mood();
    mood_ = mood;
  } else {
    clear_has_mood();
    mood_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateUserMoodRequest.mood)
}

// -------------------------------------------------------------------

// UpdateUserNickNameRequest

// required uint64 user_id = 1;
inline bool UpdateUserNickNameRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateUserNickNameRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateUserNickNameRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateUserNickNameRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateUserNickNameRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserNickNameRequest.user_id)
  return user_id_;
}
inline void UpdateUserNickNameRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserNickNameRequest.user_id)
}

// optional string nick_name = 2;
inline bool UpdateUserNickNameRequest::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateUserNickNameRequest::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateUserNickNameRequest::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateUserNickNameRequest::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& UpdateUserNickNameRequest::nick_name() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateUserNickNameRequest.nick_name)
  return *nick_name_;
}
inline void UpdateUserNickNameRequest::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateUserNickNameRequest.nick_name)
}
inline void UpdateUserNickNameRequest::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateUserNickNameRequest.nick_name)
}
inline void UpdateUserNickNameRequest::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateUserNickNameRequest.nick_name)
}
inline ::std::string* UpdateUserNickNameRequest::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateUserNickNameRequest.nick_name)
  return nick_name_;
}
inline ::std::string* UpdateUserNickNameRequest::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserNickNameRequest::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateUserNickNameRequest.nick_name)
}

// -------------------------------------------------------------------

// UpdateAvatarRequest

// required uint64 user_id = 1;
inline bool UpdateAvatarRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateAvatarRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateAvatarRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateAvatarRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateAvatarRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateAvatarRequest.user_id)
  return user_id_;
}
inline void UpdateAvatarRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateAvatarRequest.user_id)
}

// optional uint32 avatar_id = 2;
inline bool UpdateAvatarRequest::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateAvatarRequest::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateAvatarRequest::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateAvatarRequest::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 UpdateAvatarRequest::avatar_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateAvatarRequest.avatar_id)
  return avatar_id_;
}
inline void UpdateAvatarRequest::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateAvatarRequest.avatar_id)
}

// optional string avatar = 3;
inline bool UpdateAvatarRequest::has_avatar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateAvatarRequest::set_has_avatar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateAvatarRequest::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateAvatarRequest::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& UpdateAvatarRequest::avatar() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateAvatarRequest.avatar)
  return *avatar_;
}
inline void UpdateAvatarRequest::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateAvatarRequest.avatar)
}
inline void UpdateAvatarRequest::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateAvatarRequest.avatar)
}
inline void UpdateAvatarRequest::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateAvatarRequest.avatar)
}
inline ::std::string* UpdateAvatarRequest::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateAvatarRequest.avatar)
  return avatar_;
}
inline ::std::string* UpdateAvatarRequest::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateAvatarRequest::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateAvatarRequest.avatar)
}

// -------------------------------------------------------------------

// KickUserOffline

// required .TerminalProtocol.Result result = 1;
inline bool KickUserOffline::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickUserOffline::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickUserOffline::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickUserOffline::clear_result() {
  if (result_ != NULL) result_->::TerminalProtocol::Result::Clear();
  clear_has_result();
}
inline const ::TerminalProtocol::Result& KickUserOffline::result() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.KickUserOffline.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::TerminalProtocol::Result* KickUserOffline::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::TerminalProtocol::Result;
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.KickUserOffline.result)
  return result_;
}
inline ::TerminalProtocol::Result* KickUserOffline::release_result() {
  clear_has_result();
  ::TerminalProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void KickUserOffline::set_allocated_result(::TerminalProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.KickUserOffline.result)
}

// optional string ip = 2;
inline bool KickUserOffline::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KickUserOffline::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KickUserOffline::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KickUserOffline::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& KickUserOffline::ip() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.KickUserOffline.ip)
  return *ip_;
}
inline void KickUserOffline::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.KickUserOffline.ip)
}
inline void KickUserOffline::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.KickUserOffline.ip)
}
inline void KickUserOffline::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.KickUserOffline.ip)
}
inline ::std::string* KickUserOffline::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.KickUserOffline.ip)
  return ip_;
}
inline ::std::string* KickUserOffline::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void KickUserOffline::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.KickUserOffline.ip)
}

// optional uint32 port = 3;
inline bool KickUserOffline::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KickUserOffline::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KickUserOffline::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KickUserOffline::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 KickUserOffline::port() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.KickUserOffline.port)
  return port_;
}
inline void KickUserOffline::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.KickUserOffline.port)
}

// -------------------------------------------------------------------

// GetUserOnlineStateRequest

// repeated uint64 user_id = 1;
inline int GetUserOnlineStateRequest::user_id_size() const {
  return user_id_.size();
}
inline void GetUserOnlineStateRequest::clear_user_id() {
  user_id_.Clear();
}
inline ::google::protobuf::uint64 GetUserOnlineStateRequest::user_id(int index) const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserOnlineStateRequest.user_id)
  return user_id_.Get(index);
}
inline void GetUserOnlineStateRequest::set_user_id(int index, ::google::protobuf::uint64 value) {
  user_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetUserOnlineStateRequest.user_id)
}
inline void GetUserOnlineStateRequest::add_user_id(::google::protobuf::uint64 value) {
  user_id_.Add(value);
  // @@protoc_insertion_point(field_add:TerminalProtocol.GetUserOnlineStateRequest.user_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetUserOnlineStateRequest::user_id() const {
  // @@protoc_insertion_point(field_list:TerminalProtocol.GetUserOnlineStateRequest.user_id)
  return user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetUserOnlineStateRequest::mutable_user_id() {
  // @@protoc_insertion_point(field_mutable_list:TerminalProtocol.GetUserOnlineStateRequest.user_id)
  return &user_id_;
}

// -------------------------------------------------------------------

// UserOnlineStateInfo

// required uint64 user_id = 1;
inline bool UserOnlineStateInfo::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserOnlineStateInfo::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserOnlineStateInfo::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserOnlineStateInfo::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UserOnlineStateInfo::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UserOnlineStateInfo.user_id)
  return user_id_;
}
inline void UserOnlineStateInfo::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UserOnlineStateInfo.user_id)
}

// optional uint32 online_state = 2;
inline bool UserOnlineStateInfo::has_online_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserOnlineStateInfo::set_has_online_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserOnlineStateInfo::clear_has_online_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserOnlineStateInfo::clear_online_state() {
  online_state_ = 0u;
  clear_has_online_state();
}
inline ::google::protobuf::uint32 UserOnlineStateInfo::online_state() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UserOnlineStateInfo.online_state)
  return online_state_;
}
inline void UserOnlineStateInfo::set_online_state(::google::protobuf::uint32 value) {
  set_has_online_state();
  online_state_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UserOnlineStateInfo.online_state)
}

// optional string mts_ip = 3;
inline bool UserOnlineStateInfo::has_mts_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserOnlineStateInfo::set_has_mts_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserOnlineStateInfo::clear_has_mts_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserOnlineStateInfo::clear_mts_ip() {
  if (mts_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_->clear();
  }
  clear_has_mts_ip();
}
inline const ::std::string& UserOnlineStateInfo::mts_ip() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UserOnlineStateInfo.mts_ip)
  return *mts_ip_;
}
inline void UserOnlineStateInfo::set_mts_ip(const ::std::string& value) {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  mts_ip_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UserOnlineStateInfo.mts_ip)
}
inline void UserOnlineStateInfo::set_mts_ip(const char* value) {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  mts_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UserOnlineStateInfo.mts_ip)
}
inline void UserOnlineStateInfo::set_mts_ip(const char* value, size_t size) {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  mts_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UserOnlineStateInfo.mts_ip)
}
inline ::std::string* UserOnlineStateInfo::mutable_mts_ip() {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UserOnlineStateInfo.mts_ip)
  return mts_ip_;
}
inline ::std::string* UserOnlineStateInfo::release_mts_ip() {
  clear_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mts_ip_;
    mts_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserOnlineStateInfo::set_allocated_mts_ip(::std::string* mts_ip) {
  if (mts_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mts_ip_;
  }
  if (mts_ip) {
    set_has_mts_ip();
    mts_ip_ = mts_ip;
  } else {
    clear_has_mts_ip();
    mts_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UserOnlineStateInfo.mts_ip)
}

// optional uint32 mts_port = 4;
inline bool UserOnlineStateInfo::has_mts_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserOnlineStateInfo::set_has_mts_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserOnlineStateInfo::clear_has_mts_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserOnlineStateInfo::clear_mts_port() {
  mts_port_ = 0u;
  clear_has_mts_port();
}
inline ::google::protobuf::uint32 UserOnlineStateInfo::mts_port() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UserOnlineStateInfo.mts_port)
  return mts_port_;
}
inline void UserOnlineStateInfo::set_mts_port(::google::protobuf::uint32 value) {
  set_has_mts_port();
  mts_port_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UserOnlineStateInfo.mts_port)
}

// optional bool has_camera = 6;
inline bool UserOnlineStateInfo::has_has_camera() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserOnlineStateInfo::set_has_has_camera() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserOnlineStateInfo::clear_has_has_camera() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserOnlineStateInfo::clear_has_camera() {
  has_camera_ = false;
  clear_has_has_camera();
}
inline bool UserOnlineStateInfo::has_camera() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UserOnlineStateInfo.has_camera)
  return has_camera_;
}
inline void UserOnlineStateInfo::set_has_camera(bool value) {
  set_has_has_camera();
  has_camera_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UserOnlineStateInfo.has_camera)
}

// optional uint32 terminal_type = 7;
inline bool UserOnlineStateInfo::has_terminal_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserOnlineStateInfo::set_has_terminal_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserOnlineStateInfo::clear_has_terminal_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserOnlineStateInfo::clear_terminal_type() {
  terminal_type_ = 0u;
  clear_has_terminal_type();
}
inline ::google::protobuf::uint32 UserOnlineStateInfo::terminal_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UserOnlineStateInfo.terminal_type)
  return terminal_type_;
}
inline void UserOnlineStateInfo::set_terminal_type(::google::protobuf::uint32 value) {
  set_has_terminal_type();
  terminal_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UserOnlineStateInfo.terminal_type)
}

// -------------------------------------------------------------------

// GetUserOnlineStateResponse

// repeated .TerminalProtocol.UserOnlineStateInfo user_info = 1;
inline int GetUserOnlineStateResponse::user_info_size() const {
  return user_info_.size();
}
inline void GetUserOnlineStateResponse::clear_user_info() {
  user_info_.Clear();
}
inline const ::TerminalProtocol::UserOnlineStateInfo& GetUserOnlineStateResponse::user_info(int index) const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetUserOnlineStateResponse.user_info)
  return user_info_.Get(index);
}
inline ::TerminalProtocol::UserOnlineStateInfo* GetUserOnlineStateResponse::mutable_user_info(int index) {
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetUserOnlineStateResponse.user_info)
  return user_info_.Mutable(index);
}
inline ::TerminalProtocol::UserOnlineStateInfo* GetUserOnlineStateResponse::add_user_info() {
  // @@protoc_insertion_point(field_add:TerminalProtocol.GetUserOnlineStateResponse.user_info)
  return user_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::UserOnlineStateInfo >&
GetUserOnlineStateResponse::user_info() const {
  // @@protoc_insertion_point(field_list:TerminalProtocol.GetUserOnlineStateResponse.user_info)
  return user_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::TerminalProtocol::UserOnlineStateInfo >*
GetUserOnlineStateResponse::mutable_user_info() {
  // @@protoc_insertion_point(field_mutable_list:TerminalProtocol.GetUserOnlineStateResponse.user_info)
  return &user_info_;
}

// -------------------------------------------------------------------

// GetGroupUserCardRequest

// required uint64 user_id = 1;
inline bool GetGroupUserCardRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupUserCardRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupUserCardRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupUserCardRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupUserCardRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserCardRequest.user_id)
  return user_id_;
}
inline void GetGroupUserCardRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupUserCardRequest.user_id)
}

// required uint64 group_id = 3;
inline bool GetGroupUserCardRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupUserCardRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupUserCardRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupUserCardRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupUserCardRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserCardRequest.group_id)
  return group_id_;
}
inline void GetGroupUserCardRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupUserCardRequest.group_id)
}

// -------------------------------------------------------------------

// GetGroupUserCardResponse

// required uint64 user_id = 1;
inline bool GetGroupUserCardResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupUserCardResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupUserCardResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupUserCardResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupUserCardResponse::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserCardResponse.user_id)
  return user_id_;
}
inline void GetGroupUserCardResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupUserCardResponse.user_id)
}

// required uint64 group_id = 2;
inline bool GetGroupUserCardResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupUserCardResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupUserCardResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupUserCardResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupUserCardResponse::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserCardResponse.group_id)
  return group_id_;
}
inline void GetGroupUserCardResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupUserCardResponse.group_id)
}

// optional string nickname = 3;
inline bool GetGroupUserCardResponse::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetGroupUserCardResponse::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetGroupUserCardResponse::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetGroupUserCardResponse::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& GetGroupUserCardResponse::nickname() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserCardResponse.nickname)
  return *nickname_;
}
inline void GetGroupUserCardResponse::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupUserCardResponse.nickname)
}
inline void GetGroupUserCardResponse::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetGroupUserCardResponse.nickname)
}
inline void GetGroupUserCardResponse::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetGroupUserCardResponse.nickname)
}
inline ::std::string* GetGroupUserCardResponse::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetGroupUserCardResponse.nickname)
  return nickname_;
}
inline ::std::string* GetGroupUserCardResponse::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupUserCardResponse::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetGroupUserCardResponse.nickname)
}

// optional string tel = 4;
inline bool GetGroupUserCardResponse::has_tel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetGroupUserCardResponse::set_has_tel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetGroupUserCardResponse::clear_has_tel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetGroupUserCardResponse::clear_tel() {
  if (tel_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_->clear();
  }
  clear_has_tel();
}
inline const ::std::string& GetGroupUserCardResponse::tel() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserCardResponse.tel)
  return *tel_;
}
inline void GetGroupUserCardResponse::set_tel(const ::std::string& value) {
  set_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_ = new ::std::string;
  }
  tel_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupUserCardResponse.tel)
}
inline void GetGroupUserCardResponse::set_tel(const char* value) {
  set_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_ = new ::std::string;
  }
  tel_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetGroupUserCardResponse.tel)
}
inline void GetGroupUserCardResponse::set_tel(const char* value, size_t size) {
  set_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_ = new ::std::string;
  }
  tel_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetGroupUserCardResponse.tel)
}
inline ::std::string* GetGroupUserCardResponse::mutable_tel() {
  set_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetGroupUserCardResponse.tel)
  return tel_;
}
inline ::std::string* GetGroupUserCardResponse::release_tel() {
  clear_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tel_;
    tel_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupUserCardResponse::set_allocated_tel(::std::string* tel) {
  if (tel_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tel_;
  }
  if (tel) {
    set_has_tel();
    tel_ = tel;
  } else {
    clear_has_tel();
    tel_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetGroupUserCardResponse.tel)
}

// optional string email = 5;
inline bool GetGroupUserCardResponse::has_email() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetGroupUserCardResponse::set_has_email() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetGroupUserCardResponse::clear_has_email() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetGroupUserCardResponse::clear_email() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& GetGroupUserCardResponse::email() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserCardResponse.email)
  return *email_;
}
inline void GetGroupUserCardResponse::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupUserCardResponse.email)
}
inline void GetGroupUserCardResponse::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetGroupUserCardResponse.email)
}
inline void GetGroupUserCardResponse::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetGroupUserCardResponse.email)
}
inline ::std::string* GetGroupUserCardResponse::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetGroupUserCardResponse.email)
  return email_;
}
inline ::std::string* GetGroupUserCardResponse::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupUserCardResponse::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetGroupUserCardResponse.email)
}

// optional string remark = 6;
inline bool GetGroupUserCardResponse::has_remark() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetGroupUserCardResponse::set_has_remark() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetGroupUserCardResponse::clear_has_remark() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetGroupUserCardResponse::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& GetGroupUserCardResponse::remark() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupUserCardResponse.remark)
  return *remark_;
}
inline void GetGroupUserCardResponse::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupUserCardResponse.remark)
}
inline void GetGroupUserCardResponse::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetGroupUserCardResponse.remark)
}
inline void GetGroupUserCardResponse::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetGroupUserCardResponse.remark)
}
inline ::std::string* GetGroupUserCardResponse::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetGroupUserCardResponse.remark)
  return remark_;
}
inline ::std::string* GetGroupUserCardResponse::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupUserCardResponse::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetGroupUserCardResponse.remark)
}

// -------------------------------------------------------------------

// UpdateGroupUserCardRequest

// required uint64 user_id = 1;
inline bool UpdateGroupUserCardRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGroupUserCardRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGroupUserCardRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGroupUserCardRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateGroupUserCardRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupUserCardRequest.user_id)
  return user_id_;
}
inline void UpdateGroupUserCardRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupUserCardRequest.user_id)
}

// required uint64 group_id = 2;
inline bool UpdateGroupUserCardRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateGroupUserCardRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateGroupUserCardRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateGroupUserCardRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 UpdateGroupUserCardRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupUserCardRequest.group_id)
  return group_id_;
}
inline void UpdateGroupUserCardRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupUserCardRequest.group_id)
}

// optional string nickname = 3;
inline bool UpdateGroupUserCardRequest::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateGroupUserCardRequest::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateGroupUserCardRequest::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateGroupUserCardRequest::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& UpdateGroupUserCardRequest::nickname() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupUserCardRequest.nickname)
  return *nickname_;
}
inline void UpdateGroupUserCardRequest::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupUserCardRequest.nickname)
}
inline void UpdateGroupUserCardRequest::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateGroupUserCardRequest.nickname)
}
inline void UpdateGroupUserCardRequest::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateGroupUserCardRequest.nickname)
}
inline ::std::string* UpdateGroupUserCardRequest::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateGroupUserCardRequest.nickname)
  return nickname_;
}
inline ::std::string* UpdateGroupUserCardRequest::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupUserCardRequest::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateGroupUserCardRequest.nickname)
}

// optional string tel = 4;
inline bool UpdateGroupUserCardRequest::has_tel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateGroupUserCardRequest::set_has_tel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateGroupUserCardRequest::clear_has_tel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateGroupUserCardRequest::clear_tel() {
  if (tel_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_->clear();
  }
  clear_has_tel();
}
inline const ::std::string& UpdateGroupUserCardRequest::tel() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupUserCardRequest.tel)
  return *tel_;
}
inline void UpdateGroupUserCardRequest::set_tel(const ::std::string& value) {
  set_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_ = new ::std::string;
  }
  tel_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupUserCardRequest.tel)
}
inline void UpdateGroupUserCardRequest::set_tel(const char* value) {
  set_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_ = new ::std::string;
  }
  tel_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateGroupUserCardRequest.tel)
}
inline void UpdateGroupUserCardRequest::set_tel(const char* value, size_t size) {
  set_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_ = new ::std::string;
  }
  tel_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateGroupUserCardRequest.tel)
}
inline ::std::string* UpdateGroupUserCardRequest::mutable_tel() {
  set_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateGroupUserCardRequest.tel)
  return tel_;
}
inline ::std::string* UpdateGroupUserCardRequest::release_tel() {
  clear_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tel_;
    tel_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupUserCardRequest::set_allocated_tel(::std::string* tel) {
  if (tel_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tel_;
  }
  if (tel) {
    set_has_tel();
    tel_ = tel;
  } else {
    clear_has_tel();
    tel_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateGroupUserCardRequest.tel)
}

// optional string email = 5;
inline bool UpdateGroupUserCardRequest::has_email() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateGroupUserCardRequest::set_has_email() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateGroupUserCardRequest::clear_has_email() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateGroupUserCardRequest::clear_email() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& UpdateGroupUserCardRequest::email() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupUserCardRequest.email)
  return *email_;
}
inline void UpdateGroupUserCardRequest::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupUserCardRequest.email)
}
inline void UpdateGroupUserCardRequest::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateGroupUserCardRequest.email)
}
inline void UpdateGroupUserCardRequest::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateGroupUserCardRequest.email)
}
inline ::std::string* UpdateGroupUserCardRequest::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateGroupUserCardRequest.email)
  return email_;
}
inline ::std::string* UpdateGroupUserCardRequest::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupUserCardRequest::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateGroupUserCardRequest.email)
}

// optional string remark = 6;
inline bool UpdateGroupUserCardRequest::has_remark() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateGroupUserCardRequest::set_has_remark() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateGroupUserCardRequest::clear_has_remark() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateGroupUserCardRequest::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& UpdateGroupUserCardRequest::remark() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupUserCardRequest.remark)
  return *remark_;
}
inline void UpdateGroupUserCardRequest::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupUserCardRequest.remark)
}
inline void UpdateGroupUserCardRequest::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.UpdateGroupUserCardRequest.remark)
}
inline void UpdateGroupUserCardRequest::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.UpdateGroupUserCardRequest.remark)
}
inline ::std::string* UpdateGroupUserCardRequest::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.UpdateGroupUserCardRequest.remark)
  return remark_;
}
inline ::std::string* UpdateGroupUserCardRequest::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupUserCardRequest::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.UpdateGroupUserCardRequest.remark)
}

// optional uint64 group_user_id = 7;
inline bool UpdateGroupUserCardRequest::has_group_user_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UpdateGroupUserCardRequest::set_has_group_user_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UpdateGroupUserCardRequest::clear_has_group_user_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UpdateGroupUserCardRequest::clear_group_user_id() {
  group_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_user_id();
}
inline ::google::protobuf::uint64 UpdateGroupUserCardRequest::group_user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.UpdateGroupUserCardRequest.group_user_id)
  return group_user_id_;
}
inline void UpdateGroupUserCardRequest::set_group_user_id(::google::protobuf::uint64 value) {
  set_has_group_user_id();
  group_user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.UpdateGroupUserCardRequest.group_user_id)
}

// -------------------------------------------------------------------

// SetGroupMsgModeRequest

// required uint64 user_id = 1;
inline bool SetGroupMsgModeRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGroupMsgModeRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGroupMsgModeRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGroupMsgModeRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 SetGroupMsgModeRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SetGroupMsgModeRequest.user_id)
  return user_id_;
}
inline void SetGroupMsgModeRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SetGroupMsgModeRequest.user_id)
}

// required uint64 group_id = 2;
inline bool SetGroupMsgModeRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetGroupMsgModeRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetGroupMsgModeRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetGroupMsgModeRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 SetGroupMsgModeRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SetGroupMsgModeRequest.group_id)
  return group_id_;
}
inline void SetGroupMsgModeRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SetGroupMsgModeRequest.group_id)
}

// required uint32 msg_mode = 3;
inline bool SetGroupMsgModeRequest::has_msg_mode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetGroupMsgModeRequest::set_has_msg_mode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetGroupMsgModeRequest::clear_has_msg_mode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetGroupMsgModeRequest::clear_msg_mode() {
  msg_mode_ = 0u;
  clear_has_msg_mode();
}
inline ::google::protobuf::uint32 SetGroupMsgModeRequest::msg_mode() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SetGroupMsgModeRequest.msg_mode)
  return msg_mode_;
}
inline void SetGroupMsgModeRequest::set_msg_mode(::google::protobuf::uint32 value) {
  set_has_msg_mode();
  msg_mode_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SetGroupMsgModeRequest.msg_mode)
}

// -------------------------------------------------------------------

// SetGroupTalkModeRequest

// required uint64 user_id = 1;
inline bool SetGroupTalkModeRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGroupTalkModeRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGroupTalkModeRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGroupTalkModeRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 SetGroupTalkModeRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SetGroupTalkModeRequest.user_id)
  return user_id_;
}
inline void SetGroupTalkModeRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SetGroupTalkModeRequest.user_id)
}

// required uint64 group_id = 2;
inline bool SetGroupTalkModeRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetGroupTalkModeRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetGroupTalkModeRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetGroupTalkModeRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 SetGroupTalkModeRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SetGroupTalkModeRequest.group_id)
  return group_id_;
}
inline void SetGroupTalkModeRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SetGroupTalkModeRequest.group_id)
}

// required uint32 talk_mode = 3;
inline bool SetGroupTalkModeRequest::has_talk_mode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetGroupTalkModeRequest::set_has_talk_mode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetGroupTalkModeRequest::clear_has_talk_mode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetGroupTalkModeRequest::clear_talk_mode() {
  talk_mode_ = 0u;
  clear_has_talk_mode();
}
inline ::google::protobuf::uint32 SetGroupTalkModeRequest::talk_mode() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.SetGroupTalkModeRequest.talk_mode)
  return talk_mode_;
}
inline void SetGroupTalkModeRequest::set_talk_mode(::google::protobuf::uint32 value) {
  set_has_talk_mode();
  talk_mode_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.SetGroupTalkModeRequest.talk_mode)
}

// -------------------------------------------------------------------

// GetFriendVerifyInfoRequest

// required uint64 user_id = 1;
inline bool GetFriendVerifyInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFriendVerifyInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFriendVerifyInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFriendVerifyInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetFriendVerifyInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetFriendVerifyInfoRequest.user_id)
  return user_id_;
}
inline void GetFriendVerifyInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetFriendVerifyInfoRequest.user_id)
}

// -------------------------------------------------------------------

// GetFriendVerifyInfoResponse

// optional uint32 verify_type = 1;
inline bool GetFriendVerifyInfoResponse::has_verify_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFriendVerifyInfoResponse::set_has_verify_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFriendVerifyInfoResponse::clear_has_verify_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFriendVerifyInfoResponse::clear_verify_type() {
  verify_type_ = 0u;
  clear_has_verify_type();
}
inline ::google::protobuf::uint32 GetFriendVerifyInfoResponse::verify_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetFriendVerifyInfoResponse.verify_type)
  return verify_type_;
}
inline void GetFriendVerifyInfoResponse::set_verify_type(::google::protobuf::uint32 value) {
  set_has_verify_type();
  verify_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetFriendVerifyInfoResponse.verify_type)
}

// optional uint32 question_type = 2;
inline bool GetFriendVerifyInfoResponse::has_question_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFriendVerifyInfoResponse::set_has_question_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFriendVerifyInfoResponse::clear_has_question_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFriendVerifyInfoResponse::clear_question_type() {
  question_type_ = 0u;
  clear_has_question_type();
}
inline ::google::protobuf::uint32 GetFriendVerifyInfoResponse::question_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetFriendVerifyInfoResponse.question_type)
  return question_type_;
}
inline void GetFriendVerifyInfoResponse::set_question_type(::google::protobuf::uint32 value) {
  set_has_question_type();
  question_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetFriendVerifyInfoResponse.question_type)
}

// optional string answer = 3;
inline bool GetFriendVerifyInfoResponse::has_answer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetFriendVerifyInfoResponse::set_has_answer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetFriendVerifyInfoResponse::clear_has_answer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetFriendVerifyInfoResponse::clear_answer() {
  if (answer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_->clear();
  }
  clear_has_answer();
}
inline const ::std::string& GetFriendVerifyInfoResponse::answer() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetFriendVerifyInfoResponse.answer)
  return *answer_;
}
inline void GetFriendVerifyInfoResponse::set_answer(const ::std::string& value) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetFriendVerifyInfoResponse.answer)
}
inline void GetFriendVerifyInfoResponse::set_answer(const char* value) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
  // @@protoc_insertion_point(field_set_char:TerminalProtocol.GetFriendVerifyInfoResponse.answer)
}
inline void GetFriendVerifyInfoResponse::set_answer(const char* value, size_t size) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TerminalProtocol.GetFriendVerifyInfoResponse.answer)
}
inline ::std::string* GetFriendVerifyInfoResponse::mutable_answer() {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetFriendVerifyInfoResponse.answer)
  return answer_;
}
inline ::std::string* GetFriendVerifyInfoResponse::release_answer() {
  clear_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = answer_;
    answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetFriendVerifyInfoResponse::set_allocated_answer(::std::string* answer) {
  if (answer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete answer_;
  }
  if (answer) {
    set_has_answer();
    answer_ = answer;
  } else {
    clear_has_answer();
    answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetFriendVerifyInfoResponse.answer)
}

// required .TerminalProtocol.Result result = 4;
inline bool GetFriendVerifyInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetFriendVerifyInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetFriendVerifyInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetFriendVerifyInfoResponse::clear_result() {
  if (result_ != NULL) result_->::TerminalProtocol::Result::Clear();
  clear_has_result();
}
inline const ::TerminalProtocol::Result& GetFriendVerifyInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetFriendVerifyInfoResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::TerminalProtocol::Result* GetFriendVerifyInfoResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::TerminalProtocol::Result;
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetFriendVerifyInfoResponse.result)
  return result_;
}
inline ::TerminalProtocol::Result* GetFriendVerifyInfoResponse::release_result() {
  clear_has_result();
  ::TerminalProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetFriendVerifyInfoResponse::set_allocated_result(::TerminalProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetFriendVerifyInfoResponse.result)
}

// -------------------------------------------------------------------

// GetGroupManagerListRequest

// required uint64 user_id = 1;
inline bool GetGroupManagerListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupManagerListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupManagerListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupManagerListRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupManagerListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupManagerListRequest.user_id)
  return user_id_;
}
inline void GetGroupManagerListRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupManagerListRequest.user_id)
}

// required uint64 group_id = 2;
inline bool GetGroupManagerListRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupManagerListRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupManagerListRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupManagerListRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupManagerListRequest::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupManagerListRequest.group_id)
  return group_id_;
}
inline void GetGroupManagerListRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupManagerListRequest.group_id)
}

// -------------------------------------------------------------------

// GetGroupManagerListResponse

// optional uint64 group_id = 1;
inline bool GetGroupManagerListResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupManagerListResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupManagerListResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupManagerListResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupManagerListResponse::group_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupManagerListResponse.group_id)
  return group_id_;
}
inline void GetGroupManagerListResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupManagerListResponse.group_id)
}

// optional uint32 sum_num = 2;
inline bool GetGroupManagerListResponse::has_sum_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupManagerListResponse::set_has_sum_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupManagerListResponse::clear_has_sum_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupManagerListResponse::clear_sum_num() {
  sum_num_ = 0u;
  clear_has_sum_num();
}
inline ::google::protobuf::uint32 GetGroupManagerListResponse::sum_num() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupManagerListResponse.sum_num)
  return sum_num_;
}
inline void GetGroupManagerListResponse::set_sum_num(::google::protobuf::uint32 value) {
  set_has_sum_num();
  sum_num_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupManagerListResponse.sum_num)
}

// repeated uint64 group_user_id = 3;
inline int GetGroupManagerListResponse::group_user_id_size() const {
  return group_user_id_.size();
}
inline void GetGroupManagerListResponse::clear_group_user_id() {
  group_user_id_.Clear();
}
inline ::google::protobuf::uint64 GetGroupManagerListResponse::group_user_id(int index) const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupManagerListResponse.group_user_id)
  return group_user_id_.Get(index);
}
inline void GetGroupManagerListResponse::set_group_user_id(int index, ::google::protobuf::uint64 value) {
  group_user_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:TerminalProtocol.GetGroupManagerListResponse.group_user_id)
}
inline void GetGroupManagerListResponse::add_group_user_id(::google::protobuf::uint64 value) {
  group_user_id_.Add(value);
  // @@protoc_insertion_point(field_add:TerminalProtocol.GetGroupManagerListResponse.group_user_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetGroupManagerListResponse::group_user_id() const {
  // @@protoc_insertion_point(field_list:TerminalProtocol.GetGroupManagerListResponse.group_user_id)
  return group_user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetGroupManagerListResponse::mutable_group_user_id() {
  // @@protoc_insertion_point(field_mutable_list:TerminalProtocol.GetGroupManagerListResponse.group_user_id)
  return &group_user_id_;
}

// required .TerminalProtocol.Result result = 4;
inline bool GetGroupManagerListResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetGroupManagerListResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetGroupManagerListResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetGroupManagerListResponse::clear_result() {
  if (result_ != NULL) result_->::TerminalProtocol::Result::Clear();
  clear_has_result();
}
inline const ::TerminalProtocol::Result& GetGroupManagerListResponse::result() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.GetGroupManagerListResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::TerminalProtocol::Result* GetGroupManagerListResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::TerminalProtocol::Result;
  // @@protoc_insertion_point(field_mutable:TerminalProtocol.GetGroupManagerListResponse.result)
  return result_;
}
inline ::TerminalProtocol::Result* GetGroupManagerListResponse::release_result() {
  clear_has_result();
  ::TerminalProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetGroupManagerListResponse::set_allocated_result(::TerminalProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:TerminalProtocol.GetGroupManagerListResponse.result)
}

// -------------------------------------------------------------------

// DeleteHistoryMessageRequest

// required uint64 user_id = 1;
inline bool DeleteHistoryMessageRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteHistoryMessageRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteHistoryMessageRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteHistoryMessageRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 DeleteHistoryMessageRequest::user_id() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.DeleteHistoryMessageRequest.user_id)
  return user_id_;
}
inline void DeleteHistoryMessageRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.DeleteHistoryMessageRequest.user_id)
}

// optional uint32 msg_type = 2;
inline bool DeleteHistoryMessageRequest::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteHistoryMessageRequest::set_has_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteHistoryMessageRequest::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteHistoryMessageRequest::clear_msg_type() {
  msg_type_ = 0u;
  clear_has_msg_type();
}
inline ::google::protobuf::uint32 DeleteHistoryMessageRequest::msg_type() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.DeleteHistoryMessageRequest.msg_type)
  return msg_type_;
}
inline void DeleteHistoryMessageRequest::set_msg_type(::google::protobuf::uint32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.DeleteHistoryMessageRequest.msg_type)
}

// optional uint32 last_time = 3;
inline bool DeleteHistoryMessageRequest::has_last_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeleteHistoryMessageRequest::set_has_last_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeleteHistoryMessageRequest::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeleteHistoryMessageRequest::clear_last_time() {
  last_time_ = 0u;
  clear_has_last_time();
}
inline ::google::protobuf::uint32 DeleteHistoryMessageRequest::last_time() const {
  // @@protoc_insertion_point(field_get:TerminalProtocol.DeleteHistoryMessageRequest.last_time)
  return last_time_;
}
inline void DeleteHistoryMessageRequest::set_last_time(::google::protobuf::uint32 value) {
  set_has_last_time();
  last_time_ = value;
  // @@protoc_insertion_point(field_set:TerminalProtocol.DeleteHistoryMessageRequest.last_time)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace TerminalProtocol

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_terminal_5fprotocol_2eproto__INCLUDED
