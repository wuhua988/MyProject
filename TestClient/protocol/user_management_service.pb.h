// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_management_service.proto

#ifndef PROTOBUF_user_5fmanagement_5fservice_2eproto__INCLUDED
#define PROTOBUF_user_5fmanagement_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace umsProtocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

class Result;
class AuthUserRequest;
class AuthUserResponse;
class QuitUserRequest;
class QuitUserResponse;
class GetFriendListRequest;
class GetFriendListResponse;
class GetUserInfoRequest;
class GetUserInfoResponse;
class GetFriendInfoRequest;
class GetFriendInfoResponse;
class GetGroupListRequest;
class GroupListItem;
class GetGroupListResponse;
class CreateGroupRequest;
class CreateGroupResponse;
class JoinGroupRequest;
class JoinGroupResponse;
class ExitGroupRequest;
class ExitGroupResponse;
class GetGroupUserListRequest;
class GetGroupUserListResponse;
class SearchGroupUserListRequest;
class GroupUserListItem;
class SearchGroupUserListResponse;
class AddFriendRequest;
class AddFriendResponse;
class GetFriendVerifyInfoRequest;
class GetFriendVerifyInfoResponse;
class DeleteFriendRequest;
class DeleteFriendResponse;
class UpdateFriendBranchRequest;
class UpdateFriendBranchResponse;
class AddBranchRequest;
class AddBranchResponse;
class DeleteBranchRequest;
class DeleteBranchResponse;
class UpdateBranchInfoRequest;
class UpdateBranchInfoResponse;
class KickoutGroupUserRequest;
class KickoutGroupUserResponse;
class SetGroupManagerRequest;
class SetGroupManagerResponse;
class UpdateFriendRemarkRequest;
class UpdateFriendRemarkResponse;
class GetBranchListRequest;
class UserIdRemarkItem;
class BranchListItem;
class GetBranchListResponse;
class SetFriendOptionRequest;
class SetFriendOptionResponse;
class DeleteGroupRequest;
class DeleteGroupResponse;
class UpdateGroupUserInfoRequest;
class UpdateGroupUserInfoResponse;
class UpdateGroupInfoRequest;
class UpdateGroupInfoResponse;
class UpdateGroupOptionRequest;
class UpdateGroupOptionResponse;
class UpdateGroupNoticeRequest;
class UpdateGroupNoticeResponse;
class GetGroupInfoRequest;
class GetGroupInfoResponse;
class UpdateUserInfoRequest;
class UpdateUserInfoResponse;
class UpdateUserMoodRequest;
class UpdateUserMoodResponse;
class UpdateUserNickNameRequest;
class UpdateUserNickNameResponse;
class UpdateAvatarRequest;
class UpdateAvatarResponse;
class GetGroupUserInfoRequest;
class GetGroupUserInfoResponse;
class GetFriendBaseInfoRequest;
class FriendListItem;
class GetFriendBaseInfoResponse;
class GetGroupOptionRequest;
class GetGroupOptionResponse;
class GetGroupUserCardRequest;
class GetGroupUserCardResponse;
class SetGroupMsgModeRequest;
class SetGroupMsgModeResponse;
class SetGroupTalkModeRequest;
class SetGroupTalkModeResponse;
class GetGroupManagerListRequest;
class GetGroupManagerListResponse;
class NotifyJoinGroupRequest;
class NotifyExitGroupRequest;
class NotifyKickoutGroupUserRequest;
class NotifySetGroupManagerRequest;
class NotifyDeleteGroupRequest;
class NotifyUpdateGroupRemarkRequest;
class NotifyUpdateGroupInfoRequest;
class NotifyUpdateGroupOptionRequest;
class NotifyUpdateGroupNoticeRequest;

// ===================================================================

class Result : public ::google::protobuf::Message {
 public:
  Result();
  virtual ~Result();

  Result(const Result& from);

  inline Result& operator=(const Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Result& default_instance();

  void Swap(Result* other);

  // implements Message ----------------------------------------------

  Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Result& from);
  void MergeFrom(const Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);

  // required string msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:umsProtocol.Result)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* msg_;
  ::google::protobuf::uint32 code_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static Result* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserRequest : public ::google::protobuf::Message {
 public:
  AuthUserRequest();
  virtual ~AuthUserRequest();

  AuthUserRequest(const AuthUserRequest& from);

  inline AuthUserRequest& operator=(const AuthUserRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserRequest& default_instance();

  void Swap(AuthUserRequest* other);

  // implements Message ----------------------------------------------

  AuthUserRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserRequest& from);
  void MergeFrom(const AuthUserRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string login_name = 1;
  inline bool has_login_name() const;
  inline void clear_login_name();
  static const int kLoginNameFieldNumber = 1;
  inline const ::std::string& login_name() const;
  inline void set_login_name(const ::std::string& value);
  inline void set_login_name(const char* value);
  inline void set_login_name(const char* value, size_t size);
  inline ::std::string* mutable_login_name();
  inline ::std::string* release_login_name();
  inline void set_allocated_login_name(::std::string* login_name);

  // optional string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // required uint32 terminal_type = 3;
  inline bool has_terminal_type() const;
  inline void clear_terminal_type();
  static const int kTerminalTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 terminal_type() const;
  inline void set_terminal_type(::google::protobuf::uint32 value);

  // optional string mac_addr = 4;
  inline bool has_mac_addr() const;
  inline void clear_mac_addr();
  static const int kMacAddrFieldNumber = 4;
  inline const ::std::string& mac_addr() const;
  inline void set_mac_addr(const ::std::string& value);
  inline void set_mac_addr(const char* value);
  inline void set_mac_addr(const char* value, size_t size);
  inline ::std::string* mutable_mac_addr();
  inline ::std::string* release_mac_addr();
  inline void set_allocated_mac_addr(::std::string* mac_addr);

  // optional uint32 login_type = 5;
  inline bool has_login_type() const;
  inline void clear_login_type();
  static const int kLoginTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 login_type() const;
  inline void set_login_type(::google::protobuf::uint32 value);

  // optional string user_ip = 6;
  inline bool has_user_ip() const;
  inline void clear_user_ip();
  static const int kUserIpFieldNumber = 6;
  inline const ::std::string& user_ip() const;
  inline void set_user_ip(const ::std::string& value);
  inline void set_user_ip(const char* value);
  inline void set_user_ip(const char* value, size_t size);
  inline ::std::string* mutable_user_ip();
  inline ::std::string* release_user_ip();
  inline void set_allocated_user_ip(::std::string* user_ip);

  // optional uint64 user_id = 7;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 7;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string token = 8;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 8;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:umsProtocol.AuthUserRequest)
 private:
  inline void set_has_login_name();
  inline void clear_has_login_name();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_terminal_type();
  inline void clear_has_terminal_type();
  inline void set_has_mac_addr();
  inline void clear_has_mac_addr();
  inline void set_has_login_type();
  inline void clear_has_login_type();
  inline void set_has_user_ip();
  inline void clear_has_user_ip();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* login_name_;
  ::std::string* password_;
  ::std::string* mac_addr_;
  ::google::protobuf::uint32 terminal_type_;
  ::google::protobuf::uint32 login_type_;
  ::std::string* user_ip_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* token_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static AuthUserRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthUserResponse : public ::google::protobuf::Message {
 public:
  AuthUserResponse();
  virtual ~AuthUserResponse();

  AuthUserResponse(const AuthUserResponse& from);

  inline AuthUserResponse& operator=(const AuthUserResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthUserResponse& default_instance();

  void Swap(AuthUserResponse* other);

  // implements Message ----------------------------------------------

  AuthUserResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthUserResponse& from);
  void MergeFrom(const AuthUserResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 tt_number = 3;
  inline bool has_tt_number() const;
  inline void clear_tt_number();
  static const int kTtNumberFieldNumber = 3;
  inline ::google::protobuf::uint64 tt_number() const;
  inline void set_tt_number(::google::protobuf::uint64 value);

  // optional string nick_name = 4;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 4;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional string avatar_id = 5;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 5;
  inline const ::std::string& avatar_id() const;
  inline void set_avatar_id(const ::std::string& value);
  inline void set_avatar_id(const char* value);
  inline void set_avatar_id(const char* value, size_t size);
  inline ::std::string* mutable_avatar_id();
  inline ::std::string* release_avatar_id();
  inline void set_allocated_avatar_id(::std::string* avatar_id);

  // optional string avatar = 6;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 6;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // optional string token = 7;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 7;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:umsProtocol.AuthUserResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_tt_number();
  inline void clear_has_tt_number();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 tt_number_;
  ::std::string* nick_name_;
  ::std::string* avatar_id_;
  ::std::string* avatar_;
  ::std::string* token_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static AuthUserResponse* default_instance_;
};
// -------------------------------------------------------------------

class QuitUserRequest : public ::google::protobuf::Message {
 public:
  QuitUserRequest();
  virtual ~QuitUserRequest();

  QuitUserRequest(const QuitUserRequest& from);

  inline QuitUserRequest& operator=(const QuitUserRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuitUserRequest& default_instance();

  void Swap(QuitUserRequest* other);

  // implements Message ----------------------------------------------

  QuitUserRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuitUserRequest& from);
  void MergeFrom(const QuitUserRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint32 terminal_type = 2;
  inline bool has_terminal_type() const;
  inline void clear_terminal_type();
  static const int kTerminalTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 terminal_type() const;
  inline void set_terminal_type(::google::protobuf::uint32 value);

  // required string token = 3;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 3;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:umsProtocol.QuitUserRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_terminal_type();
  inline void clear_has_terminal_type();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* token_;
  ::google::protobuf::uint32 terminal_type_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static QuitUserRequest* default_instance_;
};
// -------------------------------------------------------------------

class QuitUserResponse : public ::google::protobuf::Message {
 public:
  QuitUserResponse();
  virtual ~QuitUserResponse();

  QuitUserResponse(const QuitUserResponse& from);

  inline QuitUserResponse& operator=(const QuitUserResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuitUserResponse& default_instance();

  void Swap(QuitUserResponse* other);

  // implements Message ----------------------------------------------

  QuitUserResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuitUserResponse& from);
  void MergeFrom(const QuitUserResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.QuitUserResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static QuitUserResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendListRequest : public ::google::protobuf::Message {
 public:
  GetFriendListRequest();
  virtual ~GetFriendListRequest();

  GetFriendListRequest(const GetFriendListRequest& from);

  inline GetFriendListRequest& operator=(const GetFriendListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendListRequest& default_instance();

  void Swap(GetFriendListRequest* other);

  // implements Message ----------------------------------------------

  GetFriendListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendListRequest& from);
  void MergeFrom(const GetFriendListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 version_id = 2;
  inline bool has_version_id() const;
  inline void clear_version_id();
  static const int kVersionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 version_id() const;
  inline void set_version_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetFriendListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_version_id();
  inline void clear_has_version_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 version_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetFriendListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendListResponse : public ::google::protobuf::Message {
 public:
  GetFriendListResponse();
  virtual ~GetFriendListResponse();

  GetFriendListResponse(const GetFriendListResponse& from);

  inline GetFriendListResponse& operator=(const GetFriendListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendListResponse& default_instance();

  void Swap(GetFriendListResponse* other);

  // implements Message ----------------------------------------------

  GetFriendListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendListResponse& from);
  void MergeFrom(const GetFriendListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 version_id = 3;
  inline bool has_version_id() const;
  inline void clear_version_id();
  static const int kVersionIdFieldNumber = 3;
  inline ::google::protobuf::uint64 version_id() const;
  inline void set_version_id(::google::protobuf::uint64 value);

  // repeated uint64 friend_id = 4;
  inline int friend_id_size() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 4;
  inline ::google::protobuf::uint64 friend_id(int index) const;
  inline void set_friend_id(int index, ::google::protobuf::uint64 value);
  inline void add_friend_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      friend_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_friend_id();

  // @@protoc_insertion_point(class_scope:umsProtocol.GetFriendListResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_version_id();
  inline void clear_has_version_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 version_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > friend_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetFriendListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetUserInfoRequest : public ::google::protobuf::Message {
 public:
  GetUserInfoRequest();
  virtual ~GetUserInfoRequest();

  GetUserInfoRequest(const GetUserInfoRequest& from);

  inline GetUserInfoRequest& operator=(const GetUserInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserInfoRequest& default_instance();

  void Swap(GetUserInfoRequest* other);

  // implements Message ----------------------------------------------

  GetUserInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserInfoRequest& from);
  void MergeFrom(const GetUserInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetUserInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetUserInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetUserInfoResponse : public ::google::protobuf::Message {
 public:
  GetUserInfoResponse();
  virtual ~GetUserInfoResponse();

  GetUserInfoResponse(const GetUserInfoResponse& from);

  inline GetUserInfoResponse& operator=(const GetUserInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserInfoResponse& default_instance();

  void Swap(GetUserInfoResponse* other);

  // implements Message ----------------------------------------------

  GetUserInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserInfoResponse& from);
  void MergeFrom(const GetUserInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 tt_number = 2;
  inline bool has_tt_number() const;
  inline void clear_tt_number();
  static const int kTtNumberFieldNumber = 2;
  inline ::google::protobuf::uint64 tt_number() const;
  inline void set_tt_number(::google::protobuf::uint64 value);

  // optional string user_name = 3;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // optional string nick_name = 4;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 4;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional uint32 sex = 5;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 5;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // optional string mobile = 6;
  inline bool has_mobile() const;
  inline void clear_mobile();
  static const int kMobileFieldNumber = 6;
  inline const ::std::string& mobile() const;
  inline void set_mobile(const ::std::string& value);
  inline void set_mobile(const char* value);
  inline void set_mobile(const char* value, size_t size);
  inline ::std::string* mutable_mobile();
  inline ::std::string* release_mobile();
  inline void set_allocated_mobile(::std::string* mobile);

  // optional string birthday = 7;
  inline bool has_birthday() const;
  inline void clear_birthday();
  static const int kBirthdayFieldNumber = 7;
  inline const ::std::string& birthday() const;
  inline void set_birthday(const ::std::string& value);
  inline void set_birthday(const char* value);
  inline void set_birthday(const char* value, size_t size);
  inline ::std::string* mutable_birthday();
  inline ::std::string* release_birthday();
  inline void set_allocated_birthday(::std::string* birthday);

  // optional string email = 8;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 8;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // optional uint32 user_grade = 9;
  inline bool has_user_grade() const;
  inline void clear_user_grade();
  static const int kUserGradeFieldNumber = 9;
  inline ::google::protobuf::uint32 user_grade() const;
  inline void set_user_grade(::google::protobuf::uint32 value);

  // optional uint32 age = 10;
  inline bool has_age() const;
  inline void clear_age();
  static const int kAgeFieldNumber = 10;
  inline ::google::protobuf::uint32 age() const;
  inline void set_age(::google::protobuf::uint32 value);

  // optional uint32 constellation = 11;
  inline bool has_constellation() const;
  inline void clear_constellation();
  static const int kConstellationFieldNumber = 11;
  inline ::google::protobuf::uint32 constellation() const;
  inline void set_constellation(::google::protobuf::uint32 value);

  // optional string sign = 12;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 12;
  inline const ::std::string& sign() const;
  inline void set_sign(const ::std::string& value);
  inline void set_sign(const char* value);
  inline void set_sign(const char* value, size_t size);
  inline ::std::string* mutable_sign();
  inline ::std::string* release_sign();
  inline void set_allocated_sign(::std::string* sign);

  // optional string like = 13;
  inline bool has_like() const;
  inline void clear_like();
  static const int kLikeFieldNumber = 13;
  inline const ::std::string& like() const;
  inline void set_like(const ::std::string& value);
  inline void set_like(const char* value);
  inline void set_like(const char* value, size_t size);
  inline ::std::string* mutable_like();
  inline ::std::string* release_like();
  inline void set_allocated_like(::std::string* like);

  // optional string city = 14;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 14;
  inline const ::std::string& city() const;
  inline void set_city(const ::std::string& value);
  inline void set_city(const char* value);
  inline void set_city(const char* value, size_t size);
  inline ::std::string* mutable_city();
  inline ::std::string* release_city();
  inline void set_allocated_city(::std::string* city);

  // optional string personal_desc = 15;
  inline bool has_personal_desc() const;
  inline void clear_personal_desc();
  static const int kPersonalDescFieldNumber = 15;
  inline const ::std::string& personal_desc() const;
  inline void set_personal_desc(const ::std::string& value);
  inline void set_personal_desc(const char* value);
  inline void set_personal_desc(const char* value, size_t size);
  inline ::std::string* mutable_personal_desc();
  inline ::std::string* release_personal_desc();
  inline void set_allocated_personal_desc(::std::string* personal_desc);

  // optional string real_name = 16;
  inline bool has_real_name() const;
  inline void clear_real_name();
  static const int kRealNameFieldNumber = 16;
  inline const ::std::string& real_name() const;
  inline void set_real_name(const ::std::string& value);
  inline void set_real_name(const char* value);
  inline void set_real_name(const char* value, size_t size);
  inline ::std::string* mutable_real_name();
  inline ::std::string* release_real_name();
  inline void set_allocated_real_name(::std::string* real_name);

  // optional uint64 friend_id = 17;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 17;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // required .umsProtocol.Result result = 18;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 18;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetUserInfoResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_tt_number();
  inline void clear_has_tt_number();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_mobile();
  inline void clear_has_mobile();
  inline void set_has_birthday();
  inline void clear_has_birthday();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_user_grade();
  inline void clear_has_user_grade();
  inline void set_has_age();
  inline void clear_has_age();
  inline void set_has_constellation();
  inline void clear_has_constellation();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_like();
  inline void clear_has_like();
  inline void set_has_city();
  inline void clear_has_city();
  inline void set_has_personal_desc();
  inline void clear_has_personal_desc();
  inline void set_has_real_name();
  inline void clear_has_real_name();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 tt_number_;
  ::std::string* user_name_;
  ::std::string* nick_name_;
  ::std::string* mobile_;
  ::std::string* birthday_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 user_grade_;
  ::std::string* email_;
  ::google::protobuf::uint32 age_;
  ::google::protobuf::uint32 constellation_;
  ::std::string* sign_;
  ::std::string* like_;
  ::std::string* city_;
  ::std::string* personal_desc_;
  ::std::string* real_name_;
  ::google::protobuf::uint64 friend_id_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetUserInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendInfoRequest : public ::google::protobuf::Message {
 public:
  GetFriendInfoRequest();
  virtual ~GetFriendInfoRequest();

  GetFriendInfoRequest(const GetFriendInfoRequest& from);

  inline GetFriendInfoRequest& operator=(const GetFriendInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendInfoRequest& default_instance();

  void Swap(GetFriendInfoRequest* other);

  // implements Message ----------------------------------------------

  GetFriendInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendInfoRequest& from);
  void MergeFrom(const GetFriendInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 friend_id = 2;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetFriendInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetFriendInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendInfoResponse : public ::google::protobuf::Message {
 public:
  GetFriendInfoResponse();
  virtual ~GetFriendInfoResponse();

  GetFriendInfoResponse(const GetFriendInfoResponse& from);

  inline GetFriendInfoResponse& operator=(const GetFriendInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendInfoResponse& default_instance();

  void Swap(GetFriendInfoResponse* other);

  // implements Message ----------------------------------------------

  GetFriendInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendInfoResponse& from);
  void MergeFrom(const GetFriendInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 tt_number = 2;
  inline bool has_tt_number() const;
  inline void clear_tt_number();
  static const int kTtNumberFieldNumber = 2;
  inline ::google::protobuf::uint64 tt_number() const;
  inline void set_tt_number(::google::protobuf::uint64 value);

  // optional string user_name = 3;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // optional string nick_name = 4;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 4;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional uint32 sex = 5;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 5;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // optional string mobile = 6;
  inline bool has_mobile() const;
  inline void clear_mobile();
  static const int kMobileFieldNumber = 6;
  inline const ::std::string& mobile() const;
  inline void set_mobile(const ::std::string& value);
  inline void set_mobile(const char* value);
  inline void set_mobile(const char* value, size_t size);
  inline ::std::string* mutable_mobile();
  inline ::std::string* release_mobile();
  inline void set_allocated_mobile(::std::string* mobile);

  // optional string birthday = 7;
  inline bool has_birthday() const;
  inline void clear_birthday();
  static const int kBirthdayFieldNumber = 7;
  inline const ::std::string& birthday() const;
  inline void set_birthday(const ::std::string& value);
  inline void set_birthday(const char* value);
  inline void set_birthday(const char* value, size_t size);
  inline ::std::string* mutable_birthday();
  inline ::std::string* release_birthday();
  inline void set_allocated_birthday(::std::string* birthday);

  // optional string email = 8;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 8;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // optional uint32 user_grade = 9;
  inline bool has_user_grade() const;
  inline void clear_user_grade();
  static const int kUserGradeFieldNumber = 9;
  inline ::google::protobuf::uint32 user_grade() const;
  inline void set_user_grade(::google::protobuf::uint32 value);

  // optional uint32 age = 10;
  inline bool has_age() const;
  inline void clear_age();
  static const int kAgeFieldNumber = 10;
  inline ::google::protobuf::uint32 age() const;
  inline void set_age(::google::protobuf::uint32 value);

  // optional uint32 constellation = 11;
  inline bool has_constellation() const;
  inline void clear_constellation();
  static const int kConstellationFieldNumber = 11;
  inline ::google::protobuf::uint32 constellation() const;
  inline void set_constellation(::google::protobuf::uint32 value);

  // optional string sign = 12;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 12;
  inline const ::std::string& sign() const;
  inline void set_sign(const ::std::string& value);
  inline void set_sign(const char* value);
  inline void set_sign(const char* value, size_t size);
  inline ::std::string* mutable_sign();
  inline ::std::string* release_sign();
  inline void set_allocated_sign(::std::string* sign);

  // optional string like = 13;
  inline bool has_like() const;
  inline void clear_like();
  static const int kLikeFieldNumber = 13;
  inline const ::std::string& like() const;
  inline void set_like(const ::std::string& value);
  inline void set_like(const char* value);
  inline void set_like(const char* value, size_t size);
  inline ::std::string* mutable_like();
  inline ::std::string* release_like();
  inline void set_allocated_like(::std::string* like);

  // optional string city = 14;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 14;
  inline const ::std::string& city() const;
  inline void set_city(const ::std::string& value);
  inline void set_city(const char* value);
  inline void set_city(const char* value, size_t size);
  inline ::std::string* mutable_city();
  inline ::std::string* release_city();
  inline void set_allocated_city(::std::string* city);

  // optional string personal_desc = 15;
  inline bool has_personal_desc() const;
  inline void clear_personal_desc();
  static const int kPersonalDescFieldNumber = 15;
  inline const ::std::string& personal_desc() const;
  inline void set_personal_desc(const ::std::string& value);
  inline void set_personal_desc(const char* value);
  inline void set_personal_desc(const char* value, size_t size);
  inline ::std::string* mutable_personal_desc();
  inline ::std::string* release_personal_desc();
  inline void set_allocated_personal_desc(::std::string* personal_desc);

  // optional string real_name = 16;
  inline bool has_real_name() const;
  inline void clear_real_name();
  static const int kRealNameFieldNumber = 16;
  inline const ::std::string& real_name() const;
  inline void set_real_name(const ::std::string& value);
  inline void set_real_name(const char* value);
  inline void set_real_name(const char* value, size_t size);
  inline ::std::string* mutable_real_name();
  inline ::std::string* release_real_name();
  inline void set_allocated_real_name(::std::string* real_name);

  // optional uint64 friend_id = 17;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 17;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // required .umsProtocol.Result result = 18;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 18;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetFriendInfoResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_tt_number();
  inline void clear_has_tt_number();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_mobile();
  inline void clear_has_mobile();
  inline void set_has_birthday();
  inline void clear_has_birthday();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_user_grade();
  inline void clear_has_user_grade();
  inline void set_has_age();
  inline void clear_has_age();
  inline void set_has_constellation();
  inline void clear_has_constellation();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_like();
  inline void clear_has_like();
  inline void set_has_city();
  inline void clear_has_city();
  inline void set_has_personal_desc();
  inline void clear_has_personal_desc();
  inline void set_has_real_name();
  inline void clear_has_real_name();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 tt_number_;
  ::std::string* user_name_;
  ::std::string* nick_name_;
  ::std::string* mobile_;
  ::std::string* birthday_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 user_grade_;
  ::std::string* email_;
  ::google::protobuf::uint32 age_;
  ::google::protobuf::uint32 constellation_;
  ::std::string* sign_;
  ::std::string* like_;
  ::std::string* city_;
  ::std::string* personal_desc_;
  ::std::string* real_name_;
  ::google::protobuf::uint64 friend_id_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetFriendInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupListRequest : public ::google::protobuf::Message {
 public:
  GetGroupListRequest();
  virtual ~GetGroupListRequest();

  GetGroupListRequest(const GetGroupListRequest& from);

  inline GetGroupListRequest& operator=(const GetGroupListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupListRequest& default_instance();

  void Swap(GetGroupListRequest* other);

  // implements Message ----------------------------------------------

  GetGroupListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupListRequest& from);
  void MergeFrom(const GetGroupListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetGroupListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetGroupListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GroupListItem : public ::google::protobuf::Message {
 public:
  GroupListItem();
  virtual ~GroupListItem();

  GroupListItem(const GroupListItem& from);

  inline GroupListItem& operator=(const GroupListItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupListItem& default_instance();

  void Swap(GroupListItem* other);

  // implements Message ----------------------------------------------

  GroupListItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupListItem& from);
  void MergeFrom(const GroupListItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional string group_name = 2;
  inline bool has_group_name() const;
  inline void clear_group_name();
  static const int kGroupNameFieldNumber = 2;
  inline const ::std::string& group_name() const;
  inline void set_group_name(const ::std::string& value);
  inline void set_group_name(const char* value);
  inline void set_group_name(const char* value, size_t size);
  inline ::std::string* mutable_group_name();
  inline ::std::string* release_group_name();
  inline void set_allocated_group_name(::std::string* group_name);

  // optional string remark = 3;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 3;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // optional uint32 avatar_id = 4;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 4;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // optional string avatar = 5;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 5;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // @@protoc_insertion_point(class_scope:umsProtocol.GroupListItem)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_name();
  inline void clear_has_group_name();
  inline void set_has_remark();
  inline void clear_has_remark();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* group_name_;
  ::std::string* remark_;
  ::std::string* avatar_;
  ::google::protobuf::uint32 avatar_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GroupListItem* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupListResponse : public ::google::protobuf::Message {
 public:
  GetGroupListResponse();
  virtual ~GetGroupListResponse();

  GetGroupListResponse(const GetGroupListResponse& from);

  inline GetGroupListResponse& operator=(const GetGroupListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupListResponse& default_instance();

  void Swap(GetGroupListResponse* other);

  // implements Message ----------------------------------------------

  GetGroupListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupListResponse& from);
  void MergeFrom(const GetGroupListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // repeated .umsProtocol.GroupListItem group_item = 2;
  inline int group_item_size() const;
  inline void clear_group_item();
  static const int kGroupItemFieldNumber = 2;
  inline const ::umsProtocol::GroupListItem& group_item(int index) const;
  inline ::umsProtocol::GroupListItem* mutable_group_item(int index);
  inline ::umsProtocol::GroupListItem* add_group_item();
  inline const ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupListItem >&
      group_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupListItem >*
      mutable_group_item();

  // required .umsProtocol.Result result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetGroupListResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupListItem > group_item_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetGroupListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CreateGroupRequest : public ::google::protobuf::Message {
 public:
  CreateGroupRequest();
  virtual ~CreateGroupRequest();

  CreateGroupRequest(const CreateGroupRequest& from);

  inline CreateGroupRequest& operator=(const CreateGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGroupRequest& default_instance();

  void Swap(CreateGroupRequest* other);

  // implements Message ----------------------------------------------

  CreateGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateGroupRequest& from);
  void MergeFrom(const CreateGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required string group_name = 2;
  inline bool has_group_name() const;
  inline void clear_group_name();
  static const int kGroupNameFieldNumber = 2;
  inline const ::std::string& group_name() const;
  inline void set_group_name(const ::std::string& value);
  inline void set_group_name(const char* value);
  inline void set_group_name(const char* value, size_t size);
  inline ::std::string* mutable_group_name();
  inline ::std::string* release_group_name();
  inline void set_allocated_group_name(::std::string* group_name);

  // optional uint32 group_type = 3;
  inline bool has_group_type() const;
  inline void clear_group_type();
  static const int kGroupTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 group_type() const;
  inline void set_group_type(::google::protobuf::uint32 value);

  // optional string group_icon = 4;
  inline bool has_group_icon() const;
  inline void clear_group_icon();
  static const int kGroupIconFieldNumber = 4;
  inline const ::std::string& group_icon() const;
  inline void set_group_icon(const ::std::string& value);
  inline void set_group_icon(const char* value);
  inline void set_group_icon(const char* value, size_t size);
  inline ::std::string* mutable_group_icon();
  inline ::std::string* release_group_icon();
  inline void set_allocated_group_icon(::std::string* group_icon);

  // optional uint32 verify_type = 5;
  inline bool has_verify_type() const;
  inline void clear_verify_type();
  static const int kVerifyTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 verify_type() const;
  inline void set_verify_type(::google::protobuf::uint32 value);

  // optional string group_intro = 6;
  inline bool has_group_intro() const;
  inline void clear_group_intro();
  static const int kGroupIntroFieldNumber = 6;
  inline const ::std::string& group_intro() const;
  inline void set_group_intro(const ::std::string& value);
  inline void set_group_intro(const char* value);
  inline void set_group_intro(const char* value, size_t size);
  inline ::std::string* mutable_group_intro();
  inline ::std::string* release_group_intro();
  inline void set_allocated_group_intro(::std::string* group_intro);

  // optional string group_sign = 7;
  inline bool has_group_sign() const;
  inline void clear_group_sign();
  static const int kGroupSignFieldNumber = 7;
  inline const ::std::string& group_sign() const;
  inline void set_group_sign(const ::std::string& value);
  inline void set_group_sign(const char* value);
  inline void set_group_sign(const char* value, size_t size);
  inline ::std::string* mutable_group_sign();
  inline ::std::string* release_group_sign();
  inline void set_allocated_group_sign(::std::string* group_sign);

  // optional uint32 sub_type = 8;
  inline bool has_sub_type() const;
  inline void clear_sub_type();
  static const int kSubTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 sub_type() const;
  inline void set_sub_type(::google::protobuf::uint32 value);

  // optional uint32 avatar_id = 9;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 9;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.CreateGroupRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_name();
  inline void clear_has_group_name();
  inline void set_has_group_type();
  inline void clear_has_group_type();
  inline void set_has_group_icon();
  inline void clear_has_group_icon();
  inline void set_has_verify_type();
  inline void clear_has_verify_type();
  inline void set_has_group_intro();
  inline void clear_has_group_intro();
  inline void set_has_group_sign();
  inline void clear_has_group_sign();
  inline void set_has_sub_type();
  inline void clear_has_sub_type();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* group_name_;
  ::std::string* group_icon_;
  ::google::protobuf::uint32 group_type_;
  ::google::protobuf::uint32 verify_type_;
  ::std::string* group_intro_;
  ::std::string* group_sign_;
  ::google::protobuf::uint32 sub_type_;
  ::google::protobuf::uint32 avatar_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static CreateGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreateGroupResponse : public ::google::protobuf::Message {
 public:
  CreateGroupResponse();
  virtual ~CreateGroupResponse();

  CreateGroupResponse(const CreateGroupResponse& from);

  inline CreateGroupResponse& operator=(const CreateGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGroupResponse& default_instance();

  void Swap(CreateGroupResponse* other);

  // implements Message ----------------------------------------------

  CreateGroupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateGroupResponse& from);
  void MergeFrom(const CreateGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint32 gorup_number = 4;
  inline bool has_gorup_number() const;
  inline void clear_gorup_number();
  static const int kGorupNumberFieldNumber = 4;
  inline ::google::protobuf::uint32 gorup_number() const;
  inline void set_gorup_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.CreateGroupResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_gorup_number();
  inline void clear_has_gorup_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint32 gorup_number_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static CreateGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class JoinGroupRequest : public ::google::protobuf::Message {
 public:
  JoinGroupRequest();
  virtual ~JoinGroupRequest();

  JoinGroupRequest(const JoinGroupRequest& from);

  inline JoinGroupRequest& operator=(const JoinGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGroupRequest& default_instance();

  void Swap(JoinGroupRequest* other);

  // implements Message ----------------------------------------------

  JoinGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinGroupRequest& from);
  void MergeFrom(const JoinGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.JoinGroupRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static JoinGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class JoinGroupResponse : public ::google::protobuf::Message {
 public:
  JoinGroupResponse();
  virtual ~JoinGroupResponse();

  JoinGroupResponse(const JoinGroupResponse& from);

  inline JoinGroupResponse& operator=(const JoinGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinGroupResponse& default_instance();

  void Swap(JoinGroupResponse* other);

  // implements Message ----------------------------------------------

  JoinGroupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinGroupResponse& from);
  void MergeFrom(const JoinGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // required .umsProtocol.Result result = 4;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.JoinGroupResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static JoinGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class ExitGroupRequest : public ::google::protobuf::Message {
 public:
  ExitGroupRequest();
  virtual ~ExitGroupRequest();

  ExitGroupRequest(const ExitGroupRequest& from);

  inline ExitGroupRequest& operator=(const ExitGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitGroupRequest& default_instance();

  void Swap(ExitGroupRequest* other);

  // implements Message ----------------------------------------------

  ExitGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitGroupRequest& from);
  void MergeFrom(const ExitGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.ExitGroupRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ExitGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class ExitGroupResponse : public ::google::protobuf::Message {
 public:
  ExitGroupResponse();
  virtual ~ExitGroupResponse();

  ExitGroupResponse(const ExitGroupResponse& from);

  inline ExitGroupResponse& operator=(const ExitGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitGroupResponse& default_instance();

  void Swap(ExitGroupResponse* other);

  // implements Message ----------------------------------------------

  ExitGroupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitGroupResponse& from);
  void MergeFrom(const ExitGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.ExitGroupResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ExitGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupUserListRequest : public ::google::protobuf::Message {
 public:
  GetGroupUserListRequest();
  virtual ~GetGroupUserListRequest();

  GetGroupUserListRequest(const GetGroupUserListRequest& from);

  inline GetGroupUserListRequest& operator=(const GetGroupUserListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupUserListRequest& default_instance();

  void Swap(GetGroupUserListRequest* other);

  // implements Message ----------------------------------------------

  GetGroupUserListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupUserListRequest& from);
  void MergeFrom(const GetGroupUserListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetGroupUserListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetGroupUserListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupUserListResponse : public ::google::protobuf::Message {
 public:
  GetGroupUserListResponse();
  virtual ~GetGroupUserListResponse();

  GetGroupUserListResponse(const GetGroupUserListResponse& from);

  inline GetGroupUserListResponse& operator=(const GetGroupUserListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupUserListResponse& default_instance();

  void Swap(GetGroupUserListResponse* other);

  // implements Message ----------------------------------------------

  GetGroupUserListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupUserListResponse& from);
  void MergeFrom(const GetGroupUserListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint32 sum_num = 2;
  inline bool has_sum_num() const;
  inline void clear_sum_num();
  static const int kSumNumFieldNumber = 2;
  inline ::google::protobuf::uint32 sum_num() const;
  inline void set_sum_num(::google::protobuf::uint32 value);

  // repeated uint64 group_user_id = 3;
  inline int group_user_id_size() const;
  inline void clear_group_user_id();
  static const int kGroupUserIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_user_id(int index) const;
  inline void set_group_user_id(int index, ::google::protobuf::uint64 value);
  inline void add_group_user_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      group_user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_group_user_id();

  // required .umsProtocol.Result result = 4;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetGroupUserListResponse)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_sum_num();
  inline void clear_has_sum_num();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > group_user_id_;
  ::umsProtocol::Result* result_;
  ::google::protobuf::uint32 sum_num_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetGroupUserListResponse* default_instance_;
};
// -------------------------------------------------------------------

class SearchGroupUserListRequest : public ::google::protobuf::Message {
 public:
  SearchGroupUserListRequest();
  virtual ~SearchGroupUserListRequest();

  SearchGroupUserListRequest(const SearchGroupUserListRequest& from);

  inline SearchGroupUserListRequest& operator=(const SearchGroupUserListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchGroupUserListRequest& default_instance();

  void Swap(SearchGroupUserListRequest* other);

  // implements Message ----------------------------------------------

  SearchGroupUserListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchGroupUserListRequest& from);
  void MergeFrom(const SearchGroupUserListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // required string search_string = 2;
  inline bool has_search_string() const;
  inline void clear_search_string();
  static const int kSearchStringFieldNumber = 2;
  inline const ::std::string& search_string() const;
  inline void set_search_string(const ::std::string& value);
  inline void set_search_string(const char* value);
  inline void set_search_string(const char* value, size_t size);
  inline ::std::string* mutable_search_string();
  inline ::std::string* release_search_string();
  inline void set_allocated_search_string(::std::string* search_string);

  // @@protoc_insertion_point(class_scope:umsProtocol.SearchGroupUserListRequest)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_search_string();
  inline void clear_has_search_string();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* search_string_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SearchGroupUserListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GroupUserListItem : public ::google::protobuf::Message {
 public:
  GroupUserListItem();
  virtual ~GroupUserListItem();

  GroupUserListItem(const GroupUserListItem& from);

  inline GroupUserListItem& operator=(const GroupUserListItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupUserListItem& default_instance();

  void Swap(GroupUserListItem* other);

  // implements Message ----------------------------------------------

  GroupUserListItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupUserListItem& from);
  void MergeFrom(const GroupUserListItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional uint32 avatar_id = 3;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 3;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // optional string avatar = 4;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 4;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // optional uint32 role = 5;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 5;
  inline ::google::protobuf::uint32 role() const;
  inline void set_role(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.GroupUserListItem)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_role();
  inline void clear_has_role();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* nick_name_;
  ::std::string* avatar_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 role_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GroupUserListItem* default_instance_;
};
// -------------------------------------------------------------------

class SearchGroupUserListResponse : public ::google::protobuf::Message {
 public:
  SearchGroupUserListResponse();
  virtual ~SearchGroupUserListResponse();

  SearchGroupUserListResponse(const SearchGroupUserListResponse& from);

  inline SearchGroupUserListResponse& operator=(const SearchGroupUserListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchGroupUserListResponse& default_instance();

  void Swap(SearchGroupUserListResponse* other);

  // implements Message ----------------------------------------------

  SearchGroupUserListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchGroupUserListResponse& from);
  void MergeFrom(const SearchGroupUserListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // repeated .umsProtocol.GroupUserListItem list_item = 2;
  inline int list_item_size() const;
  inline void clear_list_item();
  static const int kListItemFieldNumber = 2;
  inline const ::umsProtocol::GroupUserListItem& list_item(int index) const;
  inline ::umsProtocol::GroupUserListItem* mutable_list_item(int index);
  inline ::umsProtocol::GroupUserListItem* add_list_item();
  inline const ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupUserListItem >&
      list_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupUserListItem >*
      mutable_list_item();

  // required .umsProtocol.Result result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.SearchGroupUserListResponse)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupUserListItem > list_item_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SearchGroupUserListResponse* default_instance_;
};
// -------------------------------------------------------------------

class AddFriendRequest : public ::google::protobuf::Message {
 public:
  AddFriendRequest();
  virtual ~AddFriendRequest();

  AddFriendRequest(const AddFriendRequest& from);

  inline AddFriendRequest& operator=(const AddFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendRequest& default_instance();

  void Swap(AddFriendRequest* other);

  // implements Message ----------------------------------------------

  AddFriendRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFriendRequest& from);
  void MergeFrom(const AddFriendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 friend_id = 2;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.AddFriendRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static AddFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddFriendResponse : public ::google::protobuf::Message {
 public:
  AddFriendResponse();
  virtual ~AddFriendResponse();

  AddFriendResponse(const AddFriendResponse& from);

  inline AddFriendResponse& operator=(const AddFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendResponse& default_instance();

  void Swap(AddFriendResponse* other);

  // implements Message ----------------------------------------------

  AddFriendResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFriendResponse& from);
  void MergeFrom(const AddFriendResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.AddFriendResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static AddFriendResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendVerifyInfoRequest : public ::google::protobuf::Message {
 public:
  GetFriendVerifyInfoRequest();
  virtual ~GetFriendVerifyInfoRequest();

  GetFriendVerifyInfoRequest(const GetFriendVerifyInfoRequest& from);

  inline GetFriendVerifyInfoRequest& operator=(const GetFriendVerifyInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendVerifyInfoRequest& default_instance();

  void Swap(GetFriendVerifyInfoRequest* other);

  // implements Message ----------------------------------------------

  GetFriendVerifyInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendVerifyInfoRequest& from);
  void MergeFrom(const GetFriendVerifyInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetFriendVerifyInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetFriendVerifyInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendVerifyInfoResponse : public ::google::protobuf::Message {
 public:
  GetFriendVerifyInfoResponse();
  virtual ~GetFriendVerifyInfoResponse();

  GetFriendVerifyInfoResponse(const GetFriendVerifyInfoResponse& from);

  inline GetFriendVerifyInfoResponse& operator=(const GetFriendVerifyInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendVerifyInfoResponse& default_instance();

  void Swap(GetFriendVerifyInfoResponse* other);

  // implements Message ----------------------------------------------

  GetFriendVerifyInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendVerifyInfoResponse& from);
  void MergeFrom(const GetFriendVerifyInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 verify_type = 1;
  inline bool has_verify_type() const;
  inline void clear_verify_type();
  static const int kVerifyTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 verify_type() const;
  inline void set_verify_type(::google::protobuf::uint32 value);

  // optional uint32 question_type = 2;
  inline bool has_question_type() const;
  inline void clear_question_type();
  static const int kQuestionTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 question_type() const;
  inline void set_question_type(::google::protobuf::uint32 value);

  // optional string answer = 3;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 3;
  inline const ::std::string& answer() const;
  inline void set_answer(const ::std::string& value);
  inline void set_answer(const char* value);
  inline void set_answer(const char* value, size_t size);
  inline ::std::string* mutable_answer();
  inline ::std::string* release_answer();
  inline void set_allocated_answer(::std::string* answer);

  // required .umsProtocol.Result result = 4;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetFriendVerifyInfoResponse)
 private:
  inline void set_has_verify_type();
  inline void clear_has_verify_type();
  inline void set_has_question_type();
  inline void clear_has_question_type();
  inline void set_has_answer();
  inline void clear_has_answer();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 verify_type_;
  ::google::protobuf::uint32 question_type_;
  ::std::string* answer_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetFriendVerifyInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteFriendRequest : public ::google::protobuf::Message {
 public:
  DeleteFriendRequest();
  virtual ~DeleteFriendRequest();

  DeleteFriendRequest(const DeleteFriendRequest& from);

  inline DeleteFriendRequest& operator=(const DeleteFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFriendRequest& default_instance();

  void Swap(DeleteFriendRequest* other);

  // implements Message ----------------------------------------------

  DeleteFriendRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteFriendRequest& from);
  void MergeFrom(const DeleteFriendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 friend_id = 2;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.DeleteFriendRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static DeleteFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteFriendResponse : public ::google::protobuf::Message {
 public:
  DeleteFriendResponse();
  virtual ~DeleteFriendResponse();

  DeleteFriendResponse(const DeleteFriendResponse& from);

  inline DeleteFriendResponse& operator=(const DeleteFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFriendResponse& default_instance();

  void Swap(DeleteFriendResponse* other);

  // implements Message ----------------------------------------------

  DeleteFriendResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteFriendResponse& from);
  void MergeFrom(const DeleteFriendResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.DeleteFriendResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static DeleteFriendResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateFriendBranchRequest : public ::google::protobuf::Message {
 public:
  UpdateFriendBranchRequest();
  virtual ~UpdateFriendBranchRequest();

  UpdateFriendBranchRequest(const UpdateFriendBranchRequest& from);

  inline UpdateFriendBranchRequest& operator=(const UpdateFriendBranchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFriendBranchRequest& default_instance();

  void Swap(UpdateFriendBranchRequest* other);

  // implements Message ----------------------------------------------

  UpdateFriendBranchRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateFriendBranchRequest& from);
  void MergeFrom(const UpdateFriendBranchRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 friend_id = 2;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // required uint64 branch_id = 3;
  inline bool has_branch_id() const;
  inline void clear_branch_id();
  static const int kBranchIdFieldNumber = 3;
  inline ::google::protobuf::uint64 branch_id() const;
  inline void set_branch_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateFriendBranchRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_branch_id();
  inline void clear_has_branch_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  ::google::protobuf::uint64 branch_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateFriendBranchRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateFriendBranchResponse : public ::google::protobuf::Message {
 public:
  UpdateFriendBranchResponse();
  virtual ~UpdateFriendBranchResponse();

  UpdateFriendBranchResponse(const UpdateFriendBranchResponse& from);

  inline UpdateFriendBranchResponse& operator=(const UpdateFriendBranchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFriendBranchResponse& default_instance();

  void Swap(UpdateFriendBranchResponse* other);

  // implements Message ----------------------------------------------

  UpdateFriendBranchResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateFriendBranchResponse& from);
  void MergeFrom(const UpdateFriendBranchResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateFriendBranchResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateFriendBranchResponse* default_instance_;
};
// -------------------------------------------------------------------

class AddBranchRequest : public ::google::protobuf::Message {
 public:
  AddBranchRequest();
  virtual ~AddBranchRequest();

  AddBranchRequest(const AddBranchRequest& from);

  inline AddBranchRequest& operator=(const AddBranchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddBranchRequest& default_instance();

  void Swap(AddBranchRequest* other);

  // implements Message ----------------------------------------------

  AddBranchRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddBranchRequest& from);
  void MergeFrom(const AddBranchRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string branch_name = 2;
  inline bool has_branch_name() const;
  inline void clear_branch_name();
  static const int kBranchNameFieldNumber = 2;
  inline const ::std::string& branch_name() const;
  inline void set_branch_name(const ::std::string& value);
  inline void set_branch_name(const char* value);
  inline void set_branch_name(const char* value, size_t size);
  inline ::std::string* mutable_branch_name();
  inline ::std::string* release_branch_name();
  inline void set_allocated_branch_name(::std::string* branch_name);

  // optional uint32 branch_sort = 3;
  inline bool has_branch_sort() const;
  inline void clear_branch_sort();
  static const int kBranchSortFieldNumber = 3;
  inline ::google::protobuf::uint32 branch_sort() const;
  inline void set_branch_sort(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.AddBranchRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_branch_name();
  inline void clear_has_branch_name();
  inline void set_has_branch_sort();
  inline void clear_has_branch_sort();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* branch_name_;
  ::google::protobuf::uint32 branch_sort_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static AddBranchRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddBranchResponse : public ::google::protobuf::Message {
 public:
  AddBranchResponse();
  virtual ~AddBranchResponse();

  AddBranchResponse(const AddBranchResponse& from);

  inline AddBranchResponse& operator=(const AddBranchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddBranchResponse& default_instance();

  void Swap(AddBranchResponse* other);

  // implements Message ----------------------------------------------

  AddBranchResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddBranchResponse& from);
  void MergeFrom(const AddBranchResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 branch_id = 2;
  inline bool has_branch_id() const;
  inline void clear_branch_id();
  static const int kBranchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 branch_id() const;
  inline void set_branch_id(::google::protobuf::uint64 value);

  // optional string branch_name = 3;
  inline bool has_branch_name() const;
  inline void clear_branch_name();
  static const int kBranchNameFieldNumber = 3;
  inline const ::std::string& branch_name() const;
  inline void set_branch_name(const ::std::string& value);
  inline void set_branch_name(const char* value);
  inline void set_branch_name(const char* value, size_t size);
  inline ::std::string* mutable_branch_name();
  inline ::std::string* release_branch_name();
  inline void set_allocated_branch_name(::std::string* branch_name);

  // optional uint32 branch_sort = 4;
  inline bool has_branch_sort() const;
  inline void clear_branch_sort();
  static const int kBranchSortFieldNumber = 4;
  inline ::google::protobuf::uint32 branch_sort() const;
  inline void set_branch_sort(::google::protobuf::uint32 value);

  // required .umsProtocol.Result result = 5;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 5;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.AddBranchResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_branch_id();
  inline void clear_has_branch_id();
  inline void set_has_branch_name();
  inline void clear_has_branch_name();
  inline void set_has_branch_sort();
  inline void clear_has_branch_sort();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 branch_id_;
  ::std::string* branch_name_;
  ::umsProtocol::Result* result_;
  ::google::protobuf::uint32 branch_sort_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static AddBranchResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteBranchRequest : public ::google::protobuf::Message {
 public:
  DeleteBranchRequest();
  virtual ~DeleteBranchRequest();

  DeleteBranchRequest(const DeleteBranchRequest& from);

  inline DeleteBranchRequest& operator=(const DeleteBranchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteBranchRequest& default_instance();

  void Swap(DeleteBranchRequest* other);

  // implements Message ----------------------------------------------

  DeleteBranchRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteBranchRequest& from);
  void MergeFrom(const DeleteBranchRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 branch_id = 2;
  inline bool has_branch_id() const;
  inline void clear_branch_id();
  static const int kBranchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 branch_id() const;
  inline void set_branch_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.DeleteBranchRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_branch_id();
  inline void clear_has_branch_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 branch_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static DeleteBranchRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteBranchResponse : public ::google::protobuf::Message {
 public:
  DeleteBranchResponse();
  virtual ~DeleteBranchResponse();

  DeleteBranchResponse(const DeleteBranchResponse& from);

  inline DeleteBranchResponse& operator=(const DeleteBranchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteBranchResponse& default_instance();

  void Swap(DeleteBranchResponse* other);

  // implements Message ----------------------------------------------

  DeleteBranchResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteBranchResponse& from);
  void MergeFrom(const DeleteBranchResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.DeleteBranchResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static DeleteBranchResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateBranchInfoRequest : public ::google::protobuf::Message {
 public:
  UpdateBranchInfoRequest();
  virtual ~UpdateBranchInfoRequest();

  UpdateBranchInfoRequest(const UpdateBranchInfoRequest& from);

  inline UpdateBranchInfoRequest& operator=(const UpdateBranchInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateBranchInfoRequest& default_instance();

  void Swap(UpdateBranchInfoRequest* other);

  // implements Message ----------------------------------------------

  UpdateBranchInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateBranchInfoRequest& from);
  void MergeFrom(const UpdateBranchInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 branch_id = 2;
  inline bool has_branch_id() const;
  inline void clear_branch_id();
  static const int kBranchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 branch_id() const;
  inline void set_branch_id(::google::protobuf::uint64 value);

  // optional string branch_name = 3;
  inline bool has_branch_name() const;
  inline void clear_branch_name();
  static const int kBranchNameFieldNumber = 3;
  inline const ::std::string& branch_name() const;
  inline void set_branch_name(const ::std::string& value);
  inline void set_branch_name(const char* value);
  inline void set_branch_name(const char* value, size_t size);
  inline ::std::string* mutable_branch_name();
  inline ::std::string* release_branch_name();
  inline void set_allocated_branch_name(::std::string* branch_name);

  // optional uint32 branch_sort = 4;
  inline bool has_branch_sort() const;
  inline void clear_branch_sort();
  static const int kBranchSortFieldNumber = 4;
  inline ::google::protobuf::uint32 branch_sort() const;
  inline void set_branch_sort(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateBranchInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_branch_id();
  inline void clear_has_branch_id();
  inline void set_has_branch_name();
  inline void clear_has_branch_name();
  inline void set_has_branch_sort();
  inline void clear_has_branch_sort();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 branch_id_;
  ::std::string* branch_name_;
  ::google::protobuf::uint32 branch_sort_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateBranchInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateBranchInfoResponse : public ::google::protobuf::Message {
 public:
  UpdateBranchInfoResponse();
  virtual ~UpdateBranchInfoResponse();

  UpdateBranchInfoResponse(const UpdateBranchInfoResponse& from);

  inline UpdateBranchInfoResponse& operator=(const UpdateBranchInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateBranchInfoResponse& default_instance();

  void Swap(UpdateBranchInfoResponse* other);

  // implements Message ----------------------------------------------

  UpdateBranchInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateBranchInfoResponse& from);
  void MergeFrom(const UpdateBranchInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateBranchInfoResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateBranchInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class KickoutGroupUserRequest : public ::google::protobuf::Message {
 public:
  KickoutGroupUserRequest();
  virtual ~KickoutGroupUserRequest();

  KickoutGroupUserRequest(const KickoutGroupUserRequest& from);

  inline KickoutGroupUserRequest& operator=(const KickoutGroupUserRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickoutGroupUserRequest& default_instance();

  void Swap(KickoutGroupUserRequest* other);

  // implements Message ----------------------------------------------

  KickoutGroupUserRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickoutGroupUserRequest& from);
  void MergeFrom(const KickoutGroupUserRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint64 group_user_id = 3;
  inline bool has_group_user_id() const;
  inline void clear_group_user_id();
  static const int kGroupUserIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_user_id() const;
  inline void set_group_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.KickoutGroupUserRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_user_id();
  inline void clear_has_group_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 group_user_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static KickoutGroupUserRequest* default_instance_;
};
// -------------------------------------------------------------------

class KickoutGroupUserResponse : public ::google::protobuf::Message {
 public:
  KickoutGroupUserResponse();
  virtual ~KickoutGroupUserResponse();

  KickoutGroupUserResponse(const KickoutGroupUserResponse& from);

  inline KickoutGroupUserResponse& operator=(const KickoutGroupUserResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickoutGroupUserResponse& default_instance();

  void Swap(KickoutGroupUserResponse* other);

  // implements Message ----------------------------------------------

  KickoutGroupUserResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickoutGroupUserResponse& from);
  void MergeFrom(const KickoutGroupUserResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.KickoutGroupUserResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static KickoutGroupUserResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetGroupManagerRequest : public ::google::protobuf::Message {
 public:
  SetGroupManagerRequest();
  virtual ~SetGroupManagerRequest();

  SetGroupManagerRequest(const SetGroupManagerRequest& from);

  inline SetGroupManagerRequest& operator=(const SetGroupManagerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupManagerRequest& default_instance();

  void Swap(SetGroupManagerRequest* other);

  // implements Message ----------------------------------------------

  SetGroupManagerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGroupManagerRequest& from);
  void MergeFrom(const SetGroupManagerRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint64 group_user_id = 3;
  inline bool has_group_user_id() const;
  inline void clear_group_user_id();
  static const int kGroupUserIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_user_id() const;
  inline void set_group_user_id(::google::protobuf::uint64 value);

  // optional uint32 control_value = 4;
  inline bool has_control_value() const;
  inline void clear_control_value();
  static const int kControlValueFieldNumber = 4;
  inline ::google::protobuf::uint32 control_value() const;
  inline void set_control_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.SetGroupManagerRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_user_id();
  inline void clear_has_group_user_id();
  inline void set_has_control_value();
  inline void clear_has_control_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 group_user_id_;
  ::google::protobuf::uint32 control_value_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SetGroupManagerRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetGroupManagerResponse : public ::google::protobuf::Message {
 public:
  SetGroupManagerResponse();
  virtual ~SetGroupManagerResponse();

  SetGroupManagerResponse(const SetGroupManagerResponse& from);

  inline SetGroupManagerResponse& operator=(const SetGroupManagerResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupManagerResponse& default_instance();

  void Swap(SetGroupManagerResponse* other);

  // implements Message ----------------------------------------------

  SetGroupManagerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGroupManagerResponse& from);
  void MergeFrom(const SetGroupManagerResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.SetGroupManagerResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SetGroupManagerResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateFriendRemarkRequest : public ::google::protobuf::Message {
 public:
  UpdateFriendRemarkRequest();
  virtual ~UpdateFriendRemarkRequest();

  UpdateFriendRemarkRequest(const UpdateFriendRemarkRequest& from);

  inline UpdateFriendRemarkRequest& operator=(const UpdateFriendRemarkRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFriendRemarkRequest& default_instance();

  void Swap(UpdateFriendRemarkRequest* other);

  // implements Message ----------------------------------------------

  UpdateFriendRemarkRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateFriendRemarkRequest& from);
  void MergeFrom(const UpdateFriendRemarkRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 friend_id = 2;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // optional string remark = 3;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 3;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateFriendRemarkRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_remark();
  inline void clear_has_remark();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 friend_id_;
  ::std::string* remark_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateFriendRemarkRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateFriendRemarkResponse : public ::google::protobuf::Message {
 public:
  UpdateFriendRemarkResponse();
  virtual ~UpdateFriendRemarkResponse();

  UpdateFriendRemarkResponse(const UpdateFriendRemarkResponse& from);

  inline UpdateFriendRemarkResponse& operator=(const UpdateFriendRemarkResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFriendRemarkResponse& default_instance();

  void Swap(UpdateFriendRemarkResponse* other);

  // implements Message ----------------------------------------------

  UpdateFriendRemarkResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateFriendRemarkResponse& from);
  void MergeFrom(const UpdateFriendRemarkResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateFriendRemarkResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateFriendRemarkResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetBranchListRequest : public ::google::protobuf::Message {
 public:
  GetBranchListRequest();
  virtual ~GetBranchListRequest();

  GetBranchListRequest(const GetBranchListRequest& from);

  inline GetBranchListRequest& operator=(const GetBranchListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBranchListRequest& default_instance();

  void Swap(GetBranchListRequest* other);

  // implements Message ----------------------------------------------

  GetBranchListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBranchListRequest& from);
  void MergeFrom(const GetBranchListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 version_id = 2;
  inline bool has_version_id() const;
  inline void clear_version_id();
  static const int kVersionIdFieldNumber = 2;
  inline ::google::protobuf::uint64 version_id() const;
  inline void set_version_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetBranchListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_version_id();
  inline void clear_has_version_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 version_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetBranchListRequest* default_instance_;
};
// -------------------------------------------------------------------

class UserIdRemarkItem : public ::google::protobuf::Message {
 public:
  UserIdRemarkItem();
  virtual ~UserIdRemarkItem();

  UserIdRemarkItem(const UserIdRemarkItem& from);

  inline UserIdRemarkItem& operator=(const UserIdRemarkItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserIdRemarkItem& default_instance();

  void Swap(UserIdRemarkItem* other);

  // implements Message ----------------------------------------------

  UserIdRemarkItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserIdRemarkItem& from);
  void MergeFrom(const UserIdRemarkItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string user_remark = 2;
  inline bool has_user_remark() const;
  inline void clear_user_remark();
  static const int kUserRemarkFieldNumber = 2;
  inline const ::std::string& user_remark() const;
  inline void set_user_remark(const ::std::string& value);
  inline void set_user_remark(const char* value);
  inline void set_user_remark(const char* value, size_t size);
  inline ::std::string* mutable_user_remark();
  inline ::std::string* release_user_remark();
  inline void set_allocated_user_remark(::std::string* user_remark);

  // @@protoc_insertion_point(class_scope:umsProtocol.UserIdRemarkItem)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_remark();
  inline void clear_has_user_remark();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* user_remark_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UserIdRemarkItem* default_instance_;
};
// -------------------------------------------------------------------

class BranchListItem : public ::google::protobuf::Message {
 public:
  BranchListItem();
  virtual ~BranchListItem();

  BranchListItem(const BranchListItem& from);

  inline BranchListItem& operator=(const BranchListItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BranchListItem& default_instance();

  void Swap(BranchListItem* other);

  // implements Message ----------------------------------------------

  BranchListItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BranchListItem& from);
  void MergeFrom(const BranchListItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 branch_id = 1;
  inline bool has_branch_id() const;
  inline void clear_branch_id();
  static const int kBranchIdFieldNumber = 1;
  inline ::google::protobuf::uint64 branch_id() const;
  inline void set_branch_id(::google::protobuf::uint64 value);

  // optional string branch_name = 2;
  inline bool has_branch_name() const;
  inline void clear_branch_name();
  static const int kBranchNameFieldNumber = 2;
  inline const ::std::string& branch_name() const;
  inline void set_branch_name(const ::std::string& value);
  inline void set_branch_name(const char* value);
  inline void set_branch_name(const char* value, size_t size);
  inline ::std::string* mutable_branch_name();
  inline ::std::string* release_branch_name();
  inline void set_allocated_branch_name(::std::string* branch_name);

  // optional uint32 branch_sort = 3;
  inline bool has_branch_sort() const;
  inline void clear_branch_sort();
  static const int kBranchSortFieldNumber = 3;
  inline ::google::protobuf::uint32 branch_sort() const;
  inline void set_branch_sort(::google::protobuf::uint32 value);

  // repeated .umsProtocol.UserIdRemarkItem users = 4;
  inline int users_size() const;
  inline void clear_users();
  static const int kUsersFieldNumber = 4;
  inline const ::umsProtocol::UserIdRemarkItem& users(int index) const;
  inline ::umsProtocol::UserIdRemarkItem* mutable_users(int index);
  inline ::umsProtocol::UserIdRemarkItem* add_users();
  inline const ::google::protobuf::RepeatedPtrField< ::umsProtocol::UserIdRemarkItem >&
      users() const;
  inline ::google::protobuf::RepeatedPtrField< ::umsProtocol::UserIdRemarkItem >*
      mutable_users();

  // @@protoc_insertion_point(class_scope:umsProtocol.BranchListItem)
 private:
  inline void set_has_branch_id();
  inline void clear_has_branch_id();
  inline void set_has_branch_name();
  inline void clear_has_branch_name();
  inline void set_has_branch_sort();
  inline void clear_has_branch_sort();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 branch_id_;
  ::std::string* branch_name_;
  ::google::protobuf::RepeatedPtrField< ::umsProtocol::UserIdRemarkItem > users_;
  ::google::protobuf::uint32 branch_sort_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static BranchListItem* default_instance_;
};
// -------------------------------------------------------------------

class GetBranchListResponse : public ::google::protobuf::Message {
 public:
  GetBranchListResponse();
  virtual ~GetBranchListResponse();

  GetBranchListResponse(const GetBranchListResponse& from);

  inline GetBranchListResponse& operator=(const GetBranchListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBranchListResponse& default_instance();

  void Swap(GetBranchListResponse* other);

  // implements Message ----------------------------------------------

  GetBranchListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBranchListResponse& from);
  void MergeFrom(const GetBranchListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 version_id = 3;
  inline bool has_version_id() const;
  inline void clear_version_id();
  static const int kVersionIdFieldNumber = 3;
  inline ::google::protobuf::uint64 version_id() const;
  inline void set_version_id(::google::protobuf::uint64 value);

  // repeated .umsProtocol.BranchListItem branch_item = 4;
  inline int branch_item_size() const;
  inline void clear_branch_item();
  static const int kBranchItemFieldNumber = 4;
  inline const ::umsProtocol::BranchListItem& branch_item(int index) const;
  inline ::umsProtocol::BranchListItem* mutable_branch_item(int index);
  inline ::umsProtocol::BranchListItem* add_branch_item();
  inline const ::google::protobuf::RepeatedPtrField< ::umsProtocol::BranchListItem >&
      branch_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::umsProtocol::BranchListItem >*
      mutable_branch_item();

  // @@protoc_insertion_point(class_scope:umsProtocol.GetBranchListResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_version_id();
  inline void clear_has_version_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 version_id_;
  ::google::protobuf::RepeatedPtrField< ::umsProtocol::BranchListItem > branch_item_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetBranchListResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetFriendOptionRequest : public ::google::protobuf::Message {
 public:
  SetFriendOptionRequest();
  virtual ~SetFriendOptionRequest();

  SetFriendOptionRequest(const SetFriendOptionRequest& from);

  inline SetFriendOptionRequest& operator=(const SetFriendOptionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFriendOptionRequest& default_instance();

  void Swap(SetFriendOptionRequest* other);

  // implements Message ----------------------------------------------

  SetFriendOptionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetFriendOptionRequest& from);
  void MergeFrom(const SetFriendOptionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 verify_type = 2;
  inline bool has_verify_type() const;
  inline void clear_verify_type();
  static const int kVerifyTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 verify_type() const;
  inline void set_verify_type(::google::protobuf::uint32 value);

  // optional uint32 question_type = 3;
  inline bool has_question_type() const;
  inline void clear_question_type();
  static const int kQuestionTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 question_type() const;
  inline void set_question_type(::google::protobuf::uint32 value);

  // optional string answer = 4;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 4;
  inline const ::std::string& answer() const;
  inline void set_answer(const ::std::string& value);
  inline void set_answer(const char* value);
  inline void set_answer(const char* value, size_t size);
  inline ::std::string* mutable_answer();
  inline ::std::string* release_answer();
  inline void set_allocated_answer(::std::string* answer);

  // @@protoc_insertion_point(class_scope:umsProtocol.SetFriendOptionRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_verify_type();
  inline void clear_has_verify_type();
  inline void set_has_question_type();
  inline void clear_has_question_type();
  inline void set_has_answer();
  inline void clear_has_answer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 verify_type_;
  ::google::protobuf::uint32 question_type_;
  ::std::string* answer_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SetFriendOptionRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetFriendOptionResponse : public ::google::protobuf::Message {
 public:
  SetFriendOptionResponse();
  virtual ~SetFriendOptionResponse();

  SetFriendOptionResponse(const SetFriendOptionResponse& from);

  inline SetFriendOptionResponse& operator=(const SetFriendOptionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFriendOptionResponse& default_instance();

  void Swap(SetFriendOptionResponse* other);

  // implements Message ----------------------------------------------

  SetFriendOptionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetFriendOptionResponse& from);
  void MergeFrom(const SetFriendOptionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.SetFriendOptionResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SetFriendOptionResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteGroupRequest : public ::google::protobuf::Message {
 public:
  DeleteGroupRequest();
  virtual ~DeleteGroupRequest();

  DeleteGroupRequest(const DeleteGroupRequest& from);

  inline DeleteGroupRequest& operator=(const DeleteGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteGroupRequest& default_instance();

  void Swap(DeleteGroupRequest* other);

  // implements Message ----------------------------------------------

  DeleteGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteGroupRequest& from);
  void MergeFrom(const DeleteGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.DeleteGroupRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static DeleteGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteGroupResponse : public ::google::protobuf::Message {
 public:
  DeleteGroupResponse();
  virtual ~DeleteGroupResponse();

  DeleteGroupResponse(const DeleteGroupResponse& from);

  inline DeleteGroupResponse& operator=(const DeleteGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteGroupResponse& default_instance();

  void Swap(DeleteGroupResponse* other);

  // implements Message ----------------------------------------------

  DeleteGroupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteGroupResponse& from);
  void MergeFrom(const DeleteGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.DeleteGroupResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static DeleteGroupResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGroupUserInfoRequest : public ::google::protobuf::Message {
 public:
  UpdateGroupUserInfoRequest();
  virtual ~UpdateGroupUserInfoRequest();

  UpdateGroupUserInfoRequest(const UpdateGroupUserInfoRequest& from);

  inline UpdateGroupUserInfoRequest& operator=(const UpdateGroupUserInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupUserInfoRequest& default_instance();

  void Swap(UpdateGroupUserInfoRequest* other);

  // implements Message ----------------------------------------------

  UpdateGroupUserInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGroupUserInfoRequest& from);
  void MergeFrom(const UpdateGroupUserInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // required uint64 group_user_id = 3;
  inline bool has_group_user_id() const;
  inline void clear_group_user_id();
  static const int kGroupUserIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_user_id() const;
  inline void set_group_user_id(::google::protobuf::uint64 value);

  // optional string remark = 4;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 4;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // optional string group_card = 5;
  inline bool has_group_card() const;
  inline void clear_group_card();
  static const int kGroupCardFieldNumber = 5;
  inline const ::std::string& group_card() const;
  inline void set_group_card(const ::std::string& value);
  inline void set_group_card(const char* value);
  inline void set_group_card(const char* value, size_t size);
  inline ::std::string* mutable_group_card();
  inline ::std::string* release_group_card();
  inline void set_allocated_group_card(::std::string* group_card);

  // optional string email = 6;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 6;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // optional string tel = 7;
  inline bool has_tel() const;
  inline void clear_tel();
  static const int kTelFieldNumber = 7;
  inline const ::std::string& tel() const;
  inline void set_tel(const ::std::string& value);
  inline void set_tel(const char* value);
  inline void set_tel(const char* value, size_t size);
  inline ::std::string* mutable_tel();
  inline ::std::string* release_tel();
  inline void set_allocated_tel(::std::string* tel);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateGroupUserInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_user_id();
  inline void clear_has_group_user_id();
  inline void set_has_remark();
  inline void clear_has_remark();
  inline void set_has_group_card();
  inline void clear_has_group_card();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_tel();
  inline void clear_has_tel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 group_user_id_;
  ::std::string* remark_;
  ::std::string* group_card_;
  ::std::string* email_;
  ::std::string* tel_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateGroupUserInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGroupUserInfoResponse : public ::google::protobuf::Message {
 public:
  UpdateGroupUserInfoResponse();
  virtual ~UpdateGroupUserInfoResponse();

  UpdateGroupUserInfoResponse(const UpdateGroupUserInfoResponse& from);

  inline UpdateGroupUserInfoResponse& operator=(const UpdateGroupUserInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupUserInfoResponse& default_instance();

  void Swap(UpdateGroupUserInfoResponse* other);

  // implements Message ----------------------------------------------

  UpdateGroupUserInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGroupUserInfoResponse& from);
  void MergeFrom(const UpdateGroupUserInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateGroupUserInfoResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateGroupUserInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGroupInfoRequest : public ::google::protobuf::Message {
 public:
  UpdateGroupInfoRequest();
  virtual ~UpdateGroupInfoRequest();

  UpdateGroupInfoRequest(const UpdateGroupInfoRequest& from);

  inline UpdateGroupInfoRequest& operator=(const UpdateGroupInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupInfoRequest& default_instance();

  void Swap(UpdateGroupInfoRequest* other);

  // implements Message ----------------------------------------------

  UpdateGroupInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGroupInfoRequest& from);
  void MergeFrom(const UpdateGroupInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional string group_name = 3;
  inline bool has_group_name() const;
  inline void clear_group_name();
  static const int kGroupNameFieldNumber = 3;
  inline const ::std::string& group_name() const;
  inline void set_group_name(const ::std::string& value);
  inline void set_group_name(const char* value);
  inline void set_group_name(const char* value, size_t size);
  inline ::std::string* mutable_group_name();
  inline ::std::string* release_group_name();
  inline void set_allocated_group_name(::std::string* group_name);

  // optional string remark = 4;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 4;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // optional uint32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional string group_intro = 6;
  inline bool has_group_intro() const;
  inline void clear_group_intro();
  static const int kGroupIntroFieldNumber = 6;
  inline const ::std::string& group_intro() const;
  inline void set_group_intro(const ::std::string& value);
  inline void set_group_intro(const char* value);
  inline void set_group_intro(const char* value, size_t size);
  inline ::std::string* mutable_group_intro();
  inline ::std::string* release_group_intro();
  inline void set_allocated_group_intro(::std::string* group_intro);

  // optional string group_notice = 7;
  inline bool has_group_notice() const;
  inline void clear_group_notice();
  static const int kGroupNoticeFieldNumber = 7;
  inline const ::std::string& group_notice() const;
  inline void set_group_notice(const ::std::string& value);
  inline void set_group_notice(const char* value);
  inline void set_group_notice(const char* value, size_t size);
  inline ::std::string* mutable_group_notice();
  inline ::std::string* release_group_notice();
  inline void set_allocated_group_notice(::std::string* group_notice);

  // optional string avatar = 8;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 8;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // optional uint32 sub_type = 9;
  inline bool has_sub_type() const;
  inline void clear_sub_type();
  static const int kSubTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 sub_type() const;
  inline void set_sub_type(::google::protobuf::uint32 value);

  // optional uint32 avatar_id = 10;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 10;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateGroupInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_name();
  inline void clear_has_group_name();
  inline void set_has_remark();
  inline void clear_has_remark();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_group_intro();
  inline void clear_has_group_intro();
  inline void set_has_group_notice();
  inline void clear_has_group_notice();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_sub_type();
  inline void clear_has_sub_type();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* group_name_;
  ::std::string* remark_;
  ::std::string* group_intro_;
  ::std::string* group_notice_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 sub_type_;
  ::std::string* avatar_;
  ::google::protobuf::uint32 avatar_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateGroupInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGroupInfoResponse : public ::google::protobuf::Message {
 public:
  UpdateGroupInfoResponse();
  virtual ~UpdateGroupInfoResponse();

  UpdateGroupInfoResponse(const UpdateGroupInfoResponse& from);

  inline UpdateGroupInfoResponse& operator=(const UpdateGroupInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupInfoResponse& default_instance();

  void Swap(UpdateGroupInfoResponse* other);

  // implements Message ----------------------------------------------

  UpdateGroupInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGroupInfoResponse& from);
  void MergeFrom(const UpdateGroupInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateGroupInfoResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateGroupInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGroupOptionRequest : public ::google::protobuf::Message {
 public:
  UpdateGroupOptionRequest();
  virtual ~UpdateGroupOptionRequest();

  UpdateGroupOptionRequest(const UpdateGroupOptionRequest& from);

  inline UpdateGroupOptionRequest& operator=(const UpdateGroupOptionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupOptionRequest& default_instance();

  void Swap(UpdateGroupOptionRequest* other);

  // implements Message ----------------------------------------------

  UpdateGroupOptionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGroupOptionRequest& from);
  void MergeFrom(const UpdateGroupOptionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint32 verify_type = 3;
  inline bool has_verify_type() const;
  inline void clear_verify_type();
  static const int kVerifyTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 verify_type() const;
  inline void set_verify_type(::google::protobuf::uint32 value);

  // optional uint64 channel_id = 4;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 4;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateGroupOptionRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_verify_type();
  inline void clear_has_verify_type();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::uint32 verify_type_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateGroupOptionRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGroupOptionResponse : public ::google::protobuf::Message {
 public:
  UpdateGroupOptionResponse();
  virtual ~UpdateGroupOptionResponse();

  UpdateGroupOptionResponse(const UpdateGroupOptionResponse& from);

  inline UpdateGroupOptionResponse& operator=(const UpdateGroupOptionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupOptionResponse& default_instance();

  void Swap(UpdateGroupOptionResponse* other);

  // implements Message ----------------------------------------------

  UpdateGroupOptionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGroupOptionResponse& from);
  void MergeFrom(const UpdateGroupOptionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateGroupOptionResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateGroupOptionResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGroupNoticeRequest : public ::google::protobuf::Message {
 public:
  UpdateGroupNoticeRequest();
  virtual ~UpdateGroupNoticeRequest();

  UpdateGroupNoticeRequest(const UpdateGroupNoticeRequest& from);

  inline UpdateGroupNoticeRequest& operator=(const UpdateGroupNoticeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupNoticeRequest& default_instance();

  void Swap(UpdateGroupNoticeRequest* other);

  // implements Message ----------------------------------------------

  UpdateGroupNoticeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGroupNoticeRequest& from);
  void MergeFrom(const UpdateGroupNoticeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional string notice = 3;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 3;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateGroupNoticeRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_notice();
  inline void clear_has_notice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* notice_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateGroupNoticeRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGroupNoticeResponse : public ::google::protobuf::Message {
 public:
  UpdateGroupNoticeResponse();
  virtual ~UpdateGroupNoticeResponse();

  UpdateGroupNoticeResponse(const UpdateGroupNoticeResponse& from);

  inline UpdateGroupNoticeResponse& operator=(const UpdateGroupNoticeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGroupNoticeResponse& default_instance();

  void Swap(UpdateGroupNoticeResponse* other);

  // implements Message ----------------------------------------------

  UpdateGroupNoticeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGroupNoticeResponse& from);
  void MergeFrom(const UpdateGroupNoticeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateGroupNoticeResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateGroupNoticeResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupInfoRequest : public ::google::protobuf::Message {
 public:
  GetGroupInfoRequest();
  virtual ~GetGroupInfoRequest();

  GetGroupInfoRequest(const GetGroupInfoRequest& from);

  inline GetGroupInfoRequest& operator=(const GetGroupInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupInfoRequest& default_instance();

  void Swap(GetGroupInfoRequest* other);

  // implements Message ----------------------------------------------

  GetGroupInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupInfoRequest& from);
  void MergeFrom(const GetGroupInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetGroupInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetGroupInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupInfoResponse : public ::google::protobuf::Message {
 public:
  GetGroupInfoResponse();
  virtual ~GetGroupInfoResponse();

  GetGroupInfoResponse(const GetGroupInfoResponse& from);

  inline GetGroupInfoResponse& operator=(const GetGroupInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupInfoResponse& default_instance();

  void Swap(GetGroupInfoResponse* other);

  // implements Message ----------------------------------------------

  GetGroupInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupInfoResponse& from);
  void MergeFrom(const GetGroupInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional string group_name = 3;
  inline bool has_group_name() const;
  inline void clear_group_name();
  static const int kGroupNameFieldNumber = 3;
  inline const ::std::string& group_name() const;
  inline void set_group_name(const ::std::string& value);
  inline void set_group_name(const char* value);
  inline void set_group_name(const char* value, size_t size);
  inline ::std::string* mutable_group_name();
  inline ::std::string* release_group_name();
  inline void set_allocated_group_name(::std::string* group_name);

  // optional string remark = 4;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 4;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // optional uint32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional string group_intro = 6;
  inline bool has_group_intro() const;
  inline void clear_group_intro();
  static const int kGroupIntroFieldNumber = 6;
  inline const ::std::string& group_intro() const;
  inline void set_group_intro(const ::std::string& value);
  inline void set_group_intro(const char* value);
  inline void set_group_intro(const char* value, size_t size);
  inline ::std::string* mutable_group_intro();
  inline ::std::string* release_group_intro();
  inline void set_allocated_group_intro(::std::string* group_intro);

  // optional string group_notice = 7;
  inline bool has_group_notice() const;
  inline void clear_group_notice();
  static const int kGroupNoticeFieldNumber = 7;
  inline const ::std::string& group_notice() const;
  inline void set_group_notice(const ::std::string& value);
  inline void set_group_notice(const char* value);
  inline void set_group_notice(const char* value, size_t size);
  inline ::std::string* mutable_group_notice();
  inline ::std::string* release_group_notice();
  inline void set_allocated_group_notice(::std::string* group_notice);

  // optional string avatar = 8;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 8;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // required .umsProtocol.Result result = 9;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 9;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // optional uint32 sub_type = 10;
  inline bool has_sub_type() const;
  inline void clear_sub_type();
  static const int kSubTypeFieldNumber = 10;
  inline ::google::protobuf::uint32 sub_type() const;
  inline void set_sub_type(::google::protobuf::uint32 value);

  // optional uint64 group_number = 11;
  inline bool has_group_number() const;
  inline void clear_group_number();
  static const int kGroupNumberFieldNumber = 11;
  inline ::google::protobuf::uint64 group_number() const;
  inline void set_group_number(::google::protobuf::uint64 value);

  // optional uint32 avatar_id = 12;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 12;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // optional uint64 owner_id = 13;
  inline bool has_owner_id() const;
  inline void clear_owner_id();
  static const int kOwnerIdFieldNumber = 13;
  inline ::google::protobuf::uint64 owner_id() const;
  inline void set_owner_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetGroupInfoResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_name();
  inline void clear_has_group_name();
  inline void set_has_remark();
  inline void clear_has_remark();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_group_intro();
  inline void clear_has_group_intro();
  inline void set_has_group_notice();
  inline void clear_has_group_notice();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_sub_type();
  inline void clear_has_sub_type();
  inline void set_has_group_number();
  inline void clear_has_group_number();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_owner_id();
  inline void clear_has_owner_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* group_name_;
  ::std::string* remark_;
  ::std::string* group_intro_;
  ::std::string* group_notice_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 sub_type_;
  ::std::string* avatar_;
  ::umsProtocol::Result* result_;
  ::google::protobuf::uint64 group_number_;
  ::google::protobuf::uint64 owner_id_;
  ::google::protobuf::uint32 avatar_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetGroupInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateUserInfoRequest : public ::google::protobuf::Message {
 public:
  UpdateUserInfoRequest();
  virtual ~UpdateUserInfoRequest();

  UpdateUserInfoRequest(const UpdateUserInfoRequest& from);

  inline UpdateUserInfoRequest& operator=(const UpdateUserInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserInfoRequest& default_instance();

  void Swap(UpdateUserInfoRequest* other);

  // implements Message ----------------------------------------------

  UpdateUserInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateUserInfoRequest& from);
  void MergeFrom(const UpdateUserInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional uint32 sex = 3;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 3;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // optional string mobile = 4;
  inline bool has_mobile() const;
  inline void clear_mobile();
  static const int kMobileFieldNumber = 4;
  inline const ::std::string& mobile() const;
  inline void set_mobile(const ::std::string& value);
  inline void set_mobile(const char* value);
  inline void set_mobile(const char* value, size_t size);
  inline ::std::string* mutable_mobile();
  inline ::std::string* release_mobile();
  inline void set_allocated_mobile(::std::string* mobile);

  // optional string birthday = 5;
  inline bool has_birthday() const;
  inline void clear_birthday();
  static const int kBirthdayFieldNumber = 5;
  inline const ::std::string& birthday() const;
  inline void set_birthday(const ::std::string& value);
  inline void set_birthday(const char* value);
  inline void set_birthday(const char* value, size_t size);
  inline ::std::string* mutable_birthday();
  inline ::std::string* release_birthday();
  inline void set_allocated_birthday(::std::string* birthday);

  // optional string email = 6;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 6;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // optional uint32 age = 7;
  inline bool has_age() const;
  inline void clear_age();
  static const int kAgeFieldNumber = 7;
  inline ::google::protobuf::uint32 age() const;
  inline void set_age(::google::protobuf::uint32 value);

  // optional uint32 constellation = 8;
  inline bool has_constellation() const;
  inline void clear_constellation();
  static const int kConstellationFieldNumber = 8;
  inline ::google::protobuf::uint32 constellation() const;
  inline void set_constellation(::google::protobuf::uint32 value);

  // optional string sign = 9;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 9;
  inline const ::std::string& sign() const;
  inline void set_sign(const ::std::string& value);
  inline void set_sign(const char* value);
  inline void set_sign(const char* value, size_t size);
  inline ::std::string* mutable_sign();
  inline ::std::string* release_sign();
  inline void set_allocated_sign(::std::string* sign);

  // optional string like = 10;
  inline bool has_like() const;
  inline void clear_like();
  static const int kLikeFieldNumber = 10;
  inline const ::std::string& like() const;
  inline void set_like(const ::std::string& value);
  inline void set_like(const char* value);
  inline void set_like(const char* value, size_t size);
  inline ::std::string* mutable_like();
  inline ::std::string* release_like();
  inline void set_allocated_like(::std::string* like);

  // optional string city = 11;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 11;
  inline const ::std::string& city() const;
  inline void set_city(const ::std::string& value);
  inline void set_city(const char* value);
  inline void set_city(const char* value, size_t size);
  inline ::std::string* mutable_city();
  inline ::std::string* release_city();
  inline void set_allocated_city(::std::string* city);

  // optional string personal_desc = 12;
  inline bool has_personal_desc() const;
  inline void clear_personal_desc();
  static const int kPersonalDescFieldNumber = 12;
  inline const ::std::string& personal_desc() const;
  inline void set_personal_desc(const ::std::string& value);
  inline void set_personal_desc(const char* value);
  inline void set_personal_desc(const char* value, size_t size);
  inline ::std::string* mutable_personal_desc();
  inline ::std::string* release_personal_desc();
  inline void set_allocated_personal_desc(::std::string* personal_desc);

  // optional string real_name = 13;
  inline bool has_real_name() const;
  inline void clear_real_name();
  static const int kRealNameFieldNumber = 13;
  inline const ::std::string& real_name() const;
  inline void set_real_name(const ::std::string& value);
  inline void set_real_name(const char* value);
  inline void set_real_name(const char* value, size_t size);
  inline ::std::string* mutable_real_name();
  inline ::std::string* release_real_name();
  inline void set_allocated_real_name(::std::string* real_name);

  // optional string token = 14;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 14;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateUserInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_mobile();
  inline void clear_has_mobile();
  inline void set_has_birthday();
  inline void clear_has_birthday();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_age();
  inline void clear_has_age();
  inline void set_has_constellation();
  inline void clear_has_constellation();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_like();
  inline void clear_has_like();
  inline void set_has_city();
  inline void clear_has_city();
  inline void set_has_personal_desc();
  inline void clear_has_personal_desc();
  inline void set_has_real_name();
  inline void clear_has_real_name();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* nick_name_;
  ::std::string* mobile_;
  ::std::string* birthday_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 age_;
  ::std::string* email_;
  ::std::string* sign_;
  ::std::string* like_;
  ::std::string* city_;
  ::std::string* personal_desc_;
  ::std::string* real_name_;
  ::std::string* token_;
  ::google::protobuf::uint32 constellation_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateUserInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateUserInfoResponse : public ::google::protobuf::Message {
 public:
  UpdateUserInfoResponse();
  virtual ~UpdateUserInfoResponse();

  UpdateUserInfoResponse(const UpdateUserInfoResponse& from);

  inline UpdateUserInfoResponse& operator=(const UpdateUserInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserInfoResponse& default_instance();

  void Swap(UpdateUserInfoResponse* other);

  // implements Message ----------------------------------------------

  UpdateUserInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateUserInfoResponse& from);
  void MergeFrom(const UpdateUserInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateUserInfoResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateUserInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateUserMoodRequest : public ::google::protobuf::Message {
 public:
  UpdateUserMoodRequest();
  virtual ~UpdateUserMoodRequest();

  UpdateUserMoodRequest(const UpdateUserMoodRequest& from);

  inline UpdateUserMoodRequest& operator=(const UpdateUserMoodRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserMoodRequest& default_instance();

  void Swap(UpdateUserMoodRequest* other);

  // implements Message ----------------------------------------------

  UpdateUserMoodRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateUserMoodRequest& from);
  void MergeFrom(const UpdateUserMoodRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string mood = 2;
  inline bool has_mood() const;
  inline void clear_mood();
  static const int kMoodFieldNumber = 2;
  inline const ::std::string& mood() const;
  inline void set_mood(const ::std::string& value);
  inline void set_mood(const char* value);
  inline void set_mood(const char* value, size_t size);
  inline ::std::string* mutable_mood();
  inline ::std::string* release_mood();
  inline void set_allocated_mood(::std::string* mood);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateUserMoodRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_mood();
  inline void clear_has_mood();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* mood_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateUserMoodRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateUserMoodResponse : public ::google::protobuf::Message {
 public:
  UpdateUserMoodResponse();
  virtual ~UpdateUserMoodResponse();

  UpdateUserMoodResponse(const UpdateUserMoodResponse& from);

  inline UpdateUserMoodResponse& operator=(const UpdateUserMoodResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserMoodResponse& default_instance();

  void Swap(UpdateUserMoodResponse* other);

  // implements Message ----------------------------------------------

  UpdateUserMoodResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateUserMoodResponse& from);
  void MergeFrom(const UpdateUserMoodResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateUserMoodResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateUserMoodResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateUserNickNameRequest : public ::google::protobuf::Message {
 public:
  UpdateUserNickNameRequest();
  virtual ~UpdateUserNickNameRequest();

  UpdateUserNickNameRequest(const UpdateUserNickNameRequest& from);

  inline UpdateUserNickNameRequest& operator=(const UpdateUserNickNameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserNickNameRequest& default_instance();

  void Swap(UpdateUserNickNameRequest* other);

  // implements Message ----------------------------------------------

  UpdateUserNickNameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateUserNickNameRequest& from);
  void MergeFrom(const UpdateUserNickNameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateUserNickNameRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* nick_name_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateUserNickNameRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateUserNickNameResponse : public ::google::protobuf::Message {
 public:
  UpdateUserNickNameResponse();
  virtual ~UpdateUserNickNameResponse();

  UpdateUserNickNameResponse(const UpdateUserNickNameResponse& from);

  inline UpdateUserNickNameResponse& operator=(const UpdateUserNickNameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateUserNickNameResponse& default_instance();

  void Swap(UpdateUserNickNameResponse* other);

  // implements Message ----------------------------------------------

  UpdateUserNickNameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateUserNickNameResponse& from);
  void MergeFrom(const UpdateUserNickNameResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateUserNickNameResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateUserNickNameResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateAvatarRequest : public ::google::protobuf::Message {
 public:
  UpdateAvatarRequest();
  virtual ~UpdateAvatarRequest();

  UpdateAvatarRequest(const UpdateAvatarRequest& from);

  inline UpdateAvatarRequest& operator=(const UpdateAvatarRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAvatarRequest& default_instance();

  void Swap(UpdateAvatarRequest* other);

  // implements Message ----------------------------------------------

  UpdateAvatarRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateAvatarRequest& from);
  void MergeFrom(const UpdateAvatarRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 avatar_id = 2;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 2;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // optional string avatar = 3;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 3;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateAvatarRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* avatar_;
  ::google::protobuf::uint32 avatar_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateAvatarRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateAvatarResponse : public ::google::protobuf::Message {
 public:
  UpdateAvatarResponse();
  virtual ~UpdateAvatarResponse();

  UpdateAvatarResponse(const UpdateAvatarResponse& from);

  inline UpdateAvatarResponse& operator=(const UpdateAvatarResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAvatarResponse& default_instance();

  void Swap(UpdateAvatarResponse* other);

  // implements Message ----------------------------------------------

  UpdateAvatarResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateAvatarResponse& from);
  void MergeFrom(const UpdateAvatarResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.UpdateAvatarResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static UpdateAvatarResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupUserInfoRequest : public ::google::protobuf::Message {
 public:
  GetGroupUserInfoRequest();
  virtual ~GetGroupUserInfoRequest();

  GetGroupUserInfoRequest(const GetGroupUserInfoRequest& from);

  inline GetGroupUserInfoRequest& operator=(const GetGroupUserInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupUserInfoRequest& default_instance();

  void Swap(GetGroupUserInfoRequest* other);

  // implements Message ----------------------------------------------

  GetGroupUserInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupUserInfoRequest& from);
  void MergeFrom(const GetGroupUserInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // repeated uint64 user_id = 2;
  inline int user_id_size() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id(int index) const;
  inline void set_user_id(int index, ::google::protobuf::uint64 value);
  inline void add_user_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_id();

  // @@protoc_insertion_point(class_scope:umsProtocol.GetGroupUserInfoRequest)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetGroupUserInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupUserInfoResponse : public ::google::protobuf::Message {
 public:
  GetGroupUserInfoResponse();
  virtual ~GetGroupUserInfoResponse();

  GetGroupUserInfoResponse(const GetGroupUserInfoResponse& from);

  inline GetGroupUserInfoResponse& operator=(const GetGroupUserInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupUserInfoResponse& default_instance();

  void Swap(GetGroupUserInfoResponse* other);

  // implements Message ----------------------------------------------

  GetGroupUserInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupUserInfoResponse& from);
  void MergeFrom(const GetGroupUserInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // optional uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // repeated .umsProtocol.GroupUserListItem group_members = 3;
  inline int group_members_size() const;
  inline void clear_group_members();
  static const int kGroupMembersFieldNumber = 3;
  inline const ::umsProtocol::GroupUserListItem& group_members(int index) const;
  inline ::umsProtocol::GroupUserListItem* mutable_group_members(int index);
  inline ::umsProtocol::GroupUserListItem* add_group_members();
  inline const ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupUserListItem >&
      group_members() const;
  inline ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupUserListItem >*
      mutable_group_members();

  // @@protoc_insertion_point(class_scope:umsProtocol.GetGroupUserInfoResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupUserListItem > group_members_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetGroupUserInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendBaseInfoRequest : public ::google::protobuf::Message {
 public:
  GetFriendBaseInfoRequest();
  virtual ~GetFriendBaseInfoRequest();

  GetFriendBaseInfoRequest(const GetFriendBaseInfoRequest& from);

  inline GetFriendBaseInfoRequest& operator=(const GetFriendBaseInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendBaseInfoRequest& default_instance();

  void Swap(GetFriendBaseInfoRequest* other);

  // implements Message ----------------------------------------------

  GetFriendBaseInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendBaseInfoRequest& from);
  void MergeFrom(const GetFriendBaseInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // repeated uint64 friend_id = 2;
  inline int friend_id_size() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::uint64 friend_id(int index) const;
  inline void set_friend_id(int index, ::google::protobuf::uint64 value);
  inline void add_friend_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      friend_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_friend_id();

  // @@protoc_insertion_point(class_scope:umsProtocol.GetFriendBaseInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > friend_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetFriendBaseInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class FriendListItem : public ::google::protobuf::Message {
 public:
  FriendListItem();
  virtual ~FriendListItem();

  FriendListItem(const FriendListItem& from);

  inline FriendListItem& operator=(const FriendListItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendListItem& default_instance();

  void Swap(FriendListItem* other);

  // implements Message ----------------------------------------------

  FriendListItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendListItem& from);
  void MergeFrom(const FriendListItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional string nick_name = 2;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional uint32 avatar_id = 3;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 3;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // optional string avatar = 4;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 4;
  inline const ::std::string& avatar() const;
  inline void set_avatar(const ::std::string& value);
  inline void set_avatar(const char* value);
  inline void set_avatar(const char* value, size_t size);
  inline ::std::string* mutable_avatar();
  inline ::std::string* release_avatar();
  inline void set_allocated_avatar(::std::string* avatar);

  // optional string sign = 5;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 5;
  inline const ::std::string& sign() const;
  inline void set_sign(const ::std::string& value);
  inline void set_sign(const char* value);
  inline void set_sign(const char* value, size_t size);
  inline ::std::string* mutable_sign();
  inline ::std::string* release_sign();
  inline void set_allocated_sign(::std::string* sign);

  // optional uint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.FriendListItem)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* nick_name_;
  ::std::string* avatar_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 level_;
  ::std::string* sign_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static FriendListItem* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendBaseInfoResponse : public ::google::protobuf::Message {
 public:
  GetFriendBaseInfoResponse();
  virtual ~GetFriendBaseInfoResponse();

  GetFriendBaseInfoResponse(const GetFriendBaseInfoResponse& from);

  inline GetFriendBaseInfoResponse& operator=(const GetFriendBaseInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendBaseInfoResponse& default_instance();

  void Swap(GetFriendBaseInfoResponse* other);

  // implements Message ----------------------------------------------

  GetFriendBaseInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendBaseInfoResponse& from);
  void MergeFrom(const GetFriendBaseInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // repeated .umsProtocol.FriendListItem friend_item = 4;
  inline int friend_item_size() const;
  inline void clear_friend_item();
  static const int kFriendItemFieldNumber = 4;
  inline const ::umsProtocol::FriendListItem& friend_item(int index) const;
  inline ::umsProtocol::FriendListItem* mutable_friend_item(int index);
  inline ::umsProtocol::FriendListItem* add_friend_item();
  inline const ::google::protobuf::RepeatedPtrField< ::umsProtocol::FriendListItem >&
      friend_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::umsProtocol::FriendListItem >*
      mutable_friend_item();

  // @@protoc_insertion_point(class_scope:umsProtocol.GetFriendBaseInfoResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::umsProtocol::FriendListItem > friend_item_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetFriendBaseInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupOptionRequest : public ::google::protobuf::Message {
 public:
  GetGroupOptionRequest();
  virtual ~GetGroupOptionRequest();

  GetGroupOptionRequest(const GetGroupOptionRequest& from);

  inline GetGroupOptionRequest& operator=(const GetGroupOptionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupOptionRequest& default_instance();

  void Swap(GetGroupOptionRequest* other);

  // implements Message ----------------------------------------------

  GetGroupOptionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupOptionRequest& from);
  void MergeFrom(const GetGroupOptionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetGroupOptionRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetGroupOptionRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupOptionResponse : public ::google::protobuf::Message {
 public:
  GetGroupOptionResponse();
  virtual ~GetGroupOptionResponse();

  GetGroupOptionResponse(const GetGroupOptionResponse& from);

  inline GetGroupOptionResponse& operator=(const GetGroupOptionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupOptionResponse& default_instance();

  void Swap(GetGroupOptionResponse* other);

  // implements Message ----------------------------------------------

  GetGroupOptionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupOptionResponse& from);
  void MergeFrom(const GetGroupOptionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint32 verify_type = 4;
  inline bool has_verify_type() const;
  inline void clear_verify_type();
  static const int kVerifyTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 verify_type() const;
  inline void set_verify_type(::google::protobuf::uint32 value);

  // optional uint64 channel_id = 5;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 5;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // optional int32 msg_mode = 6;
  inline bool has_msg_mode() const;
  inline void clear_msg_mode();
  static const int kMsgModeFieldNumber = 6;
  inline ::google::protobuf::int32 msg_mode() const;
  inline void set_msg_mode(::google::protobuf::int32 value);

  // optional int32 talk_mode = 7;
  inline bool has_talk_mode() const;
  inline void clear_talk_mode();
  static const int kTalkModeFieldNumber = 7;
  inline ::google::protobuf::int32 talk_mode() const;
  inline void set_talk_mode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetGroupOptionResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_verify_type();
  inline void clear_has_verify_type();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_msg_mode();
  inline void clear_has_msg_mode();
  inline void set_has_talk_mode();
  inline void clear_has_talk_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::uint32 verify_type_;
  ::google::protobuf::int32 msg_mode_;
  ::google::protobuf::int32 talk_mode_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetGroupOptionResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupUserCardRequest : public ::google::protobuf::Message {
 public:
  GetGroupUserCardRequest();
  virtual ~GetGroupUserCardRequest();

  GetGroupUserCardRequest(const GetGroupUserCardRequest& from);

  inline GetGroupUserCardRequest& operator=(const GetGroupUserCardRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupUserCardRequest& default_instance();

  void Swap(GetGroupUserCardRequest* other);

  // implements Message ----------------------------------------------

  GetGroupUserCardRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupUserCardRequest& from);
  void MergeFrom(const GetGroupUserCardRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetGroupUserCardRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetGroupUserCardRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupUserCardResponse : public ::google::protobuf::Message {
 public:
  GetGroupUserCardResponse();
  virtual ~GetGroupUserCardResponse();

  GetGroupUserCardResponse(const GetGroupUserCardResponse& from);

  inline GetGroupUserCardResponse& operator=(const GetGroupUserCardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupUserCardResponse& default_instance();

  void Swap(GetGroupUserCardResponse* other);

  // implements Message ----------------------------------------------

  GetGroupUserCardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupUserCardResponse& from);
  void MergeFrom(const GetGroupUserCardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional string nick_name = 4;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 4;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const char* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional string phone = 5;
  inline bool has_phone() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 5;
  inline const ::std::string& phone() const;
  inline void set_phone(const ::std::string& value);
  inline void set_phone(const char* value);
  inline void set_phone(const char* value, size_t size);
  inline ::std::string* mutable_phone();
  inline ::std::string* release_phone();
  inline void set_allocated_phone(::std::string* phone);

  // optional string mail = 6;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 6;
  inline const ::std::string& mail() const;
  inline void set_mail(const ::std::string& value);
  inline void set_mail(const char* value);
  inline void set_mail(const char* value, size_t size);
  inline ::std::string* mutable_mail();
  inline ::std::string* release_mail();
  inline void set_allocated_mail(::std::string* mail);

  // optional string remark = 7;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 7;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetGroupUserCardResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_mail();
  inline void clear_has_mail();
  inline void set_has_remark();
  inline void clear_has_remark();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::std::string* nick_name_;
  ::std::string* phone_;
  ::std::string* mail_;
  ::std::string* remark_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetGroupUserCardResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetGroupMsgModeRequest : public ::google::protobuf::Message {
 public:
  SetGroupMsgModeRequest();
  virtual ~SetGroupMsgModeRequest();

  SetGroupMsgModeRequest(const SetGroupMsgModeRequest& from);

  inline SetGroupMsgModeRequest& operator=(const SetGroupMsgModeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupMsgModeRequest& default_instance();

  void Swap(SetGroupMsgModeRequest* other);

  // implements Message ----------------------------------------------

  SetGroupMsgModeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGroupMsgModeRequest& from);
  void MergeFrom(const SetGroupMsgModeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // required uint32 msg_mode = 3;
  inline bool has_msg_mode() const;
  inline void clear_msg_mode();
  static const int kMsgModeFieldNumber = 3;
  inline ::google::protobuf::uint32 msg_mode() const;
  inline void set_msg_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.SetGroupMsgModeRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_msg_mode();
  inline void clear_has_msg_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint32 msg_mode_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SetGroupMsgModeRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetGroupMsgModeResponse : public ::google::protobuf::Message {
 public:
  SetGroupMsgModeResponse();
  virtual ~SetGroupMsgModeResponse();

  SetGroupMsgModeResponse(const SetGroupMsgModeResponse& from);

  inline SetGroupMsgModeResponse& operator=(const SetGroupMsgModeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupMsgModeResponse& default_instance();

  void Swap(SetGroupMsgModeResponse* other);

  // implements Message ----------------------------------------------

  SetGroupMsgModeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGroupMsgModeResponse& from);
  void MergeFrom(const SetGroupMsgModeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.SetGroupMsgModeResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SetGroupMsgModeResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetGroupTalkModeRequest : public ::google::protobuf::Message {
 public:
  SetGroupTalkModeRequest();
  virtual ~SetGroupTalkModeRequest();

  SetGroupTalkModeRequest(const SetGroupTalkModeRequest& from);

  inline SetGroupTalkModeRequest& operator=(const SetGroupTalkModeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupTalkModeRequest& default_instance();

  void Swap(SetGroupTalkModeRequest* other);

  // implements Message ----------------------------------------------

  SetGroupTalkModeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGroupTalkModeRequest& from);
  void MergeFrom(const SetGroupTalkModeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // required uint32 talk_mode = 3;
  inline bool has_talk_mode() const;
  inline void clear_talk_mode();
  static const int kTalkModeFieldNumber = 3;
  inline ::google::protobuf::uint32 talk_mode() const;
  inline void set_talk_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.SetGroupTalkModeRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_talk_mode();
  inline void clear_has_talk_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint32 talk_mode_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SetGroupTalkModeRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetGroupTalkModeResponse : public ::google::protobuf::Message {
 public:
  SetGroupTalkModeResponse();
  virtual ~SetGroupTalkModeResponse();

  SetGroupTalkModeResponse(const SetGroupTalkModeResponse& from);

  inline SetGroupTalkModeResponse& operator=(const SetGroupTalkModeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGroupTalkModeResponse& default_instance();

  void Swap(SetGroupTalkModeResponse* other);

  // implements Message ----------------------------------------------

  SetGroupTalkModeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGroupTalkModeResponse& from);
  void MergeFrom(const SetGroupTalkModeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .umsProtocol.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.SetGroupTalkModeResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::umsProtocol::Result* result_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SetGroupTalkModeResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupManagerListRequest : public ::google::protobuf::Message {
 public:
  GetGroupManagerListRequest();
  virtual ~GetGroupManagerListRequest();

  GetGroupManagerListRequest(const GetGroupManagerListRequest& from);

  inline GetGroupManagerListRequest& operator=(const GetGroupManagerListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupManagerListRequest& default_instance();

  void Swap(GetGroupManagerListRequest* other);

  // implements Message ----------------------------------------------

  GetGroupManagerListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupManagerListRequest& from);
  void MergeFrom(const GetGroupManagerListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint64 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetGroupManagerListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 group_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetGroupManagerListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGroupManagerListResponse : public ::google::protobuf::Message {
 public:
  GetGroupManagerListResponse();
  virtual ~GetGroupManagerListResponse();

  GetGroupManagerListResponse(const GetGroupManagerListResponse& from);

  inline GetGroupManagerListResponse& operator=(const GetGroupManagerListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGroupManagerListResponse& default_instance();

  void Swap(GetGroupManagerListResponse* other);

  // implements Message ----------------------------------------------

  GetGroupManagerListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGroupManagerListResponse& from);
  void MergeFrom(const GetGroupManagerListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional uint32 sum_num = 2;
  inline bool has_sum_num() const;
  inline void clear_sum_num();
  static const int kSumNumFieldNumber = 2;
  inline ::google::protobuf::uint32 sum_num() const;
  inline void set_sum_num(::google::protobuf::uint32 value);

  // repeated uint64 group_user_id = 3;
  inline int group_user_id_size() const;
  inline void clear_group_user_id();
  static const int kGroupUserIdFieldNumber = 3;
  inline ::google::protobuf::uint64 group_user_id(int index) const;
  inline void set_group_user_id(int index, ::google::protobuf::uint64 value);
  inline void add_group_user_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      group_user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_group_user_id();

  // required .umsProtocol.Result result = 4;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline const ::umsProtocol::Result& result() const;
  inline ::umsProtocol::Result* mutable_result();
  inline ::umsProtocol::Result* release_result();
  inline void set_allocated_result(::umsProtocol::Result* result);

  // @@protoc_insertion_point(class_scope:umsProtocol.GetGroupManagerListResponse)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_sum_num();
  inline void clear_has_sum_num();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > group_user_id_;
  ::umsProtocol::Result* result_;
  ::google::protobuf::uint32 sum_num_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetGroupManagerListResponse* default_instance_;
};
// -------------------------------------------------------------------

class NotifyJoinGroupRequest : public ::google::protobuf::Message {
 public:
  NotifyJoinGroupRequest();
  virtual ~NotifyJoinGroupRequest();

  NotifyJoinGroupRequest(const NotifyJoinGroupRequest& from);

  inline NotifyJoinGroupRequest& operator=(const NotifyJoinGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyJoinGroupRequest& default_instance();

  void Swap(NotifyJoinGroupRequest* other);

  // implements Message ----------------------------------------------

  NotifyJoinGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyJoinGroupRequest& from);
  void MergeFrom(const NotifyJoinGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:umsProtocol.NotifyJoinGroupRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static NotifyJoinGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class NotifyExitGroupRequest : public ::google::protobuf::Message {
 public:
  NotifyExitGroupRequest();
  virtual ~NotifyExitGroupRequest();

  NotifyExitGroupRequest(const NotifyExitGroupRequest& from);

  inline NotifyExitGroupRequest& operator=(const NotifyExitGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyExitGroupRequest& default_instance();

  void Swap(NotifyExitGroupRequest* other);

  // implements Message ----------------------------------------------

  NotifyExitGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyExitGroupRequest& from);
  void MergeFrom(const NotifyExitGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:umsProtocol.NotifyExitGroupRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static NotifyExitGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class NotifyKickoutGroupUserRequest : public ::google::protobuf::Message {
 public:
  NotifyKickoutGroupUserRequest();
  virtual ~NotifyKickoutGroupUserRequest();

  NotifyKickoutGroupUserRequest(const NotifyKickoutGroupUserRequest& from);

  inline NotifyKickoutGroupUserRequest& operator=(const NotifyKickoutGroupUserRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyKickoutGroupUserRequest& default_instance();

  void Swap(NotifyKickoutGroupUserRequest* other);

  // implements Message ----------------------------------------------

  NotifyKickoutGroupUserRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyKickoutGroupUserRequest& from);
  void MergeFrom(const NotifyKickoutGroupUserRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 admin_user_id = 1;
  inline bool has_admin_user_id() const;
  inline void clear_admin_user_id();
  static const int kAdminUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 admin_user_id() const;
  inline void set_admin_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.NotifyKickoutGroupUserRequest)
 private:
  inline void set_has_admin_user_id();
  inline void clear_has_admin_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 admin_user_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static NotifyKickoutGroupUserRequest* default_instance_;
};
// -------------------------------------------------------------------

class NotifySetGroupManagerRequest : public ::google::protobuf::Message {
 public:
  NotifySetGroupManagerRequest();
  virtual ~NotifySetGroupManagerRequest();

  NotifySetGroupManagerRequest(const NotifySetGroupManagerRequest& from);

  inline NotifySetGroupManagerRequest& operator=(const NotifySetGroupManagerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifySetGroupManagerRequest& default_instance();

  void Swap(NotifySetGroupManagerRequest* other);

  // implements Message ----------------------------------------------

  NotifySetGroupManagerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifySetGroupManagerRequest& from);
  void MergeFrom(const NotifySetGroupManagerRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 super_admin_user_id = 1;
  inline bool has_super_admin_user_id() const;
  inline void clear_super_admin_user_id();
  static const int kSuperAdminUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 super_admin_user_id() const;
  inline void set_super_admin_user_id(::google::protobuf::uint64 value);

  // required uint32 control_value = 2;
  inline bool has_control_value() const;
  inline void clear_control_value();
  static const int kControlValueFieldNumber = 2;
  inline ::google::protobuf::uint32 control_value() const;
  inline void set_control_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.NotifySetGroupManagerRequest)
 private:
  inline void set_has_super_admin_user_id();
  inline void clear_has_super_admin_user_id();
  inline void set_has_control_value();
  inline void clear_has_control_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 super_admin_user_id_;
  ::google::protobuf::uint32 control_value_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static NotifySetGroupManagerRequest* default_instance_;
};
// -------------------------------------------------------------------

class NotifyDeleteGroupRequest : public ::google::protobuf::Message {
 public:
  NotifyDeleteGroupRequest();
  virtual ~NotifyDeleteGroupRequest();

  NotifyDeleteGroupRequest(const NotifyDeleteGroupRequest& from);

  inline NotifyDeleteGroupRequest& operator=(const NotifyDeleteGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyDeleteGroupRequest& default_instance();

  void Swap(NotifyDeleteGroupRequest* other);

  // implements Message ----------------------------------------------

  NotifyDeleteGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyDeleteGroupRequest& from);
  void MergeFrom(const NotifyDeleteGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 super_admin_user_id = 1;
  inline bool has_super_admin_user_id() const;
  inline void clear_super_admin_user_id();
  static const int kSuperAdminUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 super_admin_user_id() const;
  inline void set_super_admin_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.NotifyDeleteGroupRequest)
 private:
  inline void set_has_super_admin_user_id();
  inline void clear_has_super_admin_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 super_admin_user_id_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static NotifyDeleteGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUpdateGroupRemarkRequest : public ::google::protobuf::Message {
 public:
  NotifyUpdateGroupRemarkRequest();
  virtual ~NotifyUpdateGroupRemarkRequest();

  NotifyUpdateGroupRemarkRequest(const NotifyUpdateGroupRemarkRequest& from);

  inline NotifyUpdateGroupRemarkRequest& operator=(const NotifyUpdateGroupRemarkRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyUpdateGroupRemarkRequest& default_instance();

  void Swap(NotifyUpdateGroupRemarkRequest* other);

  // implements Message ----------------------------------------------

  NotifyUpdateGroupRemarkRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyUpdateGroupRemarkRequest& from);
  void MergeFrom(const NotifyUpdateGroupRemarkRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 admin_user_id = 1;
  inline bool has_admin_user_id() const;
  inline void clear_admin_user_id();
  static const int kAdminUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 admin_user_id() const;
  inline void set_admin_user_id(::google::protobuf::uint64 value);

  // optional string remark = 2;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 2;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // @@protoc_insertion_point(class_scope:umsProtocol.NotifyUpdateGroupRemarkRequest)
 private:
  inline void set_has_admin_user_id();
  inline void clear_has_admin_user_id();
  inline void set_has_remark();
  inline void clear_has_remark();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 admin_user_id_;
  ::std::string* remark_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static NotifyUpdateGroupRemarkRequest* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUpdateGroupInfoRequest : public ::google::protobuf::Message {
 public:
  NotifyUpdateGroupInfoRequest();
  virtual ~NotifyUpdateGroupInfoRequest();

  NotifyUpdateGroupInfoRequest(const NotifyUpdateGroupInfoRequest& from);

  inline NotifyUpdateGroupInfoRequest& operator=(const NotifyUpdateGroupInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyUpdateGroupInfoRequest& default_instance();

  void Swap(NotifyUpdateGroupInfoRequest* other);

  // implements Message ----------------------------------------------

  NotifyUpdateGroupInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyUpdateGroupInfoRequest& from);
  void MergeFrom(const NotifyUpdateGroupInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string group_name = 1;
  inline bool has_group_name() const;
  inline void clear_group_name();
  static const int kGroupNameFieldNumber = 1;
  inline const ::std::string& group_name() const;
  inline void set_group_name(const ::std::string& value);
  inline void set_group_name(const char* value);
  inline void set_group_name(const char* value, size_t size);
  inline ::std::string* mutable_group_name();
  inline ::std::string* release_group_name();
  inline void set_allocated_group_name(::std::string* group_name);

  // optional string remark = 2;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 2;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  inline void set_allocated_remark(::std::string* remark);

  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional string group_intro = 4;
  inline bool has_group_intro() const;
  inline void clear_group_intro();
  static const int kGroupIntroFieldNumber = 4;
  inline const ::std::string& group_intro() const;
  inline void set_group_intro(const ::std::string& value);
  inline void set_group_intro(const char* value);
  inline void set_group_intro(const char* value, size_t size);
  inline ::std::string* mutable_group_intro();
  inline ::std::string* release_group_intro();
  inline void set_allocated_group_intro(::std::string* group_intro);

  // optional string group_notice = 5;
  inline bool has_group_notice() const;
  inline void clear_group_notice();
  static const int kGroupNoticeFieldNumber = 5;
  inline const ::std::string& group_notice() const;
  inline void set_group_notice(const ::std::string& value);
  inline void set_group_notice(const char* value);
  inline void set_group_notice(const char* value, size_t size);
  inline ::std::string* mutable_group_notice();
  inline ::std::string* release_group_notice();
  inline void set_allocated_group_notice(::std::string* group_notice);

  // @@protoc_insertion_point(class_scope:umsProtocol.NotifyUpdateGroupInfoRequest)
 private:
  inline void set_has_group_name();
  inline void clear_has_group_name();
  inline void set_has_remark();
  inline void clear_has_remark();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_group_intro();
  inline void clear_has_group_intro();
  inline void set_has_group_notice();
  inline void clear_has_group_notice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* group_name_;
  ::std::string* remark_;
  ::std::string* group_intro_;
  ::std::string* group_notice_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static NotifyUpdateGroupInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUpdateGroupOptionRequest : public ::google::protobuf::Message {
 public:
  NotifyUpdateGroupOptionRequest();
  virtual ~NotifyUpdateGroupOptionRequest();

  NotifyUpdateGroupOptionRequest(const NotifyUpdateGroupOptionRequest& from);

  inline NotifyUpdateGroupOptionRequest& operator=(const NotifyUpdateGroupOptionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyUpdateGroupOptionRequest& default_instance();

  void Swap(NotifyUpdateGroupOptionRequest* other);

  // implements Message ----------------------------------------------

  NotifyUpdateGroupOptionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyUpdateGroupOptionRequest& from);
  void MergeFrom(const NotifyUpdateGroupOptionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 verify_type = 1;
  inline bool has_verify_type() const;
  inline void clear_verify_type();
  static const int kVerifyTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 verify_type() const;
  inline void set_verify_type(::google::protobuf::uint32 value);

  // optional uint64 channel_id = 2;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 2;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:umsProtocol.NotifyUpdateGroupOptionRequest)
 private:
  inline void set_has_verify_type();
  inline void clear_has_verify_type();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::uint32 verify_type_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static NotifyUpdateGroupOptionRequest* default_instance_;
};
// -------------------------------------------------------------------

class NotifyUpdateGroupNoticeRequest : public ::google::protobuf::Message {
 public:
  NotifyUpdateGroupNoticeRequest();
  virtual ~NotifyUpdateGroupNoticeRequest();

  NotifyUpdateGroupNoticeRequest(const NotifyUpdateGroupNoticeRequest& from);

  inline NotifyUpdateGroupNoticeRequest& operator=(const NotifyUpdateGroupNoticeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyUpdateGroupNoticeRequest& default_instance();

  void Swap(NotifyUpdateGroupNoticeRequest* other);

  // implements Message ----------------------------------------------

  NotifyUpdateGroupNoticeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyUpdateGroupNoticeRequest& from);
  void MergeFrom(const NotifyUpdateGroupNoticeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string notice = 1;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 1;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // @@protoc_insertion_point(class_scope:umsProtocol.NotifyUpdateGroupNoticeRequest)
 private:
  inline void set_has_notice();
  inline void clear_has_notice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* notice_;
  friend void  protobuf_AddDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_AssignDesc_user_5fmanagement_5fservice_2eproto();
  friend void protobuf_ShutdownFile_user_5fmanagement_5fservice_2eproto();

  void InitAsDefaultInstance();
  static NotifyUpdateGroupNoticeRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// Result

// required uint32 code = 1;
inline bool Result::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Result::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Result::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Result::clear_code() {
  code_ = 0u;
  clear_has_code();
}
inline ::google::protobuf::uint32 Result::code() const {
  // @@protoc_insertion_point(field_get:umsProtocol.Result.code)
  return code_;
}
inline void Result::set_code(::google::protobuf::uint32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.Result.code)
}

// required string msg = 2;
inline bool Result::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Result::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Result::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Result::clear_msg() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& Result::msg() const {
  // @@protoc_insertion_point(field_get:umsProtocol.Result.msg)
  return *msg_;
}
inline void Result::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.Result.msg)
}
inline void Result::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.Result.msg)
}
inline void Result::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.Result.msg)
}
inline ::std::string* Result::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.Result.msg)
  return msg_;
}
inline ::std::string* Result::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Result::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.Result.msg)
}

// -------------------------------------------------------------------

// AuthUserRequest

// optional string login_name = 1;
inline bool AuthUserRequest::has_login_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthUserRequest::set_has_login_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthUserRequest::clear_has_login_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthUserRequest::clear_login_name() {
  if (login_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_->clear();
  }
  clear_has_login_name();
}
inline const ::std::string& AuthUserRequest::login_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserRequest.login_name)
  return *login_name_;
}
inline void AuthUserRequest::set_login_name(const ::std::string& value) {
  set_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_ = new ::std::string;
  }
  login_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.AuthUserRequest.login_name)
}
inline void AuthUserRequest::set_login_name(const char* value) {
  set_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_ = new ::std::string;
  }
  login_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.AuthUserRequest.login_name)
}
inline void AuthUserRequest::set_login_name(const char* value, size_t size) {
  set_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_ = new ::std::string;
  }
  login_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.AuthUserRequest.login_name)
}
inline ::std::string* AuthUserRequest::mutable_login_name() {
  set_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.AuthUserRequest.login_name)
  return login_name_;
}
inline ::std::string* AuthUserRequest::release_login_name() {
  clear_has_login_name();
  if (login_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = login_name_;
    login_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuthUserRequest::set_allocated_login_name(::std::string* login_name) {
  if (login_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete login_name_;
  }
  if (login_name) {
    set_has_login_name();
    login_name_ = login_name;
  } else {
    clear_has_login_name();
    login_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.AuthUserRequest.login_name)
}

// optional string password = 2;
inline bool AuthUserRequest::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthUserRequest::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthUserRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthUserRequest::clear_password() {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& AuthUserRequest::password() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserRequest.password)
  return *password_;
}
inline void AuthUserRequest::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.AuthUserRequest.password)
}
inline void AuthUserRequest::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.AuthUserRequest.password)
}
inline void AuthUserRequest::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.AuthUserRequest.password)
}
inline ::std::string* AuthUserRequest::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.AuthUserRequest.password)
  return password_;
}
inline ::std::string* AuthUserRequest::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuthUserRequest::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.AuthUserRequest.password)
}

// required uint32 terminal_type = 3;
inline bool AuthUserRequest::has_terminal_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthUserRequest::set_has_terminal_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthUserRequest::clear_has_terminal_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthUserRequest::clear_terminal_type() {
  terminal_type_ = 0u;
  clear_has_terminal_type();
}
inline ::google::protobuf::uint32 AuthUserRequest::terminal_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserRequest.terminal_type)
  return terminal_type_;
}
inline void AuthUserRequest::set_terminal_type(::google::protobuf::uint32 value) {
  set_has_terminal_type();
  terminal_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.AuthUserRequest.terminal_type)
}

// optional string mac_addr = 4;
inline bool AuthUserRequest::has_mac_addr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuthUserRequest::set_has_mac_addr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuthUserRequest::clear_has_mac_addr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuthUserRequest::clear_mac_addr() {
  if (mac_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_addr_->clear();
  }
  clear_has_mac_addr();
}
inline const ::std::string& AuthUserRequest::mac_addr() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserRequest.mac_addr)
  return *mac_addr_;
}
inline void AuthUserRequest::set_mac_addr(const ::std::string& value) {
  set_has_mac_addr();
  if (mac_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_addr_ = new ::std::string;
  }
  mac_addr_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.AuthUserRequest.mac_addr)
}
inline void AuthUserRequest::set_mac_addr(const char* value) {
  set_has_mac_addr();
  if (mac_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_addr_ = new ::std::string;
  }
  mac_addr_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.AuthUserRequest.mac_addr)
}
inline void AuthUserRequest::set_mac_addr(const char* value, size_t size) {
  set_has_mac_addr();
  if (mac_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_addr_ = new ::std::string;
  }
  mac_addr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.AuthUserRequest.mac_addr)
}
inline ::std::string* AuthUserRequest::mutable_mac_addr() {
  set_has_mac_addr();
  if (mac_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_addr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.AuthUserRequest.mac_addr)
  return mac_addr_;
}
inline ::std::string* AuthUserRequest::release_mac_addr() {
  clear_has_mac_addr();
  if (mac_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mac_addr_;
    mac_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuthUserRequest::set_allocated_mac_addr(::std::string* mac_addr) {
  if (mac_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mac_addr_;
  }
  if (mac_addr) {
    set_has_mac_addr();
    mac_addr_ = mac_addr;
  } else {
    clear_has_mac_addr();
    mac_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.AuthUserRequest.mac_addr)
}

// optional uint32 login_type = 5;
inline bool AuthUserRequest::has_login_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AuthUserRequest::set_has_login_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AuthUserRequest::clear_has_login_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AuthUserRequest::clear_login_type() {
  login_type_ = 0u;
  clear_has_login_type();
}
inline ::google::protobuf::uint32 AuthUserRequest::login_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserRequest.login_type)
  return login_type_;
}
inline void AuthUserRequest::set_login_type(::google::protobuf::uint32 value) {
  set_has_login_type();
  login_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.AuthUserRequest.login_type)
}

// optional string user_ip = 6;
inline bool AuthUserRequest::has_user_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AuthUserRequest::set_has_user_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AuthUserRequest::clear_has_user_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AuthUserRequest::clear_user_ip() {
  if (user_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_ip_->clear();
  }
  clear_has_user_ip();
}
inline const ::std::string& AuthUserRequest::user_ip() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserRequest.user_ip)
  return *user_ip_;
}
inline void AuthUserRequest::set_user_ip(const ::std::string& value) {
  set_has_user_ip();
  if (user_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_ip_ = new ::std::string;
  }
  user_ip_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.AuthUserRequest.user_ip)
}
inline void AuthUserRequest::set_user_ip(const char* value) {
  set_has_user_ip();
  if (user_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_ip_ = new ::std::string;
  }
  user_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.AuthUserRequest.user_ip)
}
inline void AuthUserRequest::set_user_ip(const char* value, size_t size) {
  set_has_user_ip();
  if (user_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_ip_ = new ::std::string;
  }
  user_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.AuthUserRequest.user_ip)
}
inline ::std::string* AuthUserRequest::mutable_user_ip() {
  set_has_user_ip();
  if (user_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.AuthUserRequest.user_ip)
  return user_ip_;
}
inline ::std::string* AuthUserRequest::release_user_ip() {
  clear_has_user_ip();
  if (user_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_ip_;
    user_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuthUserRequest::set_allocated_user_ip(::std::string* user_ip) {
  if (user_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_ip_;
  }
  if (user_ip) {
    set_has_user_ip();
    user_ip_ = user_ip;
  } else {
    clear_has_user_ip();
    user_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.AuthUserRequest.user_ip)
}

// optional uint64 user_id = 7;
inline bool AuthUserRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AuthUserRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AuthUserRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AuthUserRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AuthUserRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserRequest.user_id)
  return user_id_;
}
inline void AuthUserRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.AuthUserRequest.user_id)
}

// optional string token = 8;
inline bool AuthUserRequest::has_token() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AuthUserRequest::set_has_token() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AuthUserRequest::clear_has_token() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AuthUserRequest::clear_token() {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& AuthUserRequest::token() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserRequest.token)
  return *token_;
}
inline void AuthUserRequest::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.AuthUserRequest.token)
}
inline void AuthUserRequest::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.AuthUserRequest.token)
}
inline void AuthUserRequest::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.AuthUserRequest.token)
}
inline ::std::string* AuthUserRequest::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.AuthUserRequest.token)
  return token_;
}
inline ::std::string* AuthUserRequest::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuthUserRequest::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.AuthUserRequest.token)
}

// -------------------------------------------------------------------

// AuthUserResponse

// required .umsProtocol.Result result = 1;
inline bool AuthUserResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthUserResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthUserResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthUserResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& AuthUserResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* AuthUserResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.AuthUserResponse.result)
  return result_;
}
inline ::umsProtocol::Result* AuthUserResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void AuthUserResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.AuthUserResponse.result)
}

// optional uint64 user_id = 2;
inline bool AuthUserResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthUserResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthUserResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthUserResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AuthUserResponse::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserResponse.user_id)
  return user_id_;
}
inline void AuthUserResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.AuthUserResponse.user_id)
}

// optional uint64 tt_number = 3;
inline bool AuthUserResponse::has_tt_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthUserResponse::set_has_tt_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthUserResponse::clear_has_tt_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthUserResponse::clear_tt_number() {
  tt_number_ = GOOGLE_ULONGLONG(0);
  clear_has_tt_number();
}
inline ::google::protobuf::uint64 AuthUserResponse::tt_number() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserResponse.tt_number)
  return tt_number_;
}
inline void AuthUserResponse::set_tt_number(::google::protobuf::uint64 value) {
  set_has_tt_number();
  tt_number_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.AuthUserResponse.tt_number)
}

// optional string nick_name = 4;
inline bool AuthUserResponse::has_nick_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuthUserResponse::set_has_nick_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuthUserResponse::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuthUserResponse::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& AuthUserResponse::nick_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserResponse.nick_name)
  return *nick_name_;
}
inline void AuthUserResponse::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.AuthUserResponse.nick_name)
}
inline void AuthUserResponse::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.AuthUserResponse.nick_name)
}
inline void AuthUserResponse::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.AuthUserResponse.nick_name)
}
inline ::std::string* AuthUserResponse::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.AuthUserResponse.nick_name)
  return nick_name_;
}
inline ::std::string* AuthUserResponse::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuthUserResponse::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.AuthUserResponse.nick_name)
}

// optional string avatar_id = 5;
inline bool AuthUserResponse::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AuthUserResponse::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AuthUserResponse::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AuthUserResponse::clear_avatar_id() {
  if (avatar_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_id_->clear();
  }
  clear_has_avatar_id();
}
inline const ::std::string& AuthUserResponse::avatar_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserResponse.avatar_id)
  return *avatar_id_;
}
inline void AuthUserResponse::set_avatar_id(const ::std::string& value) {
  set_has_avatar_id();
  if (avatar_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_id_ = new ::std::string;
  }
  avatar_id_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.AuthUserResponse.avatar_id)
}
inline void AuthUserResponse::set_avatar_id(const char* value) {
  set_has_avatar_id();
  if (avatar_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_id_ = new ::std::string;
  }
  avatar_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.AuthUserResponse.avatar_id)
}
inline void AuthUserResponse::set_avatar_id(const char* value, size_t size) {
  set_has_avatar_id();
  if (avatar_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_id_ = new ::std::string;
  }
  avatar_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.AuthUserResponse.avatar_id)
}
inline ::std::string* AuthUserResponse::mutable_avatar_id() {
  set_has_avatar_id();
  if (avatar_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.AuthUserResponse.avatar_id)
  return avatar_id_;
}
inline ::std::string* AuthUserResponse::release_avatar_id() {
  clear_has_avatar_id();
  if (avatar_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_id_;
    avatar_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuthUserResponse::set_allocated_avatar_id(::std::string* avatar_id) {
  if (avatar_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_id_;
  }
  if (avatar_id) {
    set_has_avatar_id();
    avatar_id_ = avatar_id;
  } else {
    clear_has_avatar_id();
    avatar_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.AuthUserResponse.avatar_id)
}

// optional string avatar = 6;
inline bool AuthUserResponse::has_avatar() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AuthUserResponse::set_has_avatar() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AuthUserResponse::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AuthUserResponse::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& AuthUserResponse::avatar() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserResponse.avatar)
  return *avatar_;
}
inline void AuthUserResponse::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.AuthUserResponse.avatar)
}
inline void AuthUserResponse::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.AuthUserResponse.avatar)
}
inline void AuthUserResponse::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.AuthUserResponse.avatar)
}
inline ::std::string* AuthUserResponse::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.AuthUserResponse.avatar)
  return avatar_;
}
inline ::std::string* AuthUserResponse::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuthUserResponse::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.AuthUserResponse.avatar)
}

// optional string token = 7;
inline bool AuthUserResponse::has_token() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AuthUserResponse::set_has_token() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AuthUserResponse::clear_has_token() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AuthUserResponse::clear_token() {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& AuthUserResponse::token() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AuthUserResponse.token)
  return *token_;
}
inline void AuthUserResponse::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.AuthUserResponse.token)
}
inline void AuthUserResponse::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.AuthUserResponse.token)
}
inline void AuthUserResponse::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.AuthUserResponse.token)
}
inline ::std::string* AuthUserResponse::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.AuthUserResponse.token)
  return token_;
}
inline ::std::string* AuthUserResponse::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuthUserResponse::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.AuthUserResponse.token)
}

// -------------------------------------------------------------------

// QuitUserRequest

// required uint64 user_id = 1;
inline bool QuitUserRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuitUserRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuitUserRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuitUserRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 QuitUserRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.QuitUserRequest.user_id)
  return user_id_;
}
inline void QuitUserRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.QuitUserRequest.user_id)
}

// required uint32 terminal_type = 2;
inline bool QuitUserRequest::has_terminal_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuitUserRequest::set_has_terminal_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuitUserRequest::clear_has_terminal_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuitUserRequest::clear_terminal_type() {
  terminal_type_ = 0u;
  clear_has_terminal_type();
}
inline ::google::protobuf::uint32 QuitUserRequest::terminal_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.QuitUserRequest.terminal_type)
  return terminal_type_;
}
inline void QuitUserRequest::set_terminal_type(::google::protobuf::uint32 value) {
  set_has_terminal_type();
  terminal_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.QuitUserRequest.terminal_type)
}

// required string token = 3;
inline bool QuitUserRequest::has_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuitUserRequest::set_has_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuitUserRequest::clear_has_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuitUserRequest::clear_token() {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& QuitUserRequest::token() const {
  // @@protoc_insertion_point(field_get:umsProtocol.QuitUserRequest.token)
  return *token_;
}
inline void QuitUserRequest::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.QuitUserRequest.token)
}
inline void QuitUserRequest::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.QuitUserRequest.token)
}
inline void QuitUserRequest::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.QuitUserRequest.token)
}
inline ::std::string* QuitUserRequest::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.QuitUserRequest.token)
  return token_;
}
inline ::std::string* QuitUserRequest::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void QuitUserRequest::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.QuitUserRequest.token)
}

// -------------------------------------------------------------------

// QuitUserResponse

// required .umsProtocol.Result result = 2;
inline bool QuitUserResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuitUserResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuitUserResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuitUserResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& QuitUserResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.QuitUserResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* QuitUserResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.QuitUserResponse.result)
  return result_;
}
inline ::umsProtocol::Result* QuitUserResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void QuitUserResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.QuitUserResponse.result)
}

// optional uint64 user_id = 1;
inline bool QuitUserResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuitUserResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuitUserResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuitUserResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 QuitUserResponse::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.QuitUserResponse.user_id)
  return user_id_;
}
inline void QuitUserResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.QuitUserResponse.user_id)
}

// -------------------------------------------------------------------

// GetFriendListRequest

// required uint64 user_id = 1;
inline bool GetFriendListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFriendListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFriendListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFriendListRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetFriendListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendListRequest.user_id)
  return user_id_;
}
inline void GetFriendListRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendListRequest.user_id)
}

// optional uint64 version_id = 2;
inline bool GetFriendListRequest::has_version_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFriendListRequest::set_has_version_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFriendListRequest::clear_has_version_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFriendListRequest::clear_version_id() {
  version_id_ = GOOGLE_ULONGLONG(0);
  clear_has_version_id();
}
inline ::google::protobuf::uint64 GetFriendListRequest::version_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendListRequest.version_id)
  return version_id_;
}
inline void GetFriendListRequest::set_version_id(::google::protobuf::uint64 value) {
  set_has_version_id();
  version_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendListRequest.version_id)
}

// -------------------------------------------------------------------

// GetFriendListResponse

// required .umsProtocol.Result result = 1;
inline bool GetFriendListResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFriendListResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFriendListResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFriendListResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& GetFriendListResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendListResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* GetFriendListResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendListResponse.result)
  return result_;
}
inline ::umsProtocol::Result* GetFriendListResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetFriendListResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendListResponse.result)
}

// optional uint64 user_id = 2;
inline bool GetFriendListResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFriendListResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFriendListResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFriendListResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetFriendListResponse::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendListResponse.user_id)
  return user_id_;
}
inline void GetFriendListResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendListResponse.user_id)
}

// optional uint64 version_id = 3;
inline bool GetFriendListResponse::has_version_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetFriendListResponse::set_has_version_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetFriendListResponse::clear_has_version_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetFriendListResponse::clear_version_id() {
  version_id_ = GOOGLE_ULONGLONG(0);
  clear_has_version_id();
}
inline ::google::protobuf::uint64 GetFriendListResponse::version_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendListResponse.version_id)
  return version_id_;
}
inline void GetFriendListResponse::set_version_id(::google::protobuf::uint64 value) {
  set_has_version_id();
  version_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendListResponse.version_id)
}

// repeated uint64 friend_id = 4;
inline int GetFriendListResponse::friend_id_size() const {
  return friend_id_.size();
}
inline void GetFriendListResponse::clear_friend_id() {
  friend_id_.Clear();
}
inline ::google::protobuf::uint64 GetFriendListResponse::friend_id(int index) const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendListResponse.friend_id)
  return friend_id_.Get(index);
}
inline void GetFriendListResponse::set_friend_id(int index, ::google::protobuf::uint64 value) {
  friend_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendListResponse.friend_id)
}
inline void GetFriendListResponse::add_friend_id(::google::protobuf::uint64 value) {
  friend_id_.Add(value);
  // @@protoc_insertion_point(field_add:umsProtocol.GetFriendListResponse.friend_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetFriendListResponse::friend_id() const {
  // @@protoc_insertion_point(field_list:umsProtocol.GetFriendListResponse.friend_id)
  return friend_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetFriendListResponse::mutable_friend_id() {
  // @@protoc_insertion_point(field_mutable_list:umsProtocol.GetFriendListResponse.friend_id)
  return &friend_id_;
}

// -------------------------------------------------------------------

// GetUserInfoRequest

// required uint64 user_id = 1;
inline bool GetUserInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetUserInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoRequest.user_id)
  return user_id_;
}
inline void GetUserInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoRequest.user_id)
}

// -------------------------------------------------------------------

// GetUserInfoResponse

// optional uint64 user_id = 1;
inline bool GetUserInfoResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserInfoResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserInfoResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserInfoResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetUserInfoResponse::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.user_id)
  return user_id_;
}
inline void GetUserInfoResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.user_id)
}

// optional uint64 tt_number = 2;
inline bool GetUserInfoResponse::has_tt_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserInfoResponse::set_has_tt_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserInfoResponse::clear_has_tt_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserInfoResponse::clear_tt_number() {
  tt_number_ = GOOGLE_ULONGLONG(0);
  clear_has_tt_number();
}
inline ::google::protobuf::uint64 GetUserInfoResponse::tt_number() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.tt_number)
  return tt_number_;
}
inline void GetUserInfoResponse::set_tt_number(::google::protobuf::uint64 value) {
  set_has_tt_number();
  tt_number_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.tt_number)
}

// optional string user_name = 3;
inline bool GetUserInfoResponse::has_user_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserInfoResponse::set_has_user_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserInfoResponse::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserInfoResponse::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& GetUserInfoResponse::user_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.user_name)
  return *user_name_;
}
inline void GetUserInfoResponse::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.user_name)
}
inline void GetUserInfoResponse::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetUserInfoResponse.user_name)
}
inline void GetUserInfoResponse::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetUserInfoResponse.user_name)
}
inline ::std::string* GetUserInfoResponse::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetUserInfoResponse.user_name)
  return user_name_;
}
inline ::std::string* GetUserInfoResponse::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetUserInfoResponse.user_name)
}

// optional string nick_name = 4;
inline bool GetUserInfoResponse::has_nick_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetUserInfoResponse::set_has_nick_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetUserInfoResponse::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetUserInfoResponse::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& GetUserInfoResponse::nick_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.nick_name)
  return *nick_name_;
}
inline void GetUserInfoResponse::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.nick_name)
}
inline void GetUserInfoResponse::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetUserInfoResponse.nick_name)
}
inline void GetUserInfoResponse::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetUserInfoResponse.nick_name)
}
inline ::std::string* GetUserInfoResponse::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetUserInfoResponse.nick_name)
  return nick_name_;
}
inline ::std::string* GetUserInfoResponse::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetUserInfoResponse.nick_name)
}

// optional uint32 sex = 5;
inline bool GetUserInfoResponse::has_sex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetUserInfoResponse::set_has_sex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetUserInfoResponse::clear_has_sex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetUserInfoResponse::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 GetUserInfoResponse::sex() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.sex)
  return sex_;
}
inline void GetUserInfoResponse::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.sex)
}

// optional string mobile = 6;
inline bool GetUserInfoResponse::has_mobile() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetUserInfoResponse::set_has_mobile() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetUserInfoResponse::clear_has_mobile() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetUserInfoResponse::clear_mobile() {
  if (mobile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_->clear();
  }
  clear_has_mobile();
}
inline const ::std::string& GetUserInfoResponse::mobile() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.mobile)
  return *mobile_;
}
inline void GetUserInfoResponse::set_mobile(const ::std::string& value) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.mobile)
}
inline void GetUserInfoResponse::set_mobile(const char* value) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetUserInfoResponse.mobile)
}
inline void GetUserInfoResponse::set_mobile(const char* value, size_t size) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetUserInfoResponse.mobile)
}
inline ::std::string* GetUserInfoResponse::mutable_mobile() {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetUserInfoResponse.mobile)
  return mobile_;
}
inline ::std::string* GetUserInfoResponse::release_mobile() {
  clear_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mobile_;
    mobile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_mobile(::std::string* mobile) {
  if (mobile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mobile_;
  }
  if (mobile) {
    set_has_mobile();
    mobile_ = mobile;
  } else {
    clear_has_mobile();
    mobile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetUserInfoResponse.mobile)
}

// optional string birthday = 7;
inline bool GetUserInfoResponse::has_birthday() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetUserInfoResponse::set_has_birthday() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetUserInfoResponse::clear_has_birthday() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetUserInfoResponse::clear_birthday() {
  if (birthday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_->clear();
  }
  clear_has_birthday();
}
inline const ::std::string& GetUserInfoResponse::birthday() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.birthday)
  return *birthday_;
}
inline void GetUserInfoResponse::set_birthday(const ::std::string& value) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.birthday)
}
inline void GetUserInfoResponse::set_birthday(const char* value) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetUserInfoResponse.birthday)
}
inline void GetUserInfoResponse::set_birthday(const char* value, size_t size) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetUserInfoResponse.birthday)
}
inline ::std::string* GetUserInfoResponse::mutable_birthday() {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetUserInfoResponse.birthday)
  return birthday_;
}
inline ::std::string* GetUserInfoResponse::release_birthday() {
  clear_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = birthday_;
    birthday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_birthday(::std::string* birthday) {
  if (birthday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete birthday_;
  }
  if (birthday) {
    set_has_birthday();
    birthday_ = birthday;
  } else {
    clear_has_birthday();
    birthday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetUserInfoResponse.birthday)
}

// optional string email = 8;
inline bool GetUserInfoResponse::has_email() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetUserInfoResponse::set_has_email() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetUserInfoResponse::clear_has_email() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetUserInfoResponse::clear_email() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& GetUserInfoResponse::email() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.email)
  return *email_;
}
inline void GetUserInfoResponse::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.email)
}
inline void GetUserInfoResponse::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetUserInfoResponse.email)
}
inline void GetUserInfoResponse::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetUserInfoResponse.email)
}
inline ::std::string* GetUserInfoResponse::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetUserInfoResponse.email)
  return email_;
}
inline ::std::string* GetUserInfoResponse::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetUserInfoResponse.email)
}

// optional uint32 user_grade = 9;
inline bool GetUserInfoResponse::has_user_grade() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetUserInfoResponse::set_has_user_grade() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetUserInfoResponse::clear_has_user_grade() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetUserInfoResponse::clear_user_grade() {
  user_grade_ = 0u;
  clear_has_user_grade();
}
inline ::google::protobuf::uint32 GetUserInfoResponse::user_grade() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.user_grade)
  return user_grade_;
}
inline void GetUserInfoResponse::set_user_grade(::google::protobuf::uint32 value) {
  set_has_user_grade();
  user_grade_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.user_grade)
}

// optional uint32 age = 10;
inline bool GetUserInfoResponse::has_age() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GetUserInfoResponse::set_has_age() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GetUserInfoResponse::clear_has_age() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GetUserInfoResponse::clear_age() {
  age_ = 0u;
  clear_has_age();
}
inline ::google::protobuf::uint32 GetUserInfoResponse::age() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.age)
  return age_;
}
inline void GetUserInfoResponse::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.age)
}

// optional uint32 constellation = 11;
inline bool GetUserInfoResponse::has_constellation() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GetUserInfoResponse::set_has_constellation() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GetUserInfoResponse::clear_has_constellation() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GetUserInfoResponse::clear_constellation() {
  constellation_ = 0u;
  clear_has_constellation();
}
inline ::google::protobuf::uint32 GetUserInfoResponse::constellation() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.constellation)
  return constellation_;
}
inline void GetUserInfoResponse::set_constellation(::google::protobuf::uint32 value) {
  set_has_constellation();
  constellation_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.constellation)
}

// optional string sign = 12;
inline bool GetUserInfoResponse::has_sign() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GetUserInfoResponse::set_has_sign() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GetUserInfoResponse::clear_has_sign() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GetUserInfoResponse::clear_sign() {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_->clear();
  }
  clear_has_sign();
}
inline const ::std::string& GetUserInfoResponse::sign() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.sign)
  return *sign_;
}
inline void GetUserInfoResponse::set_sign(const ::std::string& value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.sign)
}
inline void GetUserInfoResponse::set_sign(const char* value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetUserInfoResponse.sign)
}
inline void GetUserInfoResponse::set_sign(const char* value, size_t size) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetUserInfoResponse.sign)
}
inline ::std::string* GetUserInfoResponse::mutable_sign() {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetUserInfoResponse.sign)
  return sign_;
}
inline ::std::string* GetUserInfoResponse::release_sign() {
  clear_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sign_;
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_sign(::std::string* sign) {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sign_;
  }
  if (sign) {
    set_has_sign();
    sign_ = sign;
  } else {
    clear_has_sign();
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetUserInfoResponse.sign)
}

// optional string like = 13;
inline bool GetUserInfoResponse::has_like() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GetUserInfoResponse::set_has_like() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GetUserInfoResponse::clear_has_like() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GetUserInfoResponse::clear_like() {
  if (like_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_->clear();
  }
  clear_has_like();
}
inline const ::std::string& GetUserInfoResponse::like() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.like)
  return *like_;
}
inline void GetUserInfoResponse::set_like(const ::std::string& value) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.like)
}
inline void GetUserInfoResponse::set_like(const char* value) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetUserInfoResponse.like)
}
inline void GetUserInfoResponse::set_like(const char* value, size_t size) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetUserInfoResponse.like)
}
inline ::std::string* GetUserInfoResponse::mutable_like() {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetUserInfoResponse.like)
  return like_;
}
inline ::std::string* GetUserInfoResponse::release_like() {
  clear_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = like_;
    like_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_like(::std::string* like) {
  if (like_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete like_;
  }
  if (like) {
    set_has_like();
    like_ = like;
  } else {
    clear_has_like();
    like_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetUserInfoResponse.like)
}

// optional string city = 14;
inline bool GetUserInfoResponse::has_city() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GetUserInfoResponse::set_has_city() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GetUserInfoResponse::clear_has_city() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GetUserInfoResponse::clear_city() {
  if (city_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_->clear();
  }
  clear_has_city();
}
inline const ::std::string& GetUserInfoResponse::city() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.city)
  return *city_;
}
inline void GetUserInfoResponse::set_city(const ::std::string& value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.city)
}
inline void GetUserInfoResponse::set_city(const char* value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetUserInfoResponse.city)
}
inline void GetUserInfoResponse::set_city(const char* value, size_t size) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetUserInfoResponse.city)
}
inline ::std::string* GetUserInfoResponse::mutable_city() {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetUserInfoResponse.city)
  return city_;
}
inline ::std::string* GetUserInfoResponse::release_city() {
  clear_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = city_;
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_city(::std::string* city) {
  if (city_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete city_;
  }
  if (city) {
    set_has_city();
    city_ = city;
  } else {
    clear_has_city();
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetUserInfoResponse.city)
}

// optional string personal_desc = 15;
inline bool GetUserInfoResponse::has_personal_desc() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GetUserInfoResponse::set_has_personal_desc() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GetUserInfoResponse::clear_has_personal_desc() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GetUserInfoResponse::clear_personal_desc() {
  if (personal_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_->clear();
  }
  clear_has_personal_desc();
}
inline const ::std::string& GetUserInfoResponse::personal_desc() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.personal_desc)
  return *personal_desc_;
}
inline void GetUserInfoResponse::set_personal_desc(const ::std::string& value) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.personal_desc)
}
inline void GetUserInfoResponse::set_personal_desc(const char* value) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetUserInfoResponse.personal_desc)
}
inline void GetUserInfoResponse::set_personal_desc(const char* value, size_t size) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetUserInfoResponse.personal_desc)
}
inline ::std::string* GetUserInfoResponse::mutable_personal_desc() {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetUserInfoResponse.personal_desc)
  return personal_desc_;
}
inline ::std::string* GetUserInfoResponse::release_personal_desc() {
  clear_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = personal_desc_;
    personal_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_personal_desc(::std::string* personal_desc) {
  if (personal_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete personal_desc_;
  }
  if (personal_desc) {
    set_has_personal_desc();
    personal_desc_ = personal_desc;
  } else {
    clear_has_personal_desc();
    personal_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetUserInfoResponse.personal_desc)
}

// optional string real_name = 16;
inline bool GetUserInfoResponse::has_real_name() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GetUserInfoResponse::set_has_real_name() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GetUserInfoResponse::clear_has_real_name() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GetUserInfoResponse::clear_real_name() {
  if (real_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_->clear();
  }
  clear_has_real_name();
}
inline const ::std::string& GetUserInfoResponse::real_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.real_name)
  return *real_name_;
}
inline void GetUserInfoResponse::set_real_name(const ::std::string& value) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.real_name)
}
inline void GetUserInfoResponse::set_real_name(const char* value) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetUserInfoResponse.real_name)
}
inline void GetUserInfoResponse::set_real_name(const char* value, size_t size) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetUserInfoResponse.real_name)
}
inline ::std::string* GetUserInfoResponse::mutable_real_name() {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetUserInfoResponse.real_name)
  return real_name_;
}
inline ::std::string* GetUserInfoResponse::release_real_name() {
  clear_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = real_name_;
    real_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetUserInfoResponse::set_allocated_real_name(::std::string* real_name) {
  if (real_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete real_name_;
  }
  if (real_name) {
    set_has_real_name();
    real_name_ = real_name;
  } else {
    clear_has_real_name();
    real_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetUserInfoResponse.real_name)
}

// optional uint64 friend_id = 17;
inline bool GetUserInfoResponse::has_friend_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GetUserInfoResponse::set_has_friend_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GetUserInfoResponse::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GetUserInfoResponse::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 GetUserInfoResponse::friend_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.friend_id)
  return friend_id_;
}
inline void GetUserInfoResponse::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetUserInfoResponse.friend_id)
}

// required .umsProtocol.Result result = 18;
inline bool GetUserInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GetUserInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GetUserInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GetUserInfoResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& GetUserInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetUserInfoResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* GetUserInfoResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetUserInfoResponse.result)
  return result_;
}
inline ::umsProtocol::Result* GetUserInfoResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetUserInfoResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetUserInfoResponse.result)
}

// -------------------------------------------------------------------

// GetFriendInfoRequest

// required uint64 user_id = 1;
inline bool GetFriendInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFriendInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFriendInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFriendInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetFriendInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoRequest.user_id)
  return user_id_;
}
inline void GetFriendInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoRequest.user_id)
}

// required uint64 friend_id = 2;
inline bool GetFriendInfoRequest::has_friend_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFriendInfoRequest::set_has_friend_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFriendInfoRequest::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFriendInfoRequest::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 GetFriendInfoRequest::friend_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoRequest.friend_id)
  return friend_id_;
}
inline void GetFriendInfoRequest::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoRequest.friend_id)
}

// -------------------------------------------------------------------

// GetFriendInfoResponse

// optional uint64 user_id = 1;
inline bool GetFriendInfoResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFriendInfoResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFriendInfoResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFriendInfoResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetFriendInfoResponse::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.user_id)
  return user_id_;
}
inline void GetFriendInfoResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.user_id)
}

// optional uint64 tt_number = 2;
inline bool GetFriendInfoResponse::has_tt_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFriendInfoResponse::set_has_tt_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFriendInfoResponse::clear_has_tt_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFriendInfoResponse::clear_tt_number() {
  tt_number_ = GOOGLE_ULONGLONG(0);
  clear_has_tt_number();
}
inline ::google::protobuf::uint64 GetFriendInfoResponse::tt_number() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.tt_number)
  return tt_number_;
}
inline void GetFriendInfoResponse::set_tt_number(::google::protobuf::uint64 value) {
  set_has_tt_number();
  tt_number_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.tt_number)
}

// optional string user_name = 3;
inline bool GetFriendInfoResponse::has_user_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetFriendInfoResponse::set_has_user_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetFriendInfoResponse::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetFriendInfoResponse::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& GetFriendInfoResponse::user_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.user_name)
  return *user_name_;
}
inline void GetFriendInfoResponse::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.user_name)
}
inline void GetFriendInfoResponse::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetFriendInfoResponse.user_name)
}
inline void GetFriendInfoResponse::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetFriendInfoResponse.user_name)
}
inline ::std::string* GetFriendInfoResponse::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendInfoResponse.user_name)
  return user_name_;
}
inline ::std::string* GetFriendInfoResponse::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetFriendInfoResponse::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendInfoResponse.user_name)
}

// optional string nick_name = 4;
inline bool GetFriendInfoResponse::has_nick_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetFriendInfoResponse::set_has_nick_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetFriendInfoResponse::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetFriendInfoResponse::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& GetFriendInfoResponse::nick_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.nick_name)
  return *nick_name_;
}
inline void GetFriendInfoResponse::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.nick_name)
}
inline void GetFriendInfoResponse::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetFriendInfoResponse.nick_name)
}
inline void GetFriendInfoResponse::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetFriendInfoResponse.nick_name)
}
inline ::std::string* GetFriendInfoResponse::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendInfoResponse.nick_name)
  return nick_name_;
}
inline ::std::string* GetFriendInfoResponse::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetFriendInfoResponse::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendInfoResponse.nick_name)
}

// optional uint32 sex = 5;
inline bool GetFriendInfoResponse::has_sex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetFriendInfoResponse::set_has_sex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetFriendInfoResponse::clear_has_sex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetFriendInfoResponse::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 GetFriendInfoResponse::sex() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.sex)
  return sex_;
}
inline void GetFriendInfoResponse::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.sex)
}

// optional string mobile = 6;
inline bool GetFriendInfoResponse::has_mobile() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetFriendInfoResponse::set_has_mobile() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetFriendInfoResponse::clear_has_mobile() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetFriendInfoResponse::clear_mobile() {
  if (mobile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_->clear();
  }
  clear_has_mobile();
}
inline const ::std::string& GetFriendInfoResponse::mobile() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.mobile)
  return *mobile_;
}
inline void GetFriendInfoResponse::set_mobile(const ::std::string& value) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.mobile)
}
inline void GetFriendInfoResponse::set_mobile(const char* value) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetFriendInfoResponse.mobile)
}
inline void GetFriendInfoResponse::set_mobile(const char* value, size_t size) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetFriendInfoResponse.mobile)
}
inline ::std::string* GetFriendInfoResponse::mutable_mobile() {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendInfoResponse.mobile)
  return mobile_;
}
inline ::std::string* GetFriendInfoResponse::release_mobile() {
  clear_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mobile_;
    mobile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetFriendInfoResponse::set_allocated_mobile(::std::string* mobile) {
  if (mobile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mobile_;
  }
  if (mobile) {
    set_has_mobile();
    mobile_ = mobile;
  } else {
    clear_has_mobile();
    mobile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendInfoResponse.mobile)
}

// optional string birthday = 7;
inline bool GetFriendInfoResponse::has_birthday() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetFriendInfoResponse::set_has_birthday() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetFriendInfoResponse::clear_has_birthday() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetFriendInfoResponse::clear_birthday() {
  if (birthday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_->clear();
  }
  clear_has_birthday();
}
inline const ::std::string& GetFriendInfoResponse::birthday() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.birthday)
  return *birthday_;
}
inline void GetFriendInfoResponse::set_birthday(const ::std::string& value) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.birthday)
}
inline void GetFriendInfoResponse::set_birthday(const char* value) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetFriendInfoResponse.birthday)
}
inline void GetFriendInfoResponse::set_birthday(const char* value, size_t size) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetFriendInfoResponse.birthday)
}
inline ::std::string* GetFriendInfoResponse::mutable_birthday() {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendInfoResponse.birthday)
  return birthday_;
}
inline ::std::string* GetFriendInfoResponse::release_birthday() {
  clear_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = birthday_;
    birthday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetFriendInfoResponse::set_allocated_birthday(::std::string* birthday) {
  if (birthday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete birthday_;
  }
  if (birthday) {
    set_has_birthday();
    birthday_ = birthday;
  } else {
    clear_has_birthday();
    birthday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendInfoResponse.birthday)
}

// optional string email = 8;
inline bool GetFriendInfoResponse::has_email() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetFriendInfoResponse::set_has_email() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetFriendInfoResponse::clear_has_email() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetFriendInfoResponse::clear_email() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& GetFriendInfoResponse::email() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.email)
  return *email_;
}
inline void GetFriendInfoResponse::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.email)
}
inline void GetFriendInfoResponse::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetFriendInfoResponse.email)
}
inline void GetFriendInfoResponse::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetFriendInfoResponse.email)
}
inline ::std::string* GetFriendInfoResponse::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendInfoResponse.email)
  return email_;
}
inline ::std::string* GetFriendInfoResponse::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetFriendInfoResponse::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendInfoResponse.email)
}

// optional uint32 user_grade = 9;
inline bool GetFriendInfoResponse::has_user_grade() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetFriendInfoResponse::set_has_user_grade() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetFriendInfoResponse::clear_has_user_grade() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetFriendInfoResponse::clear_user_grade() {
  user_grade_ = 0u;
  clear_has_user_grade();
}
inline ::google::protobuf::uint32 GetFriendInfoResponse::user_grade() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.user_grade)
  return user_grade_;
}
inline void GetFriendInfoResponse::set_user_grade(::google::protobuf::uint32 value) {
  set_has_user_grade();
  user_grade_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.user_grade)
}

// optional uint32 age = 10;
inline bool GetFriendInfoResponse::has_age() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GetFriendInfoResponse::set_has_age() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GetFriendInfoResponse::clear_has_age() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GetFriendInfoResponse::clear_age() {
  age_ = 0u;
  clear_has_age();
}
inline ::google::protobuf::uint32 GetFriendInfoResponse::age() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.age)
  return age_;
}
inline void GetFriendInfoResponse::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.age)
}

// optional uint32 constellation = 11;
inline bool GetFriendInfoResponse::has_constellation() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GetFriendInfoResponse::set_has_constellation() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GetFriendInfoResponse::clear_has_constellation() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GetFriendInfoResponse::clear_constellation() {
  constellation_ = 0u;
  clear_has_constellation();
}
inline ::google::protobuf::uint32 GetFriendInfoResponse::constellation() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.constellation)
  return constellation_;
}
inline void GetFriendInfoResponse::set_constellation(::google::protobuf::uint32 value) {
  set_has_constellation();
  constellation_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.constellation)
}

// optional string sign = 12;
inline bool GetFriendInfoResponse::has_sign() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GetFriendInfoResponse::set_has_sign() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GetFriendInfoResponse::clear_has_sign() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GetFriendInfoResponse::clear_sign() {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_->clear();
  }
  clear_has_sign();
}
inline const ::std::string& GetFriendInfoResponse::sign() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.sign)
  return *sign_;
}
inline void GetFriendInfoResponse::set_sign(const ::std::string& value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.sign)
}
inline void GetFriendInfoResponse::set_sign(const char* value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetFriendInfoResponse.sign)
}
inline void GetFriendInfoResponse::set_sign(const char* value, size_t size) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetFriendInfoResponse.sign)
}
inline ::std::string* GetFriendInfoResponse::mutable_sign() {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendInfoResponse.sign)
  return sign_;
}
inline ::std::string* GetFriendInfoResponse::release_sign() {
  clear_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sign_;
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetFriendInfoResponse::set_allocated_sign(::std::string* sign) {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sign_;
  }
  if (sign) {
    set_has_sign();
    sign_ = sign;
  } else {
    clear_has_sign();
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendInfoResponse.sign)
}

// optional string like = 13;
inline bool GetFriendInfoResponse::has_like() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GetFriendInfoResponse::set_has_like() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GetFriendInfoResponse::clear_has_like() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GetFriendInfoResponse::clear_like() {
  if (like_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_->clear();
  }
  clear_has_like();
}
inline const ::std::string& GetFriendInfoResponse::like() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.like)
  return *like_;
}
inline void GetFriendInfoResponse::set_like(const ::std::string& value) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.like)
}
inline void GetFriendInfoResponse::set_like(const char* value) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetFriendInfoResponse.like)
}
inline void GetFriendInfoResponse::set_like(const char* value, size_t size) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetFriendInfoResponse.like)
}
inline ::std::string* GetFriendInfoResponse::mutable_like() {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendInfoResponse.like)
  return like_;
}
inline ::std::string* GetFriendInfoResponse::release_like() {
  clear_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = like_;
    like_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetFriendInfoResponse::set_allocated_like(::std::string* like) {
  if (like_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete like_;
  }
  if (like) {
    set_has_like();
    like_ = like;
  } else {
    clear_has_like();
    like_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendInfoResponse.like)
}

// optional string city = 14;
inline bool GetFriendInfoResponse::has_city() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GetFriendInfoResponse::set_has_city() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GetFriendInfoResponse::clear_has_city() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GetFriendInfoResponse::clear_city() {
  if (city_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_->clear();
  }
  clear_has_city();
}
inline const ::std::string& GetFriendInfoResponse::city() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.city)
  return *city_;
}
inline void GetFriendInfoResponse::set_city(const ::std::string& value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.city)
}
inline void GetFriendInfoResponse::set_city(const char* value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetFriendInfoResponse.city)
}
inline void GetFriendInfoResponse::set_city(const char* value, size_t size) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetFriendInfoResponse.city)
}
inline ::std::string* GetFriendInfoResponse::mutable_city() {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendInfoResponse.city)
  return city_;
}
inline ::std::string* GetFriendInfoResponse::release_city() {
  clear_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = city_;
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetFriendInfoResponse::set_allocated_city(::std::string* city) {
  if (city_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete city_;
  }
  if (city) {
    set_has_city();
    city_ = city;
  } else {
    clear_has_city();
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendInfoResponse.city)
}

// optional string personal_desc = 15;
inline bool GetFriendInfoResponse::has_personal_desc() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GetFriendInfoResponse::set_has_personal_desc() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GetFriendInfoResponse::clear_has_personal_desc() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GetFriendInfoResponse::clear_personal_desc() {
  if (personal_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_->clear();
  }
  clear_has_personal_desc();
}
inline const ::std::string& GetFriendInfoResponse::personal_desc() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.personal_desc)
  return *personal_desc_;
}
inline void GetFriendInfoResponse::set_personal_desc(const ::std::string& value) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.personal_desc)
}
inline void GetFriendInfoResponse::set_personal_desc(const char* value) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetFriendInfoResponse.personal_desc)
}
inline void GetFriendInfoResponse::set_personal_desc(const char* value, size_t size) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetFriendInfoResponse.personal_desc)
}
inline ::std::string* GetFriendInfoResponse::mutable_personal_desc() {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendInfoResponse.personal_desc)
  return personal_desc_;
}
inline ::std::string* GetFriendInfoResponse::release_personal_desc() {
  clear_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = personal_desc_;
    personal_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetFriendInfoResponse::set_allocated_personal_desc(::std::string* personal_desc) {
  if (personal_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete personal_desc_;
  }
  if (personal_desc) {
    set_has_personal_desc();
    personal_desc_ = personal_desc;
  } else {
    clear_has_personal_desc();
    personal_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendInfoResponse.personal_desc)
}

// optional string real_name = 16;
inline bool GetFriendInfoResponse::has_real_name() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GetFriendInfoResponse::set_has_real_name() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GetFriendInfoResponse::clear_has_real_name() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GetFriendInfoResponse::clear_real_name() {
  if (real_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_->clear();
  }
  clear_has_real_name();
}
inline const ::std::string& GetFriendInfoResponse::real_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.real_name)
  return *real_name_;
}
inline void GetFriendInfoResponse::set_real_name(const ::std::string& value) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.real_name)
}
inline void GetFriendInfoResponse::set_real_name(const char* value) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetFriendInfoResponse.real_name)
}
inline void GetFriendInfoResponse::set_real_name(const char* value, size_t size) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetFriendInfoResponse.real_name)
}
inline ::std::string* GetFriendInfoResponse::mutable_real_name() {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendInfoResponse.real_name)
  return real_name_;
}
inline ::std::string* GetFriendInfoResponse::release_real_name() {
  clear_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = real_name_;
    real_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetFriendInfoResponse::set_allocated_real_name(::std::string* real_name) {
  if (real_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete real_name_;
  }
  if (real_name) {
    set_has_real_name();
    real_name_ = real_name;
  } else {
    clear_has_real_name();
    real_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendInfoResponse.real_name)
}

// optional uint64 friend_id = 17;
inline bool GetFriendInfoResponse::has_friend_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GetFriendInfoResponse::set_has_friend_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GetFriendInfoResponse::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GetFriendInfoResponse::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 GetFriendInfoResponse::friend_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.friend_id)
  return friend_id_;
}
inline void GetFriendInfoResponse::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendInfoResponse.friend_id)
}

// required .umsProtocol.Result result = 18;
inline bool GetFriendInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GetFriendInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GetFriendInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GetFriendInfoResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& GetFriendInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendInfoResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* GetFriendInfoResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendInfoResponse.result)
  return result_;
}
inline ::umsProtocol::Result* GetFriendInfoResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetFriendInfoResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendInfoResponse.result)
}

// -------------------------------------------------------------------

// GetGroupListRequest

// required uint64 user_id = 1;
inline bool GetGroupListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupListRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupListRequest.user_id)
  return user_id_;
}
inline void GetGroupListRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupListRequest.user_id)
}

// -------------------------------------------------------------------

// GroupListItem

// required uint64 group_id = 1;
inline bool GroupListItem::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupListItem::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupListItem::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupListItem::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GroupListItem::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GroupListItem.group_id)
  return group_id_;
}
inline void GroupListItem::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GroupListItem.group_id)
}

// optional string group_name = 2;
inline bool GroupListItem::has_group_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupListItem::set_has_group_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupListItem::clear_has_group_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupListItem::clear_group_name() {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_->clear();
  }
  clear_has_group_name();
}
inline const ::std::string& GroupListItem::group_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GroupListItem.group_name)
  return *group_name_;
}
inline void GroupListItem::set_group_name(const ::std::string& value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GroupListItem.group_name)
}
inline void GroupListItem::set_group_name(const char* value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GroupListItem.group_name)
}
inline void GroupListItem::set_group_name(const char* value, size_t size) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GroupListItem.group_name)
}
inline ::std::string* GroupListItem::mutable_group_name() {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GroupListItem.group_name)
  return group_name_;
}
inline ::std::string* GroupListItem::release_group_name() {
  clear_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_name_;
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupListItem::set_allocated_group_name(::std::string* group_name) {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_name_;
  }
  if (group_name) {
    set_has_group_name();
    group_name_ = group_name;
  } else {
    clear_has_group_name();
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GroupListItem.group_name)
}

// optional string remark = 3;
inline bool GroupListItem::has_remark() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupListItem::set_has_remark() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupListItem::clear_has_remark() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupListItem::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& GroupListItem::remark() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GroupListItem.remark)
  return *remark_;
}
inline void GroupListItem::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GroupListItem.remark)
}
inline void GroupListItem::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GroupListItem.remark)
}
inline void GroupListItem::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GroupListItem.remark)
}
inline ::std::string* GroupListItem::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GroupListItem.remark)
  return remark_;
}
inline ::std::string* GroupListItem::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupListItem::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GroupListItem.remark)
}

// optional uint32 avatar_id = 4;
inline bool GroupListItem::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupListItem::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupListItem::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupListItem::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 GroupListItem::avatar_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GroupListItem.avatar_id)
  return avatar_id_;
}
inline void GroupListItem::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GroupListItem.avatar_id)
}

// optional string avatar = 5;
inline bool GroupListItem::has_avatar() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupListItem::set_has_avatar() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupListItem::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupListItem::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& GroupListItem::avatar() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GroupListItem.avatar)
  return *avatar_;
}
inline void GroupListItem::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GroupListItem.avatar)
}
inline void GroupListItem::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GroupListItem.avatar)
}
inline void GroupListItem::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GroupListItem.avatar)
}
inline ::std::string* GroupListItem::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GroupListItem.avatar)
  return avatar_;
}
inline ::std::string* GroupListItem::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupListItem::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GroupListItem.avatar)
}

// -------------------------------------------------------------------

// GetGroupListResponse

// optional uint64 user_id = 1;
inline bool GetGroupListResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupListResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupListResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupListResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupListResponse::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupListResponse.user_id)
  return user_id_;
}
inline void GetGroupListResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupListResponse.user_id)
}

// repeated .umsProtocol.GroupListItem group_item = 2;
inline int GetGroupListResponse::group_item_size() const {
  return group_item_.size();
}
inline void GetGroupListResponse::clear_group_item() {
  group_item_.Clear();
}
inline const ::umsProtocol::GroupListItem& GetGroupListResponse::group_item(int index) const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupListResponse.group_item)
  return group_item_.Get(index);
}
inline ::umsProtocol::GroupListItem* GetGroupListResponse::mutable_group_item(int index) {
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupListResponse.group_item)
  return group_item_.Mutable(index);
}
inline ::umsProtocol::GroupListItem* GetGroupListResponse::add_group_item() {
  // @@protoc_insertion_point(field_add:umsProtocol.GetGroupListResponse.group_item)
  return group_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupListItem >&
GetGroupListResponse::group_item() const {
  // @@protoc_insertion_point(field_list:umsProtocol.GetGroupListResponse.group_item)
  return group_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupListItem >*
GetGroupListResponse::mutable_group_item() {
  // @@protoc_insertion_point(field_mutable_list:umsProtocol.GetGroupListResponse.group_item)
  return &group_item_;
}

// required .umsProtocol.Result result = 3;
inline bool GetGroupListResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetGroupListResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetGroupListResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetGroupListResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& GetGroupListResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupListResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* GetGroupListResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupListResponse.result)
  return result_;
}
inline ::umsProtocol::Result* GetGroupListResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetGroupListResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupListResponse.result)
}

// -------------------------------------------------------------------

// CreateGroupRequest

// required uint64 user_id = 1;
inline bool CreateGroupRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateGroupRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateGroupRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateGroupRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 CreateGroupRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.CreateGroupRequest.user_id)
  return user_id_;
}
inline void CreateGroupRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.CreateGroupRequest.user_id)
}

// required string group_name = 2;
inline bool CreateGroupRequest::has_group_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateGroupRequest::set_has_group_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateGroupRequest::clear_has_group_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateGroupRequest::clear_group_name() {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_->clear();
  }
  clear_has_group_name();
}
inline const ::std::string& CreateGroupRequest::group_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.CreateGroupRequest.group_name)
  return *group_name_;
}
inline void CreateGroupRequest::set_group_name(const ::std::string& value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.CreateGroupRequest.group_name)
}
inline void CreateGroupRequest::set_group_name(const char* value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.CreateGroupRequest.group_name)
}
inline void CreateGroupRequest::set_group_name(const char* value, size_t size) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.CreateGroupRequest.group_name)
}
inline ::std::string* CreateGroupRequest::mutable_group_name() {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.CreateGroupRequest.group_name)
  return group_name_;
}
inline ::std::string* CreateGroupRequest::release_group_name() {
  clear_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_name_;
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateGroupRequest::set_allocated_group_name(::std::string* group_name) {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_name_;
  }
  if (group_name) {
    set_has_group_name();
    group_name_ = group_name;
  } else {
    clear_has_group_name();
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.CreateGroupRequest.group_name)
}

// optional uint32 group_type = 3;
inline bool CreateGroupRequest::has_group_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateGroupRequest::set_has_group_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateGroupRequest::clear_has_group_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateGroupRequest::clear_group_type() {
  group_type_ = 0u;
  clear_has_group_type();
}
inline ::google::protobuf::uint32 CreateGroupRequest::group_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.CreateGroupRequest.group_type)
  return group_type_;
}
inline void CreateGroupRequest::set_group_type(::google::protobuf::uint32 value) {
  set_has_group_type();
  group_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.CreateGroupRequest.group_type)
}

// optional string group_icon = 4;
inline bool CreateGroupRequest::has_group_icon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateGroupRequest::set_has_group_icon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateGroupRequest::clear_has_group_icon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateGroupRequest::clear_group_icon() {
  if (group_icon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_icon_->clear();
  }
  clear_has_group_icon();
}
inline const ::std::string& CreateGroupRequest::group_icon() const {
  // @@protoc_insertion_point(field_get:umsProtocol.CreateGroupRequest.group_icon)
  return *group_icon_;
}
inline void CreateGroupRequest::set_group_icon(const ::std::string& value) {
  set_has_group_icon();
  if (group_icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_icon_ = new ::std::string;
  }
  group_icon_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.CreateGroupRequest.group_icon)
}
inline void CreateGroupRequest::set_group_icon(const char* value) {
  set_has_group_icon();
  if (group_icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_icon_ = new ::std::string;
  }
  group_icon_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.CreateGroupRequest.group_icon)
}
inline void CreateGroupRequest::set_group_icon(const char* value, size_t size) {
  set_has_group_icon();
  if (group_icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_icon_ = new ::std::string;
  }
  group_icon_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.CreateGroupRequest.group_icon)
}
inline ::std::string* CreateGroupRequest::mutable_group_icon() {
  set_has_group_icon();
  if (group_icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_icon_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.CreateGroupRequest.group_icon)
  return group_icon_;
}
inline ::std::string* CreateGroupRequest::release_group_icon() {
  clear_has_group_icon();
  if (group_icon_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_icon_;
    group_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateGroupRequest::set_allocated_group_icon(::std::string* group_icon) {
  if (group_icon_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_icon_;
  }
  if (group_icon) {
    set_has_group_icon();
    group_icon_ = group_icon;
  } else {
    clear_has_group_icon();
    group_icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.CreateGroupRequest.group_icon)
}

// optional uint32 verify_type = 5;
inline bool CreateGroupRequest::has_verify_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateGroupRequest::set_has_verify_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateGroupRequest::clear_has_verify_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateGroupRequest::clear_verify_type() {
  verify_type_ = 0u;
  clear_has_verify_type();
}
inline ::google::protobuf::uint32 CreateGroupRequest::verify_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.CreateGroupRequest.verify_type)
  return verify_type_;
}
inline void CreateGroupRequest::set_verify_type(::google::protobuf::uint32 value) {
  set_has_verify_type();
  verify_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.CreateGroupRequest.verify_type)
}

// optional string group_intro = 6;
inline bool CreateGroupRequest::has_group_intro() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateGroupRequest::set_has_group_intro() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateGroupRequest::clear_has_group_intro() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateGroupRequest::clear_group_intro() {
  if (group_intro_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_->clear();
  }
  clear_has_group_intro();
}
inline const ::std::string& CreateGroupRequest::group_intro() const {
  // @@protoc_insertion_point(field_get:umsProtocol.CreateGroupRequest.group_intro)
  return *group_intro_;
}
inline void CreateGroupRequest::set_group_intro(const ::std::string& value) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.CreateGroupRequest.group_intro)
}
inline void CreateGroupRequest::set_group_intro(const char* value) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.CreateGroupRequest.group_intro)
}
inline void CreateGroupRequest::set_group_intro(const char* value, size_t size) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.CreateGroupRequest.group_intro)
}
inline ::std::string* CreateGroupRequest::mutable_group_intro() {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.CreateGroupRequest.group_intro)
  return group_intro_;
}
inline ::std::string* CreateGroupRequest::release_group_intro() {
  clear_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_intro_;
    group_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateGroupRequest::set_allocated_group_intro(::std::string* group_intro) {
  if (group_intro_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_intro_;
  }
  if (group_intro) {
    set_has_group_intro();
    group_intro_ = group_intro;
  } else {
    clear_has_group_intro();
    group_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.CreateGroupRequest.group_intro)
}

// optional string group_sign = 7;
inline bool CreateGroupRequest::has_group_sign() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateGroupRequest::set_has_group_sign() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateGroupRequest::clear_has_group_sign() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateGroupRequest::clear_group_sign() {
  if (group_sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_sign_->clear();
  }
  clear_has_group_sign();
}
inline const ::std::string& CreateGroupRequest::group_sign() const {
  // @@protoc_insertion_point(field_get:umsProtocol.CreateGroupRequest.group_sign)
  return *group_sign_;
}
inline void CreateGroupRequest::set_group_sign(const ::std::string& value) {
  set_has_group_sign();
  if (group_sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_sign_ = new ::std::string;
  }
  group_sign_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.CreateGroupRequest.group_sign)
}
inline void CreateGroupRequest::set_group_sign(const char* value) {
  set_has_group_sign();
  if (group_sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_sign_ = new ::std::string;
  }
  group_sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.CreateGroupRequest.group_sign)
}
inline void CreateGroupRequest::set_group_sign(const char* value, size_t size) {
  set_has_group_sign();
  if (group_sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_sign_ = new ::std::string;
  }
  group_sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.CreateGroupRequest.group_sign)
}
inline ::std::string* CreateGroupRequest::mutable_group_sign() {
  set_has_group_sign();
  if (group_sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.CreateGroupRequest.group_sign)
  return group_sign_;
}
inline ::std::string* CreateGroupRequest::release_group_sign() {
  clear_has_group_sign();
  if (group_sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_sign_;
    group_sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateGroupRequest::set_allocated_group_sign(::std::string* group_sign) {
  if (group_sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_sign_;
  }
  if (group_sign) {
    set_has_group_sign();
    group_sign_ = group_sign;
  } else {
    clear_has_group_sign();
    group_sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.CreateGroupRequest.group_sign)
}

// optional uint32 sub_type = 8;
inline bool CreateGroupRequest::has_sub_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreateGroupRequest::set_has_sub_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreateGroupRequest::clear_has_sub_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreateGroupRequest::clear_sub_type() {
  sub_type_ = 0u;
  clear_has_sub_type();
}
inline ::google::protobuf::uint32 CreateGroupRequest::sub_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.CreateGroupRequest.sub_type)
  return sub_type_;
}
inline void CreateGroupRequest::set_sub_type(::google::protobuf::uint32 value) {
  set_has_sub_type();
  sub_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.CreateGroupRequest.sub_type)
}

// optional uint32 avatar_id = 9;
inline bool CreateGroupRequest::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CreateGroupRequest::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CreateGroupRequest::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CreateGroupRequest::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 CreateGroupRequest::avatar_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.CreateGroupRequest.avatar_id)
  return avatar_id_;
}
inline void CreateGroupRequest::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.CreateGroupRequest.avatar_id)
}

// -------------------------------------------------------------------

// CreateGroupResponse

// required .umsProtocol.Result result = 1;
inline bool CreateGroupResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateGroupResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateGroupResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateGroupResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& CreateGroupResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.CreateGroupResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* CreateGroupResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.CreateGroupResponse.result)
  return result_;
}
inline ::umsProtocol::Result* CreateGroupResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void CreateGroupResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.CreateGroupResponse.result)
}

// optional uint64 user_id = 2;
inline bool CreateGroupResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateGroupResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateGroupResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateGroupResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 CreateGroupResponse::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.CreateGroupResponse.user_id)
  return user_id_;
}
inline void CreateGroupResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.CreateGroupResponse.user_id)
}

// optional uint64 group_id = 3;
inline bool CreateGroupResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateGroupResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateGroupResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateGroupResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 CreateGroupResponse::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.CreateGroupResponse.group_id)
  return group_id_;
}
inline void CreateGroupResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.CreateGroupResponse.group_id)
}

// optional uint32 gorup_number = 4;
inline bool CreateGroupResponse::has_gorup_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateGroupResponse::set_has_gorup_number() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateGroupResponse::clear_has_gorup_number() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateGroupResponse::clear_gorup_number() {
  gorup_number_ = 0u;
  clear_has_gorup_number();
}
inline ::google::protobuf::uint32 CreateGroupResponse::gorup_number() const {
  // @@protoc_insertion_point(field_get:umsProtocol.CreateGroupResponse.gorup_number)
  return gorup_number_;
}
inline void CreateGroupResponse::set_gorup_number(::google::protobuf::uint32 value) {
  set_has_gorup_number();
  gorup_number_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.CreateGroupResponse.gorup_number)
}

// -------------------------------------------------------------------

// JoinGroupRequest

// required uint64 user_id = 1;
inline bool JoinGroupRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinGroupRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinGroupRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinGroupRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 JoinGroupRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.JoinGroupRequest.user_id)
  return user_id_;
}
inline void JoinGroupRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.JoinGroupRequest.user_id)
}

// required uint64 group_id = 2;
inline bool JoinGroupRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinGroupRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinGroupRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinGroupRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 JoinGroupRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.JoinGroupRequest.group_id)
  return group_id_;
}
inline void JoinGroupRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.JoinGroupRequest.group_id)
}

// -------------------------------------------------------------------

// JoinGroupResponse

// optional uint64 user_id = 1;
inline bool JoinGroupResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinGroupResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinGroupResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinGroupResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 JoinGroupResponse::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.JoinGroupResponse.user_id)
  return user_id_;
}
inline void JoinGroupResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.JoinGroupResponse.user_id)
}

// optional uint64 group_id = 2;
inline bool JoinGroupResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinGroupResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinGroupResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinGroupResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 JoinGroupResponse::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.JoinGroupResponse.group_id)
  return group_id_;
}
inline void JoinGroupResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.JoinGroupResponse.group_id)
}

// required .umsProtocol.Result result = 4;
inline bool JoinGroupResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinGroupResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinGroupResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinGroupResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& JoinGroupResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.JoinGroupResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* JoinGroupResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.JoinGroupResponse.result)
  return result_;
}
inline ::umsProtocol::Result* JoinGroupResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void JoinGroupResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.JoinGroupResponse.result)
}

// -------------------------------------------------------------------

// ExitGroupRequest

// required uint64 user_id = 1;
inline bool ExitGroupRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitGroupRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitGroupRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitGroupRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 ExitGroupRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.ExitGroupRequest.user_id)
  return user_id_;
}
inline void ExitGroupRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.ExitGroupRequest.user_id)
}

// required uint64 group_id = 2;
inline bool ExitGroupRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExitGroupRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExitGroupRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExitGroupRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 ExitGroupRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.ExitGroupRequest.group_id)
  return group_id_;
}
inline void ExitGroupRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.ExitGroupRequest.group_id)
}

// -------------------------------------------------------------------

// ExitGroupResponse

// required .umsProtocol.Result result = 1;
inline bool ExitGroupResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitGroupResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitGroupResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitGroupResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& ExitGroupResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.ExitGroupResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* ExitGroupResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.ExitGroupResponse.result)
  return result_;
}
inline ::umsProtocol::Result* ExitGroupResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void ExitGroupResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.ExitGroupResponse.result)
}

// -------------------------------------------------------------------

// GetGroupUserListRequest

// required uint64 user_id = 1;
inline bool GetGroupUserListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupUserListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupUserListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupUserListRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupUserListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserListRequest.user_id)
  return user_id_;
}
inline void GetGroupUserListRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserListRequest.user_id)
}

// required uint64 group_id = 2;
inline bool GetGroupUserListRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupUserListRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupUserListRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupUserListRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupUserListRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserListRequest.group_id)
  return group_id_;
}
inline void GetGroupUserListRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserListRequest.group_id)
}

// -------------------------------------------------------------------

// GetGroupUserListResponse

// optional uint64 group_id = 1;
inline bool GetGroupUserListResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupUserListResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupUserListResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupUserListResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupUserListResponse::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserListResponse.group_id)
  return group_id_;
}
inline void GetGroupUserListResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserListResponse.group_id)
}

// optional uint32 sum_num = 2;
inline bool GetGroupUserListResponse::has_sum_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupUserListResponse::set_has_sum_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupUserListResponse::clear_has_sum_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupUserListResponse::clear_sum_num() {
  sum_num_ = 0u;
  clear_has_sum_num();
}
inline ::google::protobuf::uint32 GetGroupUserListResponse::sum_num() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserListResponse.sum_num)
  return sum_num_;
}
inline void GetGroupUserListResponse::set_sum_num(::google::protobuf::uint32 value) {
  set_has_sum_num();
  sum_num_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserListResponse.sum_num)
}

// repeated uint64 group_user_id = 3;
inline int GetGroupUserListResponse::group_user_id_size() const {
  return group_user_id_.size();
}
inline void GetGroupUserListResponse::clear_group_user_id() {
  group_user_id_.Clear();
}
inline ::google::protobuf::uint64 GetGroupUserListResponse::group_user_id(int index) const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserListResponse.group_user_id)
  return group_user_id_.Get(index);
}
inline void GetGroupUserListResponse::set_group_user_id(int index, ::google::protobuf::uint64 value) {
  group_user_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserListResponse.group_user_id)
}
inline void GetGroupUserListResponse::add_group_user_id(::google::protobuf::uint64 value) {
  group_user_id_.Add(value);
  // @@protoc_insertion_point(field_add:umsProtocol.GetGroupUserListResponse.group_user_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetGroupUserListResponse::group_user_id() const {
  // @@protoc_insertion_point(field_list:umsProtocol.GetGroupUserListResponse.group_user_id)
  return group_user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetGroupUserListResponse::mutable_group_user_id() {
  // @@protoc_insertion_point(field_mutable_list:umsProtocol.GetGroupUserListResponse.group_user_id)
  return &group_user_id_;
}

// required .umsProtocol.Result result = 4;
inline bool GetGroupUserListResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetGroupUserListResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetGroupUserListResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetGroupUserListResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& GetGroupUserListResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserListResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* GetGroupUserListResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupUserListResponse.result)
  return result_;
}
inline ::umsProtocol::Result* GetGroupUserListResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetGroupUserListResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupUserListResponse.result)
}

// -------------------------------------------------------------------

// SearchGroupUserListRequest

// required uint64 group_id = 1;
inline bool SearchGroupUserListRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchGroupUserListRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchGroupUserListRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchGroupUserListRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 SearchGroupUserListRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SearchGroupUserListRequest.group_id)
  return group_id_;
}
inline void SearchGroupUserListRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SearchGroupUserListRequest.group_id)
}

// required string search_string = 2;
inline bool SearchGroupUserListRequest::has_search_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SearchGroupUserListRequest::set_has_search_string() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SearchGroupUserListRequest::clear_has_search_string() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SearchGroupUserListRequest::clear_search_string() {
  if (search_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_string_->clear();
  }
  clear_has_search_string();
}
inline const ::std::string& SearchGroupUserListRequest::search_string() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SearchGroupUserListRequest.search_string)
  return *search_string_;
}
inline void SearchGroupUserListRequest::set_search_string(const ::std::string& value) {
  set_has_search_string();
  if (search_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_string_ = new ::std::string;
  }
  search_string_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.SearchGroupUserListRequest.search_string)
}
inline void SearchGroupUserListRequest::set_search_string(const char* value) {
  set_has_search_string();
  if (search_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_string_ = new ::std::string;
  }
  search_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.SearchGroupUserListRequest.search_string)
}
inline void SearchGroupUserListRequest::set_search_string(const char* value, size_t size) {
  set_has_search_string();
  if (search_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_string_ = new ::std::string;
  }
  search_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.SearchGroupUserListRequest.search_string)
}
inline ::std::string* SearchGroupUserListRequest::mutable_search_string() {
  set_has_search_string();
  if (search_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.SearchGroupUserListRequest.search_string)
  return search_string_;
}
inline ::std::string* SearchGroupUserListRequest::release_search_string() {
  clear_has_search_string();
  if (search_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = search_string_;
    search_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SearchGroupUserListRequest::set_allocated_search_string(::std::string* search_string) {
  if (search_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete search_string_;
  }
  if (search_string) {
    set_has_search_string();
    search_string_ = search_string;
  } else {
    clear_has_search_string();
    search_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.SearchGroupUserListRequest.search_string)
}

// -------------------------------------------------------------------

// GroupUserListItem

// required uint64 user_id = 1;
inline bool GroupUserListItem::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupUserListItem::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupUserListItem::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupUserListItem::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GroupUserListItem::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GroupUserListItem.user_id)
  return user_id_;
}
inline void GroupUserListItem::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GroupUserListItem.user_id)
}

// optional string nick_name = 2;
inline bool GroupUserListItem::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupUserListItem::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupUserListItem::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupUserListItem::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& GroupUserListItem::nick_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GroupUserListItem.nick_name)
  return *nick_name_;
}
inline void GroupUserListItem::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GroupUserListItem.nick_name)
}
inline void GroupUserListItem::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GroupUserListItem.nick_name)
}
inline void GroupUserListItem::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GroupUserListItem.nick_name)
}
inline ::std::string* GroupUserListItem::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GroupUserListItem.nick_name)
  return nick_name_;
}
inline ::std::string* GroupUserListItem::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupUserListItem::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GroupUserListItem.nick_name)
}

// optional uint32 avatar_id = 3;
inline bool GroupUserListItem::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupUserListItem::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupUserListItem::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupUserListItem::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 GroupUserListItem::avatar_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GroupUserListItem.avatar_id)
  return avatar_id_;
}
inline void GroupUserListItem::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GroupUserListItem.avatar_id)
}

// optional string avatar = 4;
inline bool GroupUserListItem::has_avatar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupUserListItem::set_has_avatar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupUserListItem::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupUserListItem::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& GroupUserListItem::avatar() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GroupUserListItem.avatar)
  return *avatar_;
}
inline void GroupUserListItem::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GroupUserListItem.avatar)
}
inline void GroupUserListItem::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GroupUserListItem.avatar)
}
inline void GroupUserListItem::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GroupUserListItem.avatar)
}
inline ::std::string* GroupUserListItem::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GroupUserListItem.avatar)
  return avatar_;
}
inline ::std::string* GroupUserListItem::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupUserListItem::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GroupUserListItem.avatar)
}

// optional uint32 role = 5;
inline bool GroupUserListItem::has_role() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupUserListItem::set_has_role() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupUserListItem::clear_has_role() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupUserListItem::clear_role() {
  role_ = 0u;
  clear_has_role();
}
inline ::google::protobuf::uint32 GroupUserListItem::role() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GroupUserListItem.role)
  return role_;
}
inline void GroupUserListItem::set_role(::google::protobuf::uint32 value) {
  set_has_role();
  role_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GroupUserListItem.role)
}

// -------------------------------------------------------------------

// SearchGroupUserListResponse

// optional uint64 group_id = 1;
inline bool SearchGroupUserListResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchGroupUserListResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchGroupUserListResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchGroupUserListResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 SearchGroupUserListResponse::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SearchGroupUserListResponse.group_id)
  return group_id_;
}
inline void SearchGroupUserListResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SearchGroupUserListResponse.group_id)
}

// repeated .umsProtocol.GroupUserListItem list_item = 2;
inline int SearchGroupUserListResponse::list_item_size() const {
  return list_item_.size();
}
inline void SearchGroupUserListResponse::clear_list_item() {
  list_item_.Clear();
}
inline const ::umsProtocol::GroupUserListItem& SearchGroupUserListResponse::list_item(int index) const {
  // @@protoc_insertion_point(field_get:umsProtocol.SearchGroupUserListResponse.list_item)
  return list_item_.Get(index);
}
inline ::umsProtocol::GroupUserListItem* SearchGroupUserListResponse::mutable_list_item(int index) {
  // @@protoc_insertion_point(field_mutable:umsProtocol.SearchGroupUserListResponse.list_item)
  return list_item_.Mutable(index);
}
inline ::umsProtocol::GroupUserListItem* SearchGroupUserListResponse::add_list_item() {
  // @@protoc_insertion_point(field_add:umsProtocol.SearchGroupUserListResponse.list_item)
  return list_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupUserListItem >&
SearchGroupUserListResponse::list_item() const {
  // @@protoc_insertion_point(field_list:umsProtocol.SearchGroupUserListResponse.list_item)
  return list_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupUserListItem >*
SearchGroupUserListResponse::mutable_list_item() {
  // @@protoc_insertion_point(field_mutable_list:umsProtocol.SearchGroupUserListResponse.list_item)
  return &list_item_;
}

// required .umsProtocol.Result result = 3;
inline bool SearchGroupUserListResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SearchGroupUserListResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SearchGroupUserListResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SearchGroupUserListResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& SearchGroupUserListResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SearchGroupUserListResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* SearchGroupUserListResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.SearchGroupUserListResponse.result)
  return result_;
}
inline ::umsProtocol::Result* SearchGroupUserListResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void SearchGroupUserListResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.SearchGroupUserListResponse.result)
}

// -------------------------------------------------------------------

// AddFriendRequest

// required uint64 user_id = 1;
inline bool AddFriendRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFriendRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFriendRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFriendRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AddFriendRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AddFriendRequest.user_id)
  return user_id_;
}
inline void AddFriendRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.AddFriendRequest.user_id)
}

// required uint64 friend_id = 2;
inline bool AddFriendRequest::has_friend_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFriendRequest::set_has_friend_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFriendRequest::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFriendRequest::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 AddFriendRequest::friend_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AddFriendRequest.friend_id)
  return friend_id_;
}
inline void AddFriendRequest::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.AddFriendRequest.friend_id)
}

// -------------------------------------------------------------------

// AddFriendResponse

// required .umsProtocol.Result result = 1;
inline bool AddFriendResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFriendResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFriendResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFriendResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& AddFriendResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AddFriendResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* AddFriendResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.AddFriendResponse.result)
  return result_;
}
inline ::umsProtocol::Result* AddFriendResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void AddFriendResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.AddFriendResponse.result)
}

// -------------------------------------------------------------------

// GetFriendVerifyInfoRequest

// required uint64 user_id = 1;
inline bool GetFriendVerifyInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFriendVerifyInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFriendVerifyInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFriendVerifyInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetFriendVerifyInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendVerifyInfoRequest.user_id)
  return user_id_;
}
inline void GetFriendVerifyInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendVerifyInfoRequest.user_id)
}

// -------------------------------------------------------------------

// GetFriendVerifyInfoResponse

// optional uint32 verify_type = 1;
inline bool GetFriendVerifyInfoResponse::has_verify_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFriendVerifyInfoResponse::set_has_verify_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFriendVerifyInfoResponse::clear_has_verify_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFriendVerifyInfoResponse::clear_verify_type() {
  verify_type_ = 0u;
  clear_has_verify_type();
}
inline ::google::protobuf::uint32 GetFriendVerifyInfoResponse::verify_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendVerifyInfoResponse.verify_type)
  return verify_type_;
}
inline void GetFriendVerifyInfoResponse::set_verify_type(::google::protobuf::uint32 value) {
  set_has_verify_type();
  verify_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendVerifyInfoResponse.verify_type)
}

// optional uint32 question_type = 2;
inline bool GetFriendVerifyInfoResponse::has_question_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFriendVerifyInfoResponse::set_has_question_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFriendVerifyInfoResponse::clear_has_question_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFriendVerifyInfoResponse::clear_question_type() {
  question_type_ = 0u;
  clear_has_question_type();
}
inline ::google::protobuf::uint32 GetFriendVerifyInfoResponse::question_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendVerifyInfoResponse.question_type)
  return question_type_;
}
inline void GetFriendVerifyInfoResponse::set_question_type(::google::protobuf::uint32 value) {
  set_has_question_type();
  question_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendVerifyInfoResponse.question_type)
}

// optional string answer = 3;
inline bool GetFriendVerifyInfoResponse::has_answer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetFriendVerifyInfoResponse::set_has_answer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetFriendVerifyInfoResponse::clear_has_answer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetFriendVerifyInfoResponse::clear_answer() {
  if (answer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_->clear();
  }
  clear_has_answer();
}
inline const ::std::string& GetFriendVerifyInfoResponse::answer() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendVerifyInfoResponse.answer)
  return *answer_;
}
inline void GetFriendVerifyInfoResponse::set_answer(const ::std::string& value) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendVerifyInfoResponse.answer)
}
inline void GetFriendVerifyInfoResponse::set_answer(const char* value) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetFriendVerifyInfoResponse.answer)
}
inline void GetFriendVerifyInfoResponse::set_answer(const char* value, size_t size) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetFriendVerifyInfoResponse.answer)
}
inline ::std::string* GetFriendVerifyInfoResponse::mutable_answer() {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendVerifyInfoResponse.answer)
  return answer_;
}
inline ::std::string* GetFriendVerifyInfoResponse::release_answer() {
  clear_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = answer_;
    answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetFriendVerifyInfoResponse::set_allocated_answer(::std::string* answer) {
  if (answer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete answer_;
  }
  if (answer) {
    set_has_answer();
    answer_ = answer;
  } else {
    clear_has_answer();
    answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendVerifyInfoResponse.answer)
}

// required .umsProtocol.Result result = 4;
inline bool GetFriendVerifyInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetFriendVerifyInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetFriendVerifyInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetFriendVerifyInfoResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& GetFriendVerifyInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendVerifyInfoResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* GetFriendVerifyInfoResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendVerifyInfoResponse.result)
  return result_;
}
inline ::umsProtocol::Result* GetFriendVerifyInfoResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetFriendVerifyInfoResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendVerifyInfoResponse.result)
}

// -------------------------------------------------------------------

// DeleteFriendRequest

// required uint64 user_id = 1;
inline bool DeleteFriendRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteFriendRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteFriendRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteFriendRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 DeleteFriendRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.DeleteFriendRequest.user_id)
  return user_id_;
}
inline void DeleteFriendRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.DeleteFriendRequest.user_id)
}

// required uint64 friend_id = 2;
inline bool DeleteFriendRequest::has_friend_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteFriendRequest::set_has_friend_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteFriendRequest::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteFriendRequest::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 DeleteFriendRequest::friend_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.DeleteFriendRequest.friend_id)
  return friend_id_;
}
inline void DeleteFriendRequest::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.DeleteFriendRequest.friend_id)
}

// -------------------------------------------------------------------

// DeleteFriendResponse

// required .umsProtocol.Result result = 1;
inline bool DeleteFriendResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteFriendResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteFriendResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteFriendResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& DeleteFriendResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.DeleteFriendResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* DeleteFriendResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.DeleteFriendResponse.result)
  return result_;
}
inline ::umsProtocol::Result* DeleteFriendResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void DeleteFriendResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.DeleteFriendResponse.result)
}

// -------------------------------------------------------------------

// UpdateFriendBranchRequest

// required uint64 user_id = 1;
inline bool UpdateFriendBranchRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateFriendBranchRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateFriendBranchRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateFriendBranchRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateFriendBranchRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateFriendBranchRequest.user_id)
  return user_id_;
}
inline void UpdateFriendBranchRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateFriendBranchRequest.user_id)
}

// required uint64 friend_id = 2;
inline bool UpdateFriendBranchRequest::has_friend_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateFriendBranchRequest::set_has_friend_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateFriendBranchRequest::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateFriendBranchRequest::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 UpdateFriendBranchRequest::friend_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateFriendBranchRequest.friend_id)
  return friend_id_;
}
inline void UpdateFriendBranchRequest::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateFriendBranchRequest.friend_id)
}

// required uint64 branch_id = 3;
inline bool UpdateFriendBranchRequest::has_branch_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateFriendBranchRequest::set_has_branch_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateFriendBranchRequest::clear_has_branch_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateFriendBranchRequest::clear_branch_id() {
  branch_id_ = GOOGLE_ULONGLONG(0);
  clear_has_branch_id();
}
inline ::google::protobuf::uint64 UpdateFriendBranchRequest::branch_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateFriendBranchRequest.branch_id)
  return branch_id_;
}
inline void UpdateFriendBranchRequest::set_branch_id(::google::protobuf::uint64 value) {
  set_has_branch_id();
  branch_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateFriendBranchRequest.branch_id)
}

// -------------------------------------------------------------------

// UpdateFriendBranchResponse

// required .umsProtocol.Result result = 1;
inline bool UpdateFriendBranchResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateFriendBranchResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateFriendBranchResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateFriendBranchResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& UpdateFriendBranchResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateFriendBranchResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* UpdateFriendBranchResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateFriendBranchResponse.result)
  return result_;
}
inline ::umsProtocol::Result* UpdateFriendBranchResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void UpdateFriendBranchResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateFriendBranchResponse.result)
}

// -------------------------------------------------------------------

// AddBranchRequest

// required uint64 user_id = 1;
inline bool AddBranchRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddBranchRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddBranchRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddBranchRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AddBranchRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AddBranchRequest.user_id)
  return user_id_;
}
inline void AddBranchRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.AddBranchRequest.user_id)
}

// optional string branch_name = 2;
inline bool AddBranchRequest::has_branch_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddBranchRequest::set_has_branch_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddBranchRequest::clear_has_branch_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddBranchRequest::clear_branch_name() {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_->clear();
  }
  clear_has_branch_name();
}
inline const ::std::string& AddBranchRequest::branch_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AddBranchRequest.branch_name)
  return *branch_name_;
}
inline void AddBranchRequest::set_branch_name(const ::std::string& value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.AddBranchRequest.branch_name)
}
inline void AddBranchRequest::set_branch_name(const char* value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.AddBranchRequest.branch_name)
}
inline void AddBranchRequest::set_branch_name(const char* value, size_t size) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.AddBranchRequest.branch_name)
}
inline ::std::string* AddBranchRequest::mutable_branch_name() {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.AddBranchRequest.branch_name)
  return branch_name_;
}
inline ::std::string* AddBranchRequest::release_branch_name() {
  clear_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = branch_name_;
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AddBranchRequest::set_allocated_branch_name(::std::string* branch_name) {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete branch_name_;
  }
  if (branch_name) {
    set_has_branch_name();
    branch_name_ = branch_name;
  } else {
    clear_has_branch_name();
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.AddBranchRequest.branch_name)
}

// optional uint32 branch_sort = 3;
inline bool AddBranchRequest::has_branch_sort() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddBranchRequest::set_has_branch_sort() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddBranchRequest::clear_has_branch_sort() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddBranchRequest::clear_branch_sort() {
  branch_sort_ = 0u;
  clear_has_branch_sort();
}
inline ::google::protobuf::uint32 AddBranchRequest::branch_sort() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AddBranchRequest.branch_sort)
  return branch_sort_;
}
inline void AddBranchRequest::set_branch_sort(::google::protobuf::uint32 value) {
  set_has_branch_sort();
  branch_sort_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.AddBranchRequest.branch_sort)
}

// -------------------------------------------------------------------

// AddBranchResponse

// optional uint64 user_id = 1;
inline bool AddBranchResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddBranchResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddBranchResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddBranchResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AddBranchResponse::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AddBranchResponse.user_id)
  return user_id_;
}
inline void AddBranchResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.AddBranchResponse.user_id)
}

// optional uint64 branch_id = 2;
inline bool AddBranchResponse::has_branch_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddBranchResponse::set_has_branch_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddBranchResponse::clear_has_branch_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddBranchResponse::clear_branch_id() {
  branch_id_ = GOOGLE_ULONGLONG(0);
  clear_has_branch_id();
}
inline ::google::protobuf::uint64 AddBranchResponse::branch_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AddBranchResponse.branch_id)
  return branch_id_;
}
inline void AddBranchResponse::set_branch_id(::google::protobuf::uint64 value) {
  set_has_branch_id();
  branch_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.AddBranchResponse.branch_id)
}

// optional string branch_name = 3;
inline bool AddBranchResponse::has_branch_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddBranchResponse::set_has_branch_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddBranchResponse::clear_has_branch_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddBranchResponse::clear_branch_name() {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_->clear();
  }
  clear_has_branch_name();
}
inline const ::std::string& AddBranchResponse::branch_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AddBranchResponse.branch_name)
  return *branch_name_;
}
inline void AddBranchResponse::set_branch_name(const ::std::string& value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.AddBranchResponse.branch_name)
}
inline void AddBranchResponse::set_branch_name(const char* value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.AddBranchResponse.branch_name)
}
inline void AddBranchResponse::set_branch_name(const char* value, size_t size) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.AddBranchResponse.branch_name)
}
inline ::std::string* AddBranchResponse::mutable_branch_name() {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.AddBranchResponse.branch_name)
  return branch_name_;
}
inline ::std::string* AddBranchResponse::release_branch_name() {
  clear_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = branch_name_;
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AddBranchResponse::set_allocated_branch_name(::std::string* branch_name) {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete branch_name_;
  }
  if (branch_name) {
    set_has_branch_name();
    branch_name_ = branch_name;
  } else {
    clear_has_branch_name();
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.AddBranchResponse.branch_name)
}

// optional uint32 branch_sort = 4;
inline bool AddBranchResponse::has_branch_sort() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddBranchResponse::set_has_branch_sort() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddBranchResponse::clear_has_branch_sort() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddBranchResponse::clear_branch_sort() {
  branch_sort_ = 0u;
  clear_has_branch_sort();
}
inline ::google::protobuf::uint32 AddBranchResponse::branch_sort() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AddBranchResponse.branch_sort)
  return branch_sort_;
}
inline void AddBranchResponse::set_branch_sort(::google::protobuf::uint32 value) {
  set_has_branch_sort();
  branch_sort_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.AddBranchResponse.branch_sort)
}

// required .umsProtocol.Result result = 5;
inline bool AddBranchResponse::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddBranchResponse::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddBranchResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddBranchResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& AddBranchResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.AddBranchResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* AddBranchResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.AddBranchResponse.result)
  return result_;
}
inline ::umsProtocol::Result* AddBranchResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void AddBranchResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.AddBranchResponse.result)
}

// -------------------------------------------------------------------

// DeleteBranchRequest

// required uint64 user_id = 1;
inline bool DeleteBranchRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteBranchRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteBranchRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteBranchRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 DeleteBranchRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.DeleteBranchRequest.user_id)
  return user_id_;
}
inline void DeleteBranchRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.DeleteBranchRequest.user_id)
}

// required uint64 branch_id = 2;
inline bool DeleteBranchRequest::has_branch_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteBranchRequest::set_has_branch_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteBranchRequest::clear_has_branch_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteBranchRequest::clear_branch_id() {
  branch_id_ = GOOGLE_ULONGLONG(0);
  clear_has_branch_id();
}
inline ::google::protobuf::uint64 DeleteBranchRequest::branch_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.DeleteBranchRequest.branch_id)
  return branch_id_;
}
inline void DeleteBranchRequest::set_branch_id(::google::protobuf::uint64 value) {
  set_has_branch_id();
  branch_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.DeleteBranchRequest.branch_id)
}

// -------------------------------------------------------------------

// DeleteBranchResponse

// required .umsProtocol.Result result = 1;
inline bool DeleteBranchResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteBranchResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteBranchResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteBranchResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& DeleteBranchResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.DeleteBranchResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* DeleteBranchResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.DeleteBranchResponse.result)
  return result_;
}
inline ::umsProtocol::Result* DeleteBranchResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void DeleteBranchResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.DeleteBranchResponse.result)
}

// -------------------------------------------------------------------

// UpdateBranchInfoRequest

// required uint64 user_id = 1;
inline bool UpdateBranchInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateBranchInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateBranchInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateBranchInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateBranchInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateBranchInfoRequest.user_id)
  return user_id_;
}
inline void UpdateBranchInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateBranchInfoRequest.user_id)
}

// optional uint64 branch_id = 2;
inline bool UpdateBranchInfoRequest::has_branch_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateBranchInfoRequest::set_has_branch_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateBranchInfoRequest::clear_has_branch_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateBranchInfoRequest::clear_branch_id() {
  branch_id_ = GOOGLE_ULONGLONG(0);
  clear_has_branch_id();
}
inline ::google::protobuf::uint64 UpdateBranchInfoRequest::branch_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateBranchInfoRequest.branch_id)
  return branch_id_;
}
inline void UpdateBranchInfoRequest::set_branch_id(::google::protobuf::uint64 value) {
  set_has_branch_id();
  branch_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateBranchInfoRequest.branch_id)
}

// optional string branch_name = 3;
inline bool UpdateBranchInfoRequest::has_branch_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateBranchInfoRequest::set_has_branch_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateBranchInfoRequest::clear_has_branch_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateBranchInfoRequest::clear_branch_name() {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_->clear();
  }
  clear_has_branch_name();
}
inline const ::std::string& UpdateBranchInfoRequest::branch_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateBranchInfoRequest.branch_name)
  return *branch_name_;
}
inline void UpdateBranchInfoRequest::set_branch_name(const ::std::string& value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateBranchInfoRequest.branch_name)
}
inline void UpdateBranchInfoRequest::set_branch_name(const char* value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateBranchInfoRequest.branch_name)
}
inline void UpdateBranchInfoRequest::set_branch_name(const char* value, size_t size) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateBranchInfoRequest.branch_name)
}
inline ::std::string* UpdateBranchInfoRequest::mutable_branch_name() {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateBranchInfoRequest.branch_name)
  return branch_name_;
}
inline ::std::string* UpdateBranchInfoRequest::release_branch_name() {
  clear_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = branch_name_;
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateBranchInfoRequest::set_allocated_branch_name(::std::string* branch_name) {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete branch_name_;
  }
  if (branch_name) {
    set_has_branch_name();
    branch_name_ = branch_name;
  } else {
    clear_has_branch_name();
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateBranchInfoRequest.branch_name)
}

// optional uint32 branch_sort = 4;
inline bool UpdateBranchInfoRequest::has_branch_sort() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateBranchInfoRequest::set_has_branch_sort() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateBranchInfoRequest::clear_has_branch_sort() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateBranchInfoRequest::clear_branch_sort() {
  branch_sort_ = 0u;
  clear_has_branch_sort();
}
inline ::google::protobuf::uint32 UpdateBranchInfoRequest::branch_sort() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateBranchInfoRequest.branch_sort)
  return branch_sort_;
}
inline void UpdateBranchInfoRequest::set_branch_sort(::google::protobuf::uint32 value) {
  set_has_branch_sort();
  branch_sort_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateBranchInfoRequest.branch_sort)
}

// -------------------------------------------------------------------

// UpdateBranchInfoResponse

// required .umsProtocol.Result result = 1;
inline bool UpdateBranchInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateBranchInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateBranchInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateBranchInfoResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& UpdateBranchInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateBranchInfoResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* UpdateBranchInfoResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateBranchInfoResponse.result)
  return result_;
}
inline ::umsProtocol::Result* UpdateBranchInfoResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void UpdateBranchInfoResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateBranchInfoResponse.result)
}

// -------------------------------------------------------------------

// KickoutGroupUserRequest

// required uint64 user_id = 1;
inline bool KickoutGroupUserRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickoutGroupUserRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickoutGroupUserRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickoutGroupUserRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 KickoutGroupUserRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.KickoutGroupUserRequest.user_id)
  return user_id_;
}
inline void KickoutGroupUserRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.KickoutGroupUserRequest.user_id)
}

// required uint64 group_id = 2;
inline bool KickoutGroupUserRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KickoutGroupUserRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KickoutGroupUserRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KickoutGroupUserRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 KickoutGroupUserRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.KickoutGroupUserRequest.group_id)
  return group_id_;
}
inline void KickoutGroupUserRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.KickoutGroupUserRequest.group_id)
}

// optional uint64 group_user_id = 3;
inline bool KickoutGroupUserRequest::has_group_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KickoutGroupUserRequest::set_has_group_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KickoutGroupUserRequest::clear_has_group_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KickoutGroupUserRequest::clear_group_user_id() {
  group_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_user_id();
}
inline ::google::protobuf::uint64 KickoutGroupUserRequest::group_user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.KickoutGroupUserRequest.group_user_id)
  return group_user_id_;
}
inline void KickoutGroupUserRequest::set_group_user_id(::google::protobuf::uint64 value) {
  set_has_group_user_id();
  group_user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.KickoutGroupUserRequest.group_user_id)
}

// -------------------------------------------------------------------

// KickoutGroupUserResponse

// required .umsProtocol.Result result = 1;
inline bool KickoutGroupUserResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickoutGroupUserResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickoutGroupUserResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickoutGroupUserResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& KickoutGroupUserResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.KickoutGroupUserResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* KickoutGroupUserResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.KickoutGroupUserResponse.result)
  return result_;
}
inline ::umsProtocol::Result* KickoutGroupUserResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void KickoutGroupUserResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.KickoutGroupUserResponse.result)
}

// -------------------------------------------------------------------

// SetGroupManagerRequest

// required uint64 user_id = 1;
inline bool SetGroupManagerRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGroupManagerRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGroupManagerRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGroupManagerRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 SetGroupManagerRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetGroupManagerRequest.user_id)
  return user_id_;
}
inline void SetGroupManagerRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SetGroupManagerRequest.user_id)
}

// optional uint64 group_id = 2;
inline bool SetGroupManagerRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetGroupManagerRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetGroupManagerRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetGroupManagerRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 SetGroupManagerRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetGroupManagerRequest.group_id)
  return group_id_;
}
inline void SetGroupManagerRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SetGroupManagerRequest.group_id)
}

// optional uint64 group_user_id = 3;
inline bool SetGroupManagerRequest::has_group_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetGroupManagerRequest::set_has_group_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetGroupManagerRequest::clear_has_group_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetGroupManagerRequest::clear_group_user_id() {
  group_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_user_id();
}
inline ::google::protobuf::uint64 SetGroupManagerRequest::group_user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetGroupManagerRequest.group_user_id)
  return group_user_id_;
}
inline void SetGroupManagerRequest::set_group_user_id(::google::protobuf::uint64 value) {
  set_has_group_user_id();
  group_user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SetGroupManagerRequest.group_user_id)
}

// optional uint32 control_value = 4;
inline bool SetGroupManagerRequest::has_control_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetGroupManagerRequest::set_has_control_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetGroupManagerRequest::clear_has_control_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetGroupManagerRequest::clear_control_value() {
  control_value_ = 0u;
  clear_has_control_value();
}
inline ::google::protobuf::uint32 SetGroupManagerRequest::control_value() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetGroupManagerRequest.control_value)
  return control_value_;
}
inline void SetGroupManagerRequest::set_control_value(::google::protobuf::uint32 value) {
  set_has_control_value();
  control_value_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SetGroupManagerRequest.control_value)
}

// -------------------------------------------------------------------

// SetGroupManagerResponse

// required .umsProtocol.Result result = 1;
inline bool SetGroupManagerResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGroupManagerResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGroupManagerResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGroupManagerResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& SetGroupManagerResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetGroupManagerResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* SetGroupManagerResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.SetGroupManagerResponse.result)
  return result_;
}
inline ::umsProtocol::Result* SetGroupManagerResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void SetGroupManagerResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.SetGroupManagerResponse.result)
}

// -------------------------------------------------------------------

// UpdateFriendRemarkRequest

// required uint64 user_id = 1;
inline bool UpdateFriendRemarkRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateFriendRemarkRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateFriendRemarkRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateFriendRemarkRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateFriendRemarkRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateFriendRemarkRequest.user_id)
  return user_id_;
}
inline void UpdateFriendRemarkRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateFriendRemarkRequest.user_id)
}

// optional uint64 friend_id = 2;
inline bool UpdateFriendRemarkRequest::has_friend_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateFriendRemarkRequest::set_has_friend_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateFriendRemarkRequest::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateFriendRemarkRequest::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 UpdateFriendRemarkRequest::friend_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateFriendRemarkRequest.friend_id)
  return friend_id_;
}
inline void UpdateFriendRemarkRequest::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateFriendRemarkRequest.friend_id)
}

// optional string remark = 3;
inline bool UpdateFriendRemarkRequest::has_remark() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateFriendRemarkRequest::set_has_remark() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateFriendRemarkRequest::clear_has_remark() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateFriendRemarkRequest::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& UpdateFriendRemarkRequest::remark() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateFriendRemarkRequest.remark)
  return *remark_;
}
inline void UpdateFriendRemarkRequest::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateFriendRemarkRequest.remark)
}
inline void UpdateFriendRemarkRequest::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateFriendRemarkRequest.remark)
}
inline void UpdateFriendRemarkRequest::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateFriendRemarkRequest.remark)
}
inline ::std::string* UpdateFriendRemarkRequest::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateFriendRemarkRequest.remark)
  return remark_;
}
inline ::std::string* UpdateFriendRemarkRequest::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateFriendRemarkRequest::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateFriendRemarkRequest.remark)
}

// -------------------------------------------------------------------

// UpdateFriendRemarkResponse

// required .umsProtocol.Result result = 1;
inline bool UpdateFriendRemarkResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateFriendRemarkResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateFriendRemarkResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateFriendRemarkResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& UpdateFriendRemarkResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateFriendRemarkResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* UpdateFriendRemarkResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateFriendRemarkResponse.result)
  return result_;
}
inline ::umsProtocol::Result* UpdateFriendRemarkResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void UpdateFriendRemarkResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateFriendRemarkResponse.result)
}

// -------------------------------------------------------------------

// GetBranchListRequest

// required uint64 user_id = 1;
inline bool GetBranchListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBranchListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBranchListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBranchListRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetBranchListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetBranchListRequest.user_id)
  return user_id_;
}
inline void GetBranchListRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetBranchListRequest.user_id)
}

// optional uint64 version_id = 2;
inline bool GetBranchListRequest::has_version_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBranchListRequest::set_has_version_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBranchListRequest::clear_has_version_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBranchListRequest::clear_version_id() {
  version_id_ = GOOGLE_ULONGLONG(0);
  clear_has_version_id();
}
inline ::google::protobuf::uint64 GetBranchListRequest::version_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetBranchListRequest.version_id)
  return version_id_;
}
inline void GetBranchListRequest::set_version_id(::google::protobuf::uint64 value) {
  set_has_version_id();
  version_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetBranchListRequest.version_id)
}

// -------------------------------------------------------------------

// UserIdRemarkItem

// required uint64 user_id = 1;
inline bool UserIdRemarkItem::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserIdRemarkItem::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserIdRemarkItem::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserIdRemarkItem::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UserIdRemarkItem::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UserIdRemarkItem.user_id)
  return user_id_;
}
inline void UserIdRemarkItem::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UserIdRemarkItem.user_id)
}

// optional string user_remark = 2;
inline bool UserIdRemarkItem::has_user_remark() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserIdRemarkItem::set_has_user_remark() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserIdRemarkItem::clear_has_user_remark() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserIdRemarkItem::clear_user_remark() {
  if (user_remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_remark_->clear();
  }
  clear_has_user_remark();
}
inline const ::std::string& UserIdRemarkItem::user_remark() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UserIdRemarkItem.user_remark)
  return *user_remark_;
}
inline void UserIdRemarkItem::set_user_remark(const ::std::string& value) {
  set_has_user_remark();
  if (user_remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_remark_ = new ::std::string;
  }
  user_remark_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UserIdRemarkItem.user_remark)
}
inline void UserIdRemarkItem::set_user_remark(const char* value) {
  set_has_user_remark();
  if (user_remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_remark_ = new ::std::string;
  }
  user_remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UserIdRemarkItem.user_remark)
}
inline void UserIdRemarkItem::set_user_remark(const char* value, size_t size) {
  set_has_user_remark();
  if (user_remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_remark_ = new ::std::string;
  }
  user_remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UserIdRemarkItem.user_remark)
}
inline ::std::string* UserIdRemarkItem::mutable_user_remark() {
  set_has_user_remark();
  if (user_remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UserIdRemarkItem.user_remark)
  return user_remark_;
}
inline ::std::string* UserIdRemarkItem::release_user_remark() {
  clear_has_user_remark();
  if (user_remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_remark_;
    user_remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserIdRemarkItem::set_allocated_user_remark(::std::string* user_remark) {
  if (user_remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_remark_;
  }
  if (user_remark) {
    set_has_user_remark();
    user_remark_ = user_remark;
  } else {
    clear_has_user_remark();
    user_remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UserIdRemarkItem.user_remark)
}

// -------------------------------------------------------------------

// BranchListItem

// optional uint64 branch_id = 1;
inline bool BranchListItem::has_branch_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BranchListItem::set_has_branch_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BranchListItem::clear_has_branch_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BranchListItem::clear_branch_id() {
  branch_id_ = GOOGLE_ULONGLONG(0);
  clear_has_branch_id();
}
inline ::google::protobuf::uint64 BranchListItem::branch_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.BranchListItem.branch_id)
  return branch_id_;
}
inline void BranchListItem::set_branch_id(::google::protobuf::uint64 value) {
  set_has_branch_id();
  branch_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.BranchListItem.branch_id)
}

// optional string branch_name = 2;
inline bool BranchListItem::has_branch_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BranchListItem::set_has_branch_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BranchListItem::clear_has_branch_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BranchListItem::clear_branch_name() {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_->clear();
  }
  clear_has_branch_name();
}
inline const ::std::string& BranchListItem::branch_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.BranchListItem.branch_name)
  return *branch_name_;
}
inline void BranchListItem::set_branch_name(const ::std::string& value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.BranchListItem.branch_name)
}
inline void BranchListItem::set_branch_name(const char* value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.BranchListItem.branch_name)
}
inline void BranchListItem::set_branch_name(const char* value, size_t size) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.BranchListItem.branch_name)
}
inline ::std::string* BranchListItem::mutable_branch_name() {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    branch_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.BranchListItem.branch_name)
  return branch_name_;
}
inline ::std::string* BranchListItem::release_branch_name() {
  clear_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = branch_name_;
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BranchListItem::set_allocated_branch_name(::std::string* branch_name) {
  if (branch_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete branch_name_;
  }
  if (branch_name) {
    set_has_branch_name();
    branch_name_ = branch_name;
  } else {
    clear_has_branch_name();
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.BranchListItem.branch_name)
}

// optional uint32 branch_sort = 3;
inline bool BranchListItem::has_branch_sort() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BranchListItem::set_has_branch_sort() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BranchListItem::clear_has_branch_sort() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BranchListItem::clear_branch_sort() {
  branch_sort_ = 0u;
  clear_has_branch_sort();
}
inline ::google::protobuf::uint32 BranchListItem::branch_sort() const {
  // @@protoc_insertion_point(field_get:umsProtocol.BranchListItem.branch_sort)
  return branch_sort_;
}
inline void BranchListItem::set_branch_sort(::google::protobuf::uint32 value) {
  set_has_branch_sort();
  branch_sort_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.BranchListItem.branch_sort)
}

// repeated .umsProtocol.UserIdRemarkItem users = 4;
inline int BranchListItem::users_size() const {
  return users_.size();
}
inline void BranchListItem::clear_users() {
  users_.Clear();
}
inline const ::umsProtocol::UserIdRemarkItem& BranchListItem::users(int index) const {
  // @@protoc_insertion_point(field_get:umsProtocol.BranchListItem.users)
  return users_.Get(index);
}
inline ::umsProtocol::UserIdRemarkItem* BranchListItem::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:umsProtocol.BranchListItem.users)
  return users_.Mutable(index);
}
inline ::umsProtocol::UserIdRemarkItem* BranchListItem::add_users() {
  // @@protoc_insertion_point(field_add:umsProtocol.BranchListItem.users)
  return users_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::umsProtocol::UserIdRemarkItem >&
BranchListItem::users() const {
  // @@protoc_insertion_point(field_list:umsProtocol.BranchListItem.users)
  return users_;
}
inline ::google::protobuf::RepeatedPtrField< ::umsProtocol::UserIdRemarkItem >*
BranchListItem::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:umsProtocol.BranchListItem.users)
  return &users_;
}

// -------------------------------------------------------------------

// GetBranchListResponse

// required .umsProtocol.Result result = 1;
inline bool GetBranchListResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBranchListResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBranchListResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBranchListResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& GetBranchListResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetBranchListResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* GetBranchListResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetBranchListResponse.result)
  return result_;
}
inline ::umsProtocol::Result* GetBranchListResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetBranchListResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetBranchListResponse.result)
}

// optional uint64 user_id = 2;
inline bool GetBranchListResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBranchListResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBranchListResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBranchListResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetBranchListResponse::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetBranchListResponse.user_id)
  return user_id_;
}
inline void GetBranchListResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetBranchListResponse.user_id)
}

// optional uint64 version_id = 3;
inline bool GetBranchListResponse::has_version_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetBranchListResponse::set_has_version_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetBranchListResponse::clear_has_version_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetBranchListResponse::clear_version_id() {
  version_id_ = GOOGLE_ULONGLONG(0);
  clear_has_version_id();
}
inline ::google::protobuf::uint64 GetBranchListResponse::version_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetBranchListResponse.version_id)
  return version_id_;
}
inline void GetBranchListResponse::set_version_id(::google::protobuf::uint64 value) {
  set_has_version_id();
  version_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetBranchListResponse.version_id)
}

// repeated .umsProtocol.BranchListItem branch_item = 4;
inline int GetBranchListResponse::branch_item_size() const {
  return branch_item_.size();
}
inline void GetBranchListResponse::clear_branch_item() {
  branch_item_.Clear();
}
inline const ::umsProtocol::BranchListItem& GetBranchListResponse::branch_item(int index) const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetBranchListResponse.branch_item)
  return branch_item_.Get(index);
}
inline ::umsProtocol::BranchListItem* GetBranchListResponse::mutable_branch_item(int index) {
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetBranchListResponse.branch_item)
  return branch_item_.Mutable(index);
}
inline ::umsProtocol::BranchListItem* GetBranchListResponse::add_branch_item() {
  // @@protoc_insertion_point(field_add:umsProtocol.GetBranchListResponse.branch_item)
  return branch_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::umsProtocol::BranchListItem >&
GetBranchListResponse::branch_item() const {
  // @@protoc_insertion_point(field_list:umsProtocol.GetBranchListResponse.branch_item)
  return branch_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::umsProtocol::BranchListItem >*
GetBranchListResponse::mutable_branch_item() {
  // @@protoc_insertion_point(field_mutable_list:umsProtocol.GetBranchListResponse.branch_item)
  return &branch_item_;
}

// -------------------------------------------------------------------

// SetFriendOptionRequest

// required uint64 user_id = 1;
inline bool SetFriendOptionRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetFriendOptionRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetFriendOptionRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetFriendOptionRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 SetFriendOptionRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetFriendOptionRequest.user_id)
  return user_id_;
}
inline void SetFriendOptionRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SetFriendOptionRequest.user_id)
}

// optional uint32 verify_type = 2;
inline bool SetFriendOptionRequest::has_verify_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetFriendOptionRequest::set_has_verify_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetFriendOptionRequest::clear_has_verify_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetFriendOptionRequest::clear_verify_type() {
  verify_type_ = 0u;
  clear_has_verify_type();
}
inline ::google::protobuf::uint32 SetFriendOptionRequest::verify_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetFriendOptionRequest.verify_type)
  return verify_type_;
}
inline void SetFriendOptionRequest::set_verify_type(::google::protobuf::uint32 value) {
  set_has_verify_type();
  verify_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SetFriendOptionRequest.verify_type)
}

// optional uint32 question_type = 3;
inline bool SetFriendOptionRequest::has_question_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetFriendOptionRequest::set_has_question_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetFriendOptionRequest::clear_has_question_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetFriendOptionRequest::clear_question_type() {
  question_type_ = 0u;
  clear_has_question_type();
}
inline ::google::protobuf::uint32 SetFriendOptionRequest::question_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetFriendOptionRequest.question_type)
  return question_type_;
}
inline void SetFriendOptionRequest::set_question_type(::google::protobuf::uint32 value) {
  set_has_question_type();
  question_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SetFriendOptionRequest.question_type)
}

// optional string answer = 4;
inline bool SetFriendOptionRequest::has_answer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetFriendOptionRequest::set_has_answer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetFriendOptionRequest::clear_has_answer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetFriendOptionRequest::clear_answer() {
  if (answer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_->clear();
  }
  clear_has_answer();
}
inline const ::std::string& SetFriendOptionRequest::answer() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetFriendOptionRequest.answer)
  return *answer_;
}
inline void SetFriendOptionRequest::set_answer(const ::std::string& value) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.SetFriendOptionRequest.answer)
}
inline void SetFriendOptionRequest::set_answer(const char* value) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.SetFriendOptionRequest.answer)
}
inline void SetFriendOptionRequest::set_answer(const char* value, size_t size) {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  answer_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.SetFriendOptionRequest.answer)
}
inline ::std::string* SetFriendOptionRequest::mutable_answer() {
  set_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    answer_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.SetFriendOptionRequest.answer)
  return answer_;
}
inline ::std::string* SetFriendOptionRequest::release_answer() {
  clear_has_answer();
  if (answer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = answer_;
    answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetFriendOptionRequest::set_allocated_answer(::std::string* answer) {
  if (answer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete answer_;
  }
  if (answer) {
    set_has_answer();
    answer_ = answer;
  } else {
    clear_has_answer();
    answer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.SetFriendOptionRequest.answer)
}

// -------------------------------------------------------------------

// SetFriendOptionResponse

// required .umsProtocol.Result result = 1;
inline bool SetFriendOptionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetFriendOptionResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetFriendOptionResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetFriendOptionResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& SetFriendOptionResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetFriendOptionResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* SetFriendOptionResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.SetFriendOptionResponse.result)
  return result_;
}
inline ::umsProtocol::Result* SetFriendOptionResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void SetFriendOptionResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.SetFriendOptionResponse.result)
}

// -------------------------------------------------------------------

// DeleteGroupRequest

// required uint64 user_id = 1;
inline bool DeleteGroupRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteGroupRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteGroupRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteGroupRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 DeleteGroupRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.DeleteGroupRequest.user_id)
  return user_id_;
}
inline void DeleteGroupRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.DeleteGroupRequest.user_id)
}

// optional uint64 group_id = 2;
inline bool DeleteGroupRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteGroupRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteGroupRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteGroupRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 DeleteGroupRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.DeleteGroupRequest.group_id)
  return group_id_;
}
inline void DeleteGroupRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.DeleteGroupRequest.group_id)
}

// -------------------------------------------------------------------

// DeleteGroupResponse

// required .umsProtocol.Result result = 1;
inline bool DeleteGroupResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteGroupResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteGroupResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteGroupResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& DeleteGroupResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.DeleteGroupResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* DeleteGroupResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.DeleteGroupResponse.result)
  return result_;
}
inline ::umsProtocol::Result* DeleteGroupResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void DeleteGroupResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.DeleteGroupResponse.result)
}

// -------------------------------------------------------------------

// UpdateGroupUserInfoRequest

// required uint64 user_id = 1;
inline bool UpdateGroupUserInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGroupUserInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGroupUserInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGroupUserInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateGroupUserInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupUserInfoRequest.user_id)
  return user_id_;
}
inline void UpdateGroupUserInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupUserInfoRequest.user_id)
}

// required uint64 group_id = 2;
inline bool UpdateGroupUserInfoRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateGroupUserInfoRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateGroupUserInfoRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateGroupUserInfoRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 UpdateGroupUserInfoRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupUserInfoRequest.group_id)
  return group_id_;
}
inline void UpdateGroupUserInfoRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupUserInfoRequest.group_id)
}

// required uint64 group_user_id = 3;
inline bool UpdateGroupUserInfoRequest::has_group_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateGroupUserInfoRequest::set_has_group_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateGroupUserInfoRequest::clear_has_group_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateGroupUserInfoRequest::clear_group_user_id() {
  group_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_user_id();
}
inline ::google::protobuf::uint64 UpdateGroupUserInfoRequest::group_user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupUserInfoRequest.group_user_id)
  return group_user_id_;
}
inline void UpdateGroupUserInfoRequest::set_group_user_id(::google::protobuf::uint64 value) {
  set_has_group_user_id();
  group_user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupUserInfoRequest.group_user_id)
}

// optional string remark = 4;
inline bool UpdateGroupUserInfoRequest::has_remark() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateGroupUserInfoRequest::set_has_remark() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateGroupUserInfoRequest::clear_has_remark() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateGroupUserInfoRequest::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& UpdateGroupUserInfoRequest::remark() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupUserInfoRequest.remark)
  return *remark_;
}
inline void UpdateGroupUserInfoRequest::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupUserInfoRequest.remark)
}
inline void UpdateGroupUserInfoRequest::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateGroupUserInfoRequest.remark)
}
inline void UpdateGroupUserInfoRequest::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateGroupUserInfoRequest.remark)
}
inline ::std::string* UpdateGroupUserInfoRequest::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateGroupUserInfoRequest.remark)
  return remark_;
}
inline ::std::string* UpdateGroupUserInfoRequest::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupUserInfoRequest::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateGroupUserInfoRequest.remark)
}

// optional string group_card = 5;
inline bool UpdateGroupUserInfoRequest::has_group_card() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateGroupUserInfoRequest::set_has_group_card() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateGroupUserInfoRequest::clear_has_group_card() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateGroupUserInfoRequest::clear_group_card() {
  if (group_card_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_card_->clear();
  }
  clear_has_group_card();
}
inline const ::std::string& UpdateGroupUserInfoRequest::group_card() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupUserInfoRequest.group_card)
  return *group_card_;
}
inline void UpdateGroupUserInfoRequest::set_group_card(const ::std::string& value) {
  set_has_group_card();
  if (group_card_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_card_ = new ::std::string;
  }
  group_card_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupUserInfoRequest.group_card)
}
inline void UpdateGroupUserInfoRequest::set_group_card(const char* value) {
  set_has_group_card();
  if (group_card_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_card_ = new ::std::string;
  }
  group_card_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateGroupUserInfoRequest.group_card)
}
inline void UpdateGroupUserInfoRequest::set_group_card(const char* value, size_t size) {
  set_has_group_card();
  if (group_card_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_card_ = new ::std::string;
  }
  group_card_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateGroupUserInfoRequest.group_card)
}
inline ::std::string* UpdateGroupUserInfoRequest::mutable_group_card() {
  set_has_group_card();
  if (group_card_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_card_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateGroupUserInfoRequest.group_card)
  return group_card_;
}
inline ::std::string* UpdateGroupUserInfoRequest::release_group_card() {
  clear_has_group_card();
  if (group_card_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_card_;
    group_card_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupUserInfoRequest::set_allocated_group_card(::std::string* group_card) {
  if (group_card_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_card_;
  }
  if (group_card) {
    set_has_group_card();
    group_card_ = group_card;
  } else {
    clear_has_group_card();
    group_card_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateGroupUserInfoRequest.group_card)
}

// optional string email = 6;
inline bool UpdateGroupUserInfoRequest::has_email() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateGroupUserInfoRequest::set_has_email() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateGroupUserInfoRequest::clear_has_email() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateGroupUserInfoRequest::clear_email() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& UpdateGroupUserInfoRequest::email() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupUserInfoRequest.email)
  return *email_;
}
inline void UpdateGroupUserInfoRequest::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupUserInfoRequest.email)
}
inline void UpdateGroupUserInfoRequest::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateGroupUserInfoRequest.email)
}
inline void UpdateGroupUserInfoRequest::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateGroupUserInfoRequest.email)
}
inline ::std::string* UpdateGroupUserInfoRequest::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateGroupUserInfoRequest.email)
  return email_;
}
inline ::std::string* UpdateGroupUserInfoRequest::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupUserInfoRequest::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateGroupUserInfoRequest.email)
}

// optional string tel = 7;
inline bool UpdateGroupUserInfoRequest::has_tel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UpdateGroupUserInfoRequest::set_has_tel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UpdateGroupUserInfoRequest::clear_has_tel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UpdateGroupUserInfoRequest::clear_tel() {
  if (tel_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_->clear();
  }
  clear_has_tel();
}
inline const ::std::string& UpdateGroupUserInfoRequest::tel() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupUserInfoRequest.tel)
  return *tel_;
}
inline void UpdateGroupUserInfoRequest::set_tel(const ::std::string& value) {
  set_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_ = new ::std::string;
  }
  tel_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupUserInfoRequest.tel)
}
inline void UpdateGroupUserInfoRequest::set_tel(const char* value) {
  set_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_ = new ::std::string;
  }
  tel_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateGroupUserInfoRequest.tel)
}
inline void UpdateGroupUserInfoRequest::set_tel(const char* value, size_t size) {
  set_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_ = new ::std::string;
  }
  tel_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateGroupUserInfoRequest.tel)
}
inline ::std::string* UpdateGroupUserInfoRequest::mutable_tel() {
  set_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tel_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateGroupUserInfoRequest.tel)
  return tel_;
}
inline ::std::string* UpdateGroupUserInfoRequest::release_tel() {
  clear_has_tel();
  if (tel_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tel_;
    tel_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupUserInfoRequest::set_allocated_tel(::std::string* tel) {
  if (tel_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tel_;
  }
  if (tel) {
    set_has_tel();
    tel_ = tel;
  } else {
    clear_has_tel();
    tel_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateGroupUserInfoRequest.tel)
}

// -------------------------------------------------------------------

// UpdateGroupUserInfoResponse

// required .umsProtocol.Result result = 1;
inline bool UpdateGroupUserInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGroupUserInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGroupUserInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGroupUserInfoResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& UpdateGroupUserInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupUserInfoResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* UpdateGroupUserInfoResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateGroupUserInfoResponse.result)
  return result_;
}
inline ::umsProtocol::Result* UpdateGroupUserInfoResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void UpdateGroupUserInfoResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateGroupUserInfoResponse.result)
}

// -------------------------------------------------------------------

// UpdateGroupInfoRequest

// required uint64 user_id = 1;
inline bool UpdateGroupInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGroupInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGroupInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateGroupInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupInfoRequest.user_id)
  return user_id_;
}
inline void UpdateGroupInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupInfoRequest.user_id)
}

// required uint64 group_id = 2;
inline bool UpdateGroupInfoRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateGroupInfoRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateGroupInfoRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 UpdateGroupInfoRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupInfoRequest.group_id)
  return group_id_;
}
inline void UpdateGroupInfoRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupInfoRequest.group_id)
}

// optional string group_name = 3;
inline bool UpdateGroupInfoRequest::has_group_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_group_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateGroupInfoRequest::clear_has_group_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateGroupInfoRequest::clear_group_name() {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_->clear();
  }
  clear_has_group_name();
}
inline const ::std::string& UpdateGroupInfoRequest::group_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupInfoRequest.group_name)
  return *group_name_;
}
inline void UpdateGroupInfoRequest::set_group_name(const ::std::string& value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupInfoRequest.group_name)
}
inline void UpdateGroupInfoRequest::set_group_name(const char* value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateGroupInfoRequest.group_name)
}
inline void UpdateGroupInfoRequest::set_group_name(const char* value, size_t size) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateGroupInfoRequest.group_name)
}
inline ::std::string* UpdateGroupInfoRequest::mutable_group_name() {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateGroupInfoRequest.group_name)
  return group_name_;
}
inline ::std::string* UpdateGroupInfoRequest::release_group_name() {
  clear_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_name_;
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupInfoRequest::set_allocated_group_name(::std::string* group_name) {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_name_;
  }
  if (group_name) {
    set_has_group_name();
    group_name_ = group_name;
  } else {
    clear_has_group_name();
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateGroupInfoRequest.group_name)
}

// optional string remark = 4;
inline bool UpdateGroupInfoRequest::has_remark() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_remark() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateGroupInfoRequest::clear_has_remark() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateGroupInfoRequest::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& UpdateGroupInfoRequest::remark() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupInfoRequest.remark)
  return *remark_;
}
inline void UpdateGroupInfoRequest::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupInfoRequest.remark)
}
inline void UpdateGroupInfoRequest::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateGroupInfoRequest.remark)
}
inline void UpdateGroupInfoRequest::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateGroupInfoRequest.remark)
}
inline ::std::string* UpdateGroupInfoRequest::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateGroupInfoRequest.remark)
  return remark_;
}
inline ::std::string* UpdateGroupInfoRequest::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupInfoRequest::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateGroupInfoRequest.remark)
}

// optional uint32 type = 5;
inline bool UpdateGroupInfoRequest::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateGroupInfoRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateGroupInfoRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 UpdateGroupInfoRequest::type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupInfoRequest.type)
  return type_;
}
inline void UpdateGroupInfoRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupInfoRequest.type)
}

// optional string group_intro = 6;
inline bool UpdateGroupInfoRequest::has_group_intro() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_group_intro() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateGroupInfoRequest::clear_has_group_intro() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateGroupInfoRequest::clear_group_intro() {
  if (group_intro_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_->clear();
  }
  clear_has_group_intro();
}
inline const ::std::string& UpdateGroupInfoRequest::group_intro() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupInfoRequest.group_intro)
  return *group_intro_;
}
inline void UpdateGroupInfoRequest::set_group_intro(const ::std::string& value) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupInfoRequest.group_intro)
}
inline void UpdateGroupInfoRequest::set_group_intro(const char* value) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateGroupInfoRequest.group_intro)
}
inline void UpdateGroupInfoRequest::set_group_intro(const char* value, size_t size) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateGroupInfoRequest.group_intro)
}
inline ::std::string* UpdateGroupInfoRequest::mutable_group_intro() {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateGroupInfoRequest.group_intro)
  return group_intro_;
}
inline ::std::string* UpdateGroupInfoRequest::release_group_intro() {
  clear_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_intro_;
    group_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupInfoRequest::set_allocated_group_intro(::std::string* group_intro) {
  if (group_intro_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_intro_;
  }
  if (group_intro) {
    set_has_group_intro();
    group_intro_ = group_intro;
  } else {
    clear_has_group_intro();
    group_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateGroupInfoRequest.group_intro)
}

// optional string group_notice = 7;
inline bool UpdateGroupInfoRequest::has_group_notice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_group_notice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UpdateGroupInfoRequest::clear_has_group_notice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UpdateGroupInfoRequest::clear_group_notice() {
  if (group_notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_->clear();
  }
  clear_has_group_notice();
}
inline const ::std::string& UpdateGroupInfoRequest::group_notice() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupInfoRequest.group_notice)
  return *group_notice_;
}
inline void UpdateGroupInfoRequest::set_group_notice(const ::std::string& value) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupInfoRequest.group_notice)
}
inline void UpdateGroupInfoRequest::set_group_notice(const char* value) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateGroupInfoRequest.group_notice)
}
inline void UpdateGroupInfoRequest::set_group_notice(const char* value, size_t size) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateGroupInfoRequest.group_notice)
}
inline ::std::string* UpdateGroupInfoRequest::mutable_group_notice() {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateGroupInfoRequest.group_notice)
  return group_notice_;
}
inline ::std::string* UpdateGroupInfoRequest::release_group_notice() {
  clear_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_notice_;
    group_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupInfoRequest::set_allocated_group_notice(::std::string* group_notice) {
  if (group_notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_notice_;
  }
  if (group_notice) {
    set_has_group_notice();
    group_notice_ = group_notice;
  } else {
    clear_has_group_notice();
    group_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateGroupInfoRequest.group_notice)
}

// optional string avatar = 8;
inline bool UpdateGroupInfoRequest::has_avatar() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_avatar() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UpdateGroupInfoRequest::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UpdateGroupInfoRequest::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& UpdateGroupInfoRequest::avatar() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupInfoRequest.avatar)
  return *avatar_;
}
inline void UpdateGroupInfoRequest::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupInfoRequest.avatar)
}
inline void UpdateGroupInfoRequest::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateGroupInfoRequest.avatar)
}
inline void UpdateGroupInfoRequest::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateGroupInfoRequest.avatar)
}
inline ::std::string* UpdateGroupInfoRequest::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateGroupInfoRequest.avatar)
  return avatar_;
}
inline ::std::string* UpdateGroupInfoRequest::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupInfoRequest::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateGroupInfoRequest.avatar)
}

// optional uint32 sub_type = 9;
inline bool UpdateGroupInfoRequest::has_sub_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_sub_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UpdateGroupInfoRequest::clear_has_sub_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UpdateGroupInfoRequest::clear_sub_type() {
  sub_type_ = 0u;
  clear_has_sub_type();
}
inline ::google::protobuf::uint32 UpdateGroupInfoRequest::sub_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupInfoRequest.sub_type)
  return sub_type_;
}
inline void UpdateGroupInfoRequest::set_sub_type(::google::protobuf::uint32 value) {
  set_has_sub_type();
  sub_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupInfoRequest.sub_type)
}

// optional uint32 avatar_id = 10;
inline bool UpdateGroupInfoRequest::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UpdateGroupInfoRequest::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UpdateGroupInfoRequest::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UpdateGroupInfoRequest::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 UpdateGroupInfoRequest::avatar_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupInfoRequest.avatar_id)
  return avatar_id_;
}
inline void UpdateGroupInfoRequest::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupInfoRequest.avatar_id)
}

// -------------------------------------------------------------------

// UpdateGroupInfoResponse

// required .umsProtocol.Result result = 1;
inline bool UpdateGroupInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGroupInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGroupInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGroupInfoResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& UpdateGroupInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupInfoResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* UpdateGroupInfoResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateGroupInfoResponse.result)
  return result_;
}
inline ::umsProtocol::Result* UpdateGroupInfoResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void UpdateGroupInfoResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateGroupInfoResponse.result)
}

// -------------------------------------------------------------------

// UpdateGroupOptionRequest

// required uint64 user_id = 1;
inline bool UpdateGroupOptionRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGroupOptionRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGroupOptionRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGroupOptionRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateGroupOptionRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupOptionRequest.user_id)
  return user_id_;
}
inline void UpdateGroupOptionRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupOptionRequest.user_id)
}

// required uint64 group_id = 2;
inline bool UpdateGroupOptionRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateGroupOptionRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateGroupOptionRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateGroupOptionRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 UpdateGroupOptionRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupOptionRequest.group_id)
  return group_id_;
}
inline void UpdateGroupOptionRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupOptionRequest.group_id)
}

// optional uint32 verify_type = 3;
inline bool UpdateGroupOptionRequest::has_verify_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateGroupOptionRequest::set_has_verify_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateGroupOptionRequest::clear_has_verify_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateGroupOptionRequest::clear_verify_type() {
  verify_type_ = 0u;
  clear_has_verify_type();
}
inline ::google::protobuf::uint32 UpdateGroupOptionRequest::verify_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupOptionRequest.verify_type)
  return verify_type_;
}
inline void UpdateGroupOptionRequest::set_verify_type(::google::protobuf::uint32 value) {
  set_has_verify_type();
  verify_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupOptionRequest.verify_type)
}

// optional uint64 channel_id = 4;
inline bool UpdateGroupOptionRequest::has_channel_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateGroupOptionRequest::set_has_channel_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateGroupOptionRequest::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateGroupOptionRequest::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 UpdateGroupOptionRequest::channel_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupOptionRequest.channel_id)
  return channel_id_;
}
inline void UpdateGroupOptionRequest::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupOptionRequest.channel_id)
}

// -------------------------------------------------------------------

// UpdateGroupOptionResponse

// required .umsProtocol.Result result = 1;
inline bool UpdateGroupOptionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGroupOptionResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGroupOptionResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGroupOptionResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& UpdateGroupOptionResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupOptionResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* UpdateGroupOptionResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateGroupOptionResponse.result)
  return result_;
}
inline ::umsProtocol::Result* UpdateGroupOptionResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void UpdateGroupOptionResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateGroupOptionResponse.result)
}

// -------------------------------------------------------------------

// UpdateGroupNoticeRequest

// required uint64 user_id = 1;
inline bool UpdateGroupNoticeRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGroupNoticeRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGroupNoticeRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGroupNoticeRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateGroupNoticeRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupNoticeRequest.user_id)
  return user_id_;
}
inline void UpdateGroupNoticeRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupNoticeRequest.user_id)
}

// required uint64 group_id = 2;
inline bool UpdateGroupNoticeRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateGroupNoticeRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateGroupNoticeRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateGroupNoticeRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 UpdateGroupNoticeRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupNoticeRequest.group_id)
  return group_id_;
}
inline void UpdateGroupNoticeRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupNoticeRequest.group_id)
}

// optional string notice = 3;
inline bool UpdateGroupNoticeRequest::has_notice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateGroupNoticeRequest::set_has_notice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateGroupNoticeRequest::clear_has_notice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateGroupNoticeRequest::clear_notice() {
  if (notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& UpdateGroupNoticeRequest::notice() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupNoticeRequest.notice)
  return *notice_;
}
inline void UpdateGroupNoticeRequest::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateGroupNoticeRequest.notice)
}
inline void UpdateGroupNoticeRequest::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateGroupNoticeRequest.notice)
}
inline void UpdateGroupNoticeRequest::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateGroupNoticeRequest.notice)
}
inline ::std::string* UpdateGroupNoticeRequest::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateGroupNoticeRequest.notice)
  return notice_;
}
inline ::std::string* UpdateGroupNoticeRequest::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateGroupNoticeRequest::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateGroupNoticeRequest.notice)
}

// -------------------------------------------------------------------

// UpdateGroupNoticeResponse

// required .umsProtocol.Result result = 1;
inline bool UpdateGroupNoticeResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGroupNoticeResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGroupNoticeResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGroupNoticeResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& UpdateGroupNoticeResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateGroupNoticeResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* UpdateGroupNoticeResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateGroupNoticeResponse.result)
  return result_;
}
inline ::umsProtocol::Result* UpdateGroupNoticeResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void UpdateGroupNoticeResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateGroupNoticeResponse.result)
}

// -------------------------------------------------------------------

// GetGroupInfoRequest

// required uint64 user_id = 1;
inline bool GetGroupInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoRequest.user_id)
  return user_id_;
}
inline void GetGroupInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupInfoRequest.user_id)
}

// required uint64 group_id = 2;
inline bool GetGroupInfoRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupInfoRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupInfoRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupInfoRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupInfoRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoRequest.group_id)
  return group_id_;
}
inline void GetGroupInfoRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupInfoRequest.group_id)
}

// -------------------------------------------------------------------

// GetGroupInfoResponse

// optional uint64 user_id = 1;
inline bool GetGroupInfoResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupInfoResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupInfoResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupInfoResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupInfoResponse::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoResponse.user_id)
  return user_id_;
}
inline void GetGroupInfoResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupInfoResponse.user_id)
}

// optional uint64 group_id = 2;
inline bool GetGroupInfoResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupInfoResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupInfoResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupInfoResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupInfoResponse::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoResponse.group_id)
  return group_id_;
}
inline void GetGroupInfoResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupInfoResponse.group_id)
}

// optional string group_name = 3;
inline bool GetGroupInfoResponse::has_group_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetGroupInfoResponse::set_has_group_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetGroupInfoResponse::clear_has_group_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetGroupInfoResponse::clear_group_name() {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_->clear();
  }
  clear_has_group_name();
}
inline const ::std::string& GetGroupInfoResponse::group_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoResponse.group_name)
  return *group_name_;
}
inline void GetGroupInfoResponse::set_group_name(const ::std::string& value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupInfoResponse.group_name)
}
inline void GetGroupInfoResponse::set_group_name(const char* value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetGroupInfoResponse.group_name)
}
inline void GetGroupInfoResponse::set_group_name(const char* value, size_t size) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetGroupInfoResponse.group_name)
}
inline ::std::string* GetGroupInfoResponse::mutable_group_name() {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupInfoResponse.group_name)
  return group_name_;
}
inline ::std::string* GetGroupInfoResponse::release_group_name() {
  clear_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_name_;
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupInfoResponse::set_allocated_group_name(::std::string* group_name) {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_name_;
  }
  if (group_name) {
    set_has_group_name();
    group_name_ = group_name;
  } else {
    clear_has_group_name();
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupInfoResponse.group_name)
}

// optional string remark = 4;
inline bool GetGroupInfoResponse::has_remark() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetGroupInfoResponse::set_has_remark() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetGroupInfoResponse::clear_has_remark() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetGroupInfoResponse::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& GetGroupInfoResponse::remark() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoResponse.remark)
  return *remark_;
}
inline void GetGroupInfoResponse::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupInfoResponse.remark)
}
inline void GetGroupInfoResponse::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetGroupInfoResponse.remark)
}
inline void GetGroupInfoResponse::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetGroupInfoResponse.remark)
}
inline ::std::string* GetGroupInfoResponse::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupInfoResponse.remark)
  return remark_;
}
inline ::std::string* GetGroupInfoResponse::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupInfoResponse::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupInfoResponse.remark)
}

// optional uint32 type = 5;
inline bool GetGroupInfoResponse::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetGroupInfoResponse::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetGroupInfoResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetGroupInfoResponse::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GetGroupInfoResponse::type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoResponse.type)
  return type_;
}
inline void GetGroupInfoResponse::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupInfoResponse.type)
}

// optional string group_intro = 6;
inline bool GetGroupInfoResponse::has_group_intro() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetGroupInfoResponse::set_has_group_intro() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetGroupInfoResponse::clear_has_group_intro() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetGroupInfoResponse::clear_group_intro() {
  if (group_intro_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_->clear();
  }
  clear_has_group_intro();
}
inline const ::std::string& GetGroupInfoResponse::group_intro() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoResponse.group_intro)
  return *group_intro_;
}
inline void GetGroupInfoResponse::set_group_intro(const ::std::string& value) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupInfoResponse.group_intro)
}
inline void GetGroupInfoResponse::set_group_intro(const char* value) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetGroupInfoResponse.group_intro)
}
inline void GetGroupInfoResponse::set_group_intro(const char* value, size_t size) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetGroupInfoResponse.group_intro)
}
inline ::std::string* GetGroupInfoResponse::mutable_group_intro() {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupInfoResponse.group_intro)
  return group_intro_;
}
inline ::std::string* GetGroupInfoResponse::release_group_intro() {
  clear_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_intro_;
    group_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupInfoResponse::set_allocated_group_intro(::std::string* group_intro) {
  if (group_intro_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_intro_;
  }
  if (group_intro) {
    set_has_group_intro();
    group_intro_ = group_intro;
  } else {
    clear_has_group_intro();
    group_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupInfoResponse.group_intro)
}

// optional string group_notice = 7;
inline bool GetGroupInfoResponse::has_group_notice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetGroupInfoResponse::set_has_group_notice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetGroupInfoResponse::clear_has_group_notice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetGroupInfoResponse::clear_group_notice() {
  if (group_notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_->clear();
  }
  clear_has_group_notice();
}
inline const ::std::string& GetGroupInfoResponse::group_notice() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoResponse.group_notice)
  return *group_notice_;
}
inline void GetGroupInfoResponse::set_group_notice(const ::std::string& value) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupInfoResponse.group_notice)
}
inline void GetGroupInfoResponse::set_group_notice(const char* value) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetGroupInfoResponse.group_notice)
}
inline void GetGroupInfoResponse::set_group_notice(const char* value, size_t size) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetGroupInfoResponse.group_notice)
}
inline ::std::string* GetGroupInfoResponse::mutable_group_notice() {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupInfoResponse.group_notice)
  return group_notice_;
}
inline ::std::string* GetGroupInfoResponse::release_group_notice() {
  clear_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_notice_;
    group_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupInfoResponse::set_allocated_group_notice(::std::string* group_notice) {
  if (group_notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_notice_;
  }
  if (group_notice) {
    set_has_group_notice();
    group_notice_ = group_notice;
  } else {
    clear_has_group_notice();
    group_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupInfoResponse.group_notice)
}

// optional string avatar = 8;
inline bool GetGroupInfoResponse::has_avatar() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetGroupInfoResponse::set_has_avatar() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetGroupInfoResponse::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetGroupInfoResponse::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& GetGroupInfoResponse::avatar() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoResponse.avatar)
  return *avatar_;
}
inline void GetGroupInfoResponse::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupInfoResponse.avatar)
}
inline void GetGroupInfoResponse::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetGroupInfoResponse.avatar)
}
inline void GetGroupInfoResponse::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetGroupInfoResponse.avatar)
}
inline ::std::string* GetGroupInfoResponse::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupInfoResponse.avatar)
  return avatar_;
}
inline ::std::string* GetGroupInfoResponse::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupInfoResponse::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupInfoResponse.avatar)
}

// required .umsProtocol.Result result = 9;
inline bool GetGroupInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetGroupInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetGroupInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetGroupInfoResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& GetGroupInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* GetGroupInfoResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupInfoResponse.result)
  return result_;
}
inline ::umsProtocol::Result* GetGroupInfoResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetGroupInfoResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupInfoResponse.result)
}

// optional uint32 sub_type = 10;
inline bool GetGroupInfoResponse::has_sub_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GetGroupInfoResponse::set_has_sub_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GetGroupInfoResponse::clear_has_sub_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GetGroupInfoResponse::clear_sub_type() {
  sub_type_ = 0u;
  clear_has_sub_type();
}
inline ::google::protobuf::uint32 GetGroupInfoResponse::sub_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoResponse.sub_type)
  return sub_type_;
}
inline void GetGroupInfoResponse::set_sub_type(::google::protobuf::uint32 value) {
  set_has_sub_type();
  sub_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupInfoResponse.sub_type)
}

// optional uint64 group_number = 11;
inline bool GetGroupInfoResponse::has_group_number() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GetGroupInfoResponse::set_has_group_number() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GetGroupInfoResponse::clear_has_group_number() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GetGroupInfoResponse::clear_group_number() {
  group_number_ = GOOGLE_ULONGLONG(0);
  clear_has_group_number();
}
inline ::google::protobuf::uint64 GetGroupInfoResponse::group_number() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoResponse.group_number)
  return group_number_;
}
inline void GetGroupInfoResponse::set_group_number(::google::protobuf::uint64 value) {
  set_has_group_number();
  group_number_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupInfoResponse.group_number)
}

// optional uint32 avatar_id = 12;
inline bool GetGroupInfoResponse::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GetGroupInfoResponse::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GetGroupInfoResponse::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GetGroupInfoResponse::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 GetGroupInfoResponse::avatar_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoResponse.avatar_id)
  return avatar_id_;
}
inline void GetGroupInfoResponse::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupInfoResponse.avatar_id)
}

// optional uint64 owner_id = 13;
inline bool GetGroupInfoResponse::has_owner_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GetGroupInfoResponse::set_has_owner_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GetGroupInfoResponse::clear_has_owner_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GetGroupInfoResponse::clear_owner_id() {
  owner_id_ = GOOGLE_ULONGLONG(0);
  clear_has_owner_id();
}
inline ::google::protobuf::uint64 GetGroupInfoResponse::owner_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupInfoResponse.owner_id)
  return owner_id_;
}
inline void GetGroupInfoResponse::set_owner_id(::google::protobuf::uint64 value) {
  set_has_owner_id();
  owner_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupInfoResponse.owner_id)
}

// -------------------------------------------------------------------

// UpdateUserInfoRequest

// required uint64 user_id = 1;
inline bool UpdateUserInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateUserInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateUserInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateUserInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateUserInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoRequest.user_id)
  return user_id_;
}
inline void UpdateUserInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserInfoRequest.user_id)
}

// optional string nick_name = 2;
inline bool UpdateUserInfoRequest::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateUserInfoRequest::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateUserInfoRequest::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateUserInfoRequest::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& UpdateUserInfoRequest::nick_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoRequest.nick_name)
  return *nick_name_;
}
inline void UpdateUserInfoRequest::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserInfoRequest.nick_name)
}
inline void UpdateUserInfoRequest::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateUserInfoRequest.nick_name)
}
inline void UpdateUserInfoRequest::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateUserInfoRequest.nick_name)
}
inline ::std::string* UpdateUserInfoRequest::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserInfoRequest.nick_name)
  return nick_name_;
}
inline ::std::string* UpdateUserInfoRequest::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserInfoRequest.nick_name)
}

// optional uint32 sex = 3;
inline bool UpdateUserInfoRequest::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateUserInfoRequest::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateUserInfoRequest::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateUserInfoRequest::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 UpdateUserInfoRequest::sex() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoRequest.sex)
  return sex_;
}
inline void UpdateUserInfoRequest::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserInfoRequest.sex)
}

// optional string mobile = 4;
inline bool UpdateUserInfoRequest::has_mobile() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateUserInfoRequest::set_has_mobile() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateUserInfoRequest::clear_has_mobile() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateUserInfoRequest::clear_mobile() {
  if (mobile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_->clear();
  }
  clear_has_mobile();
}
inline const ::std::string& UpdateUserInfoRequest::mobile() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoRequest.mobile)
  return *mobile_;
}
inline void UpdateUserInfoRequest::set_mobile(const ::std::string& value) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserInfoRequest.mobile)
}
inline void UpdateUserInfoRequest::set_mobile(const char* value) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateUserInfoRequest.mobile)
}
inline void UpdateUserInfoRequest::set_mobile(const char* value, size_t size) {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  mobile_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateUserInfoRequest.mobile)
}
inline ::std::string* UpdateUserInfoRequest::mutable_mobile() {
  set_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobile_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserInfoRequest.mobile)
  return mobile_;
}
inline ::std::string* UpdateUserInfoRequest::release_mobile() {
  clear_has_mobile();
  if (mobile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mobile_;
    mobile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_mobile(::std::string* mobile) {
  if (mobile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mobile_;
  }
  if (mobile) {
    set_has_mobile();
    mobile_ = mobile;
  } else {
    clear_has_mobile();
    mobile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserInfoRequest.mobile)
}

// optional string birthday = 5;
inline bool UpdateUserInfoRequest::has_birthday() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateUserInfoRequest::set_has_birthday() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateUserInfoRequest::clear_has_birthday() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateUserInfoRequest::clear_birthday() {
  if (birthday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_->clear();
  }
  clear_has_birthday();
}
inline const ::std::string& UpdateUserInfoRequest::birthday() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoRequest.birthday)
  return *birthday_;
}
inline void UpdateUserInfoRequest::set_birthday(const ::std::string& value) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserInfoRequest.birthday)
}
inline void UpdateUserInfoRequest::set_birthday(const char* value) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateUserInfoRequest.birthday)
}
inline void UpdateUserInfoRequest::set_birthday(const char* value, size_t size) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateUserInfoRequest.birthday)
}
inline ::std::string* UpdateUserInfoRequest::mutable_birthday() {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    birthday_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserInfoRequest.birthday)
  return birthday_;
}
inline ::std::string* UpdateUserInfoRequest::release_birthday() {
  clear_has_birthday();
  if (birthday_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = birthday_;
    birthday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_birthday(::std::string* birthday) {
  if (birthday_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete birthday_;
  }
  if (birthday) {
    set_has_birthday();
    birthday_ = birthday;
  } else {
    clear_has_birthday();
    birthday_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserInfoRequest.birthday)
}

// optional string email = 6;
inline bool UpdateUserInfoRequest::has_email() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateUserInfoRequest::set_has_email() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateUserInfoRequest::clear_has_email() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateUserInfoRequest::clear_email() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& UpdateUserInfoRequest::email() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoRequest.email)
  return *email_;
}
inline void UpdateUserInfoRequest::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserInfoRequest.email)
}
inline void UpdateUserInfoRequest::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateUserInfoRequest.email)
}
inline void UpdateUserInfoRequest::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateUserInfoRequest.email)
}
inline ::std::string* UpdateUserInfoRequest::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserInfoRequest.email)
  return email_;
}
inline ::std::string* UpdateUserInfoRequest::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserInfoRequest.email)
}

// optional uint32 age = 7;
inline bool UpdateUserInfoRequest::has_age() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UpdateUserInfoRequest::set_has_age() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UpdateUserInfoRequest::clear_has_age() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UpdateUserInfoRequest::clear_age() {
  age_ = 0u;
  clear_has_age();
}
inline ::google::protobuf::uint32 UpdateUserInfoRequest::age() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoRequest.age)
  return age_;
}
inline void UpdateUserInfoRequest::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserInfoRequest.age)
}

// optional uint32 constellation = 8;
inline bool UpdateUserInfoRequest::has_constellation() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UpdateUserInfoRequest::set_has_constellation() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UpdateUserInfoRequest::clear_has_constellation() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UpdateUserInfoRequest::clear_constellation() {
  constellation_ = 0u;
  clear_has_constellation();
}
inline ::google::protobuf::uint32 UpdateUserInfoRequest::constellation() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoRequest.constellation)
  return constellation_;
}
inline void UpdateUserInfoRequest::set_constellation(::google::protobuf::uint32 value) {
  set_has_constellation();
  constellation_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserInfoRequest.constellation)
}

// optional string sign = 9;
inline bool UpdateUserInfoRequest::has_sign() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UpdateUserInfoRequest::set_has_sign() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UpdateUserInfoRequest::clear_has_sign() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UpdateUserInfoRequest::clear_sign() {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_->clear();
  }
  clear_has_sign();
}
inline const ::std::string& UpdateUserInfoRequest::sign() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoRequest.sign)
  return *sign_;
}
inline void UpdateUserInfoRequest::set_sign(const ::std::string& value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserInfoRequest.sign)
}
inline void UpdateUserInfoRequest::set_sign(const char* value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateUserInfoRequest.sign)
}
inline void UpdateUserInfoRequest::set_sign(const char* value, size_t size) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateUserInfoRequest.sign)
}
inline ::std::string* UpdateUserInfoRequest::mutable_sign() {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserInfoRequest.sign)
  return sign_;
}
inline ::std::string* UpdateUserInfoRequest::release_sign() {
  clear_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sign_;
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_sign(::std::string* sign) {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sign_;
  }
  if (sign) {
    set_has_sign();
    sign_ = sign;
  } else {
    clear_has_sign();
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserInfoRequest.sign)
}

// optional string like = 10;
inline bool UpdateUserInfoRequest::has_like() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UpdateUserInfoRequest::set_has_like() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UpdateUserInfoRequest::clear_has_like() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UpdateUserInfoRequest::clear_like() {
  if (like_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_->clear();
  }
  clear_has_like();
}
inline const ::std::string& UpdateUserInfoRequest::like() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoRequest.like)
  return *like_;
}
inline void UpdateUserInfoRequest::set_like(const ::std::string& value) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserInfoRequest.like)
}
inline void UpdateUserInfoRequest::set_like(const char* value) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateUserInfoRequest.like)
}
inline void UpdateUserInfoRequest::set_like(const char* value, size_t size) {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  like_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateUserInfoRequest.like)
}
inline ::std::string* UpdateUserInfoRequest::mutable_like() {
  set_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    like_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserInfoRequest.like)
  return like_;
}
inline ::std::string* UpdateUserInfoRequest::release_like() {
  clear_has_like();
  if (like_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = like_;
    like_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_like(::std::string* like) {
  if (like_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete like_;
  }
  if (like) {
    set_has_like();
    like_ = like;
  } else {
    clear_has_like();
    like_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserInfoRequest.like)
}

// optional string city = 11;
inline bool UpdateUserInfoRequest::has_city() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UpdateUserInfoRequest::set_has_city() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UpdateUserInfoRequest::clear_has_city() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UpdateUserInfoRequest::clear_city() {
  if (city_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_->clear();
  }
  clear_has_city();
}
inline const ::std::string& UpdateUserInfoRequest::city() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoRequest.city)
  return *city_;
}
inline void UpdateUserInfoRequest::set_city(const ::std::string& value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserInfoRequest.city)
}
inline void UpdateUserInfoRequest::set_city(const char* value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateUserInfoRequest.city)
}
inline void UpdateUserInfoRequest::set_city(const char* value, size_t size) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  city_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateUserInfoRequest.city)
}
inline ::std::string* UpdateUserInfoRequest::mutable_city() {
  set_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    city_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserInfoRequest.city)
  return city_;
}
inline ::std::string* UpdateUserInfoRequest::release_city() {
  clear_has_city();
  if (city_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = city_;
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_city(::std::string* city) {
  if (city_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete city_;
  }
  if (city) {
    set_has_city();
    city_ = city;
  } else {
    clear_has_city();
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserInfoRequest.city)
}

// optional string personal_desc = 12;
inline bool UpdateUserInfoRequest::has_personal_desc() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UpdateUserInfoRequest::set_has_personal_desc() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UpdateUserInfoRequest::clear_has_personal_desc() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UpdateUserInfoRequest::clear_personal_desc() {
  if (personal_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_->clear();
  }
  clear_has_personal_desc();
}
inline const ::std::string& UpdateUserInfoRequest::personal_desc() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoRequest.personal_desc)
  return *personal_desc_;
}
inline void UpdateUserInfoRequest::set_personal_desc(const ::std::string& value) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserInfoRequest.personal_desc)
}
inline void UpdateUserInfoRequest::set_personal_desc(const char* value) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateUserInfoRequest.personal_desc)
}
inline void UpdateUserInfoRequest::set_personal_desc(const char* value, size_t size) {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  personal_desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateUserInfoRequest.personal_desc)
}
inline ::std::string* UpdateUserInfoRequest::mutable_personal_desc() {
  set_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    personal_desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserInfoRequest.personal_desc)
  return personal_desc_;
}
inline ::std::string* UpdateUserInfoRequest::release_personal_desc() {
  clear_has_personal_desc();
  if (personal_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = personal_desc_;
    personal_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_personal_desc(::std::string* personal_desc) {
  if (personal_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete personal_desc_;
  }
  if (personal_desc) {
    set_has_personal_desc();
    personal_desc_ = personal_desc;
  } else {
    clear_has_personal_desc();
    personal_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserInfoRequest.personal_desc)
}

// optional string real_name = 13;
inline bool UpdateUserInfoRequest::has_real_name() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void UpdateUserInfoRequest::set_has_real_name() {
  _has_bits_[0] |= 0x00001000u;
}
inline void UpdateUserInfoRequest::clear_has_real_name() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void UpdateUserInfoRequest::clear_real_name() {
  if (real_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_->clear();
  }
  clear_has_real_name();
}
inline const ::std::string& UpdateUserInfoRequest::real_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoRequest.real_name)
  return *real_name_;
}
inline void UpdateUserInfoRequest::set_real_name(const ::std::string& value) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserInfoRequest.real_name)
}
inline void UpdateUserInfoRequest::set_real_name(const char* value) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateUserInfoRequest.real_name)
}
inline void UpdateUserInfoRequest::set_real_name(const char* value, size_t size) {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  real_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateUserInfoRequest.real_name)
}
inline ::std::string* UpdateUserInfoRequest::mutable_real_name() {
  set_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    real_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserInfoRequest.real_name)
  return real_name_;
}
inline ::std::string* UpdateUserInfoRequest::release_real_name() {
  clear_has_real_name();
  if (real_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = real_name_;
    real_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_real_name(::std::string* real_name) {
  if (real_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete real_name_;
  }
  if (real_name) {
    set_has_real_name();
    real_name_ = real_name;
  } else {
    clear_has_real_name();
    real_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserInfoRequest.real_name)
}

// optional string token = 14;
inline bool UpdateUserInfoRequest::has_token() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void UpdateUserInfoRequest::set_has_token() {
  _has_bits_[0] |= 0x00002000u;
}
inline void UpdateUserInfoRequest::clear_has_token() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void UpdateUserInfoRequest::clear_token() {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& UpdateUserInfoRequest::token() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoRequest.token)
  return *token_;
}
inline void UpdateUserInfoRequest::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserInfoRequest.token)
}
inline void UpdateUserInfoRequest::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateUserInfoRequest.token)
}
inline void UpdateUserInfoRequest::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateUserInfoRequest.token)
}
inline ::std::string* UpdateUserInfoRequest::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserInfoRequest.token)
  return token_;
}
inline ::std::string* UpdateUserInfoRequest::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserInfoRequest::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserInfoRequest.token)
}

// -------------------------------------------------------------------

// UpdateUserInfoResponse

// required .umsProtocol.Result result = 1;
inline bool UpdateUserInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateUserInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateUserInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateUserInfoResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& UpdateUserInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserInfoResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* UpdateUserInfoResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserInfoResponse.result)
  return result_;
}
inline ::umsProtocol::Result* UpdateUserInfoResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void UpdateUserInfoResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserInfoResponse.result)
}

// -------------------------------------------------------------------

// UpdateUserMoodRequest

// required uint64 user_id = 1;
inline bool UpdateUserMoodRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateUserMoodRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateUserMoodRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateUserMoodRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateUserMoodRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserMoodRequest.user_id)
  return user_id_;
}
inline void UpdateUserMoodRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserMoodRequest.user_id)
}

// optional string mood = 2;
inline bool UpdateUserMoodRequest::has_mood() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateUserMoodRequest::set_has_mood() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateUserMoodRequest::clear_has_mood() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateUserMoodRequest::clear_mood() {
  if (mood_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mood_->clear();
  }
  clear_has_mood();
}
inline const ::std::string& UpdateUserMoodRequest::mood() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserMoodRequest.mood)
  return *mood_;
}
inline void UpdateUserMoodRequest::set_mood(const ::std::string& value) {
  set_has_mood();
  if (mood_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mood_ = new ::std::string;
  }
  mood_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserMoodRequest.mood)
}
inline void UpdateUserMoodRequest::set_mood(const char* value) {
  set_has_mood();
  if (mood_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mood_ = new ::std::string;
  }
  mood_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateUserMoodRequest.mood)
}
inline void UpdateUserMoodRequest::set_mood(const char* value, size_t size) {
  set_has_mood();
  if (mood_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mood_ = new ::std::string;
  }
  mood_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateUserMoodRequest.mood)
}
inline ::std::string* UpdateUserMoodRequest::mutable_mood() {
  set_has_mood();
  if (mood_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mood_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserMoodRequest.mood)
  return mood_;
}
inline ::std::string* UpdateUserMoodRequest::release_mood() {
  clear_has_mood();
  if (mood_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mood_;
    mood_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserMoodRequest::set_allocated_mood(::std::string* mood) {
  if (mood_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mood_;
  }
  if (mood) {
    set_has_mood();
    mood_ = mood;
  } else {
    clear_has_mood();
    mood_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserMoodRequest.mood)
}

// -------------------------------------------------------------------

// UpdateUserMoodResponse

// required .umsProtocol.Result result = 1;
inline bool UpdateUserMoodResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateUserMoodResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateUserMoodResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateUserMoodResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& UpdateUserMoodResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserMoodResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* UpdateUserMoodResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserMoodResponse.result)
  return result_;
}
inline ::umsProtocol::Result* UpdateUserMoodResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void UpdateUserMoodResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserMoodResponse.result)
}

// -------------------------------------------------------------------

// UpdateUserNickNameRequest

// required uint64 user_id = 1;
inline bool UpdateUserNickNameRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateUserNickNameRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateUserNickNameRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateUserNickNameRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateUserNickNameRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserNickNameRequest.user_id)
  return user_id_;
}
inline void UpdateUserNickNameRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserNickNameRequest.user_id)
}

// optional string nick_name = 2;
inline bool UpdateUserNickNameRequest::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateUserNickNameRequest::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateUserNickNameRequest::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateUserNickNameRequest::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& UpdateUserNickNameRequest::nick_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserNickNameRequest.nick_name)
  return *nick_name_;
}
inline void UpdateUserNickNameRequest::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateUserNickNameRequest.nick_name)
}
inline void UpdateUserNickNameRequest::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateUserNickNameRequest.nick_name)
}
inline void UpdateUserNickNameRequest::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateUserNickNameRequest.nick_name)
}
inline ::std::string* UpdateUserNickNameRequest::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserNickNameRequest.nick_name)
  return nick_name_;
}
inline ::std::string* UpdateUserNickNameRequest::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateUserNickNameRequest::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserNickNameRequest.nick_name)
}

// -------------------------------------------------------------------

// UpdateUserNickNameResponse

// required .umsProtocol.Result result = 1;
inline bool UpdateUserNickNameResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateUserNickNameResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateUserNickNameResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateUserNickNameResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& UpdateUserNickNameResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateUserNickNameResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* UpdateUserNickNameResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateUserNickNameResponse.result)
  return result_;
}
inline ::umsProtocol::Result* UpdateUserNickNameResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void UpdateUserNickNameResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateUserNickNameResponse.result)
}

// -------------------------------------------------------------------

// UpdateAvatarRequest

// required uint64 user_id = 1;
inline bool UpdateAvatarRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateAvatarRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateAvatarRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateAvatarRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UpdateAvatarRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateAvatarRequest.user_id)
  return user_id_;
}
inline void UpdateAvatarRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateAvatarRequest.user_id)
}

// optional uint32 avatar_id = 2;
inline bool UpdateAvatarRequest::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateAvatarRequest::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateAvatarRequest::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateAvatarRequest::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 UpdateAvatarRequest::avatar_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateAvatarRequest.avatar_id)
  return avatar_id_;
}
inline void UpdateAvatarRequest::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateAvatarRequest.avatar_id)
}

// optional string avatar = 3;
inline bool UpdateAvatarRequest::has_avatar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateAvatarRequest::set_has_avatar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateAvatarRequest::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateAvatarRequest::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& UpdateAvatarRequest::avatar() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateAvatarRequest.avatar)
  return *avatar_;
}
inline void UpdateAvatarRequest::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.UpdateAvatarRequest.avatar)
}
inline void UpdateAvatarRequest::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.UpdateAvatarRequest.avatar)
}
inline void UpdateAvatarRequest::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.UpdateAvatarRequest.avatar)
}
inline ::std::string* UpdateAvatarRequest::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateAvatarRequest.avatar)
  return avatar_;
}
inline ::std::string* UpdateAvatarRequest::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UpdateAvatarRequest::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateAvatarRequest.avatar)
}

// -------------------------------------------------------------------

// UpdateAvatarResponse

// required .umsProtocol.Result result = 1;
inline bool UpdateAvatarResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateAvatarResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateAvatarResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateAvatarResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& UpdateAvatarResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.UpdateAvatarResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* UpdateAvatarResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.UpdateAvatarResponse.result)
  return result_;
}
inline ::umsProtocol::Result* UpdateAvatarResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void UpdateAvatarResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.UpdateAvatarResponse.result)
}

// -------------------------------------------------------------------

// GetGroupUserInfoRequest

// required uint64 group_id = 1;
inline bool GetGroupUserInfoRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupUserInfoRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupUserInfoRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupUserInfoRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupUserInfoRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserInfoRequest.group_id)
  return group_id_;
}
inline void GetGroupUserInfoRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserInfoRequest.group_id)
}

// repeated uint64 user_id = 2;
inline int GetGroupUserInfoRequest::user_id_size() const {
  return user_id_.size();
}
inline void GetGroupUserInfoRequest::clear_user_id() {
  user_id_.Clear();
}
inline ::google::protobuf::uint64 GetGroupUserInfoRequest::user_id(int index) const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserInfoRequest.user_id)
  return user_id_.Get(index);
}
inline void GetGroupUserInfoRequest::set_user_id(int index, ::google::protobuf::uint64 value) {
  user_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserInfoRequest.user_id)
}
inline void GetGroupUserInfoRequest::add_user_id(::google::protobuf::uint64 value) {
  user_id_.Add(value);
  // @@protoc_insertion_point(field_add:umsProtocol.GetGroupUserInfoRequest.user_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetGroupUserInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_list:umsProtocol.GetGroupUserInfoRequest.user_id)
  return user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetGroupUserInfoRequest::mutable_user_id() {
  // @@protoc_insertion_point(field_mutable_list:umsProtocol.GetGroupUserInfoRequest.user_id)
  return &user_id_;
}

// -------------------------------------------------------------------

// GetGroupUserInfoResponse

// required .umsProtocol.Result result = 1;
inline bool GetGroupUserInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupUserInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupUserInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupUserInfoResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& GetGroupUserInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserInfoResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* GetGroupUserInfoResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupUserInfoResponse.result)
  return result_;
}
inline ::umsProtocol::Result* GetGroupUserInfoResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetGroupUserInfoResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupUserInfoResponse.result)
}

// optional uint64 group_id = 2;
inline bool GetGroupUserInfoResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupUserInfoResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupUserInfoResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupUserInfoResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupUserInfoResponse::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserInfoResponse.group_id)
  return group_id_;
}
inline void GetGroupUserInfoResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserInfoResponse.group_id)
}

// repeated .umsProtocol.GroupUserListItem group_members = 3;
inline int GetGroupUserInfoResponse::group_members_size() const {
  return group_members_.size();
}
inline void GetGroupUserInfoResponse::clear_group_members() {
  group_members_.Clear();
}
inline const ::umsProtocol::GroupUserListItem& GetGroupUserInfoResponse::group_members(int index) const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserInfoResponse.group_members)
  return group_members_.Get(index);
}
inline ::umsProtocol::GroupUserListItem* GetGroupUserInfoResponse::mutable_group_members(int index) {
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupUserInfoResponse.group_members)
  return group_members_.Mutable(index);
}
inline ::umsProtocol::GroupUserListItem* GetGroupUserInfoResponse::add_group_members() {
  // @@protoc_insertion_point(field_add:umsProtocol.GetGroupUserInfoResponse.group_members)
  return group_members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupUserListItem >&
GetGroupUserInfoResponse::group_members() const {
  // @@protoc_insertion_point(field_list:umsProtocol.GetGroupUserInfoResponse.group_members)
  return group_members_;
}
inline ::google::protobuf::RepeatedPtrField< ::umsProtocol::GroupUserListItem >*
GetGroupUserInfoResponse::mutable_group_members() {
  // @@protoc_insertion_point(field_mutable_list:umsProtocol.GetGroupUserInfoResponse.group_members)
  return &group_members_;
}

// -------------------------------------------------------------------

// GetFriendBaseInfoRequest

// required uint64 user_id = 1;
inline bool GetFriendBaseInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFriendBaseInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFriendBaseInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFriendBaseInfoRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetFriendBaseInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendBaseInfoRequest.user_id)
  return user_id_;
}
inline void GetFriendBaseInfoRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendBaseInfoRequest.user_id)
}

// repeated uint64 friend_id = 2;
inline int GetFriendBaseInfoRequest::friend_id_size() const {
  return friend_id_.size();
}
inline void GetFriendBaseInfoRequest::clear_friend_id() {
  friend_id_.Clear();
}
inline ::google::protobuf::uint64 GetFriendBaseInfoRequest::friend_id(int index) const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendBaseInfoRequest.friend_id)
  return friend_id_.Get(index);
}
inline void GetFriendBaseInfoRequest::set_friend_id(int index, ::google::protobuf::uint64 value) {
  friend_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendBaseInfoRequest.friend_id)
}
inline void GetFriendBaseInfoRequest::add_friend_id(::google::protobuf::uint64 value) {
  friend_id_.Add(value);
  // @@protoc_insertion_point(field_add:umsProtocol.GetFriendBaseInfoRequest.friend_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetFriendBaseInfoRequest::friend_id() const {
  // @@protoc_insertion_point(field_list:umsProtocol.GetFriendBaseInfoRequest.friend_id)
  return friend_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetFriendBaseInfoRequest::mutable_friend_id() {
  // @@protoc_insertion_point(field_mutable_list:umsProtocol.GetFriendBaseInfoRequest.friend_id)
  return &friend_id_;
}

// -------------------------------------------------------------------

// FriendListItem

// required uint64 user_id = 1;
inline bool FriendListItem::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendListItem::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendListItem::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendListItem::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 FriendListItem::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.FriendListItem.user_id)
  return user_id_;
}
inline void FriendListItem::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.FriendListItem.user_id)
}

// optional string nick_name = 2;
inline bool FriendListItem::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendListItem::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendListItem::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendListItem::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& FriendListItem::nick_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.FriendListItem.nick_name)
  return *nick_name_;
}
inline void FriendListItem::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.FriendListItem.nick_name)
}
inline void FriendListItem::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.FriendListItem.nick_name)
}
inline void FriendListItem::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.FriendListItem.nick_name)
}
inline ::std::string* FriendListItem::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.FriendListItem.nick_name)
  return nick_name_;
}
inline ::std::string* FriendListItem::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendListItem::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.FriendListItem.nick_name)
}

// optional uint32 avatar_id = 3;
inline bool FriendListItem::has_avatar_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendListItem::set_has_avatar_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendListItem::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendListItem::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 FriendListItem::avatar_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.FriendListItem.avatar_id)
  return avatar_id_;
}
inline void FriendListItem::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.FriendListItem.avatar_id)
}

// optional string avatar = 4;
inline bool FriendListItem::has_avatar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendListItem::set_has_avatar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendListItem::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendListItem::clear_avatar() {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_->clear();
  }
  clear_has_avatar();
}
inline const ::std::string& FriendListItem::avatar() const {
  // @@protoc_insertion_point(field_get:umsProtocol.FriendListItem.avatar)
  return *avatar_;
}
inline void FriendListItem::set_avatar(const ::std::string& value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.FriendListItem.avatar)
}
inline void FriendListItem::set_avatar(const char* value) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.FriendListItem.avatar)
}
inline void FriendListItem::set_avatar(const char* value, size_t size) {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.FriendListItem.avatar)
}
inline ::std::string* FriendListItem::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.FriendListItem.avatar)
  return avatar_;
}
inline ::std::string* FriendListItem::release_avatar() {
  clear_has_avatar();
  if (avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_;
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendListItem::set_allocated_avatar(::std::string* avatar) {
  if (avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_;
  }
  if (avatar) {
    set_has_avatar();
    avatar_ = avatar;
  } else {
    clear_has_avatar();
    avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.FriendListItem.avatar)
}

// optional string sign = 5;
inline bool FriendListItem::has_sign() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendListItem::set_has_sign() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendListItem::clear_has_sign() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendListItem::clear_sign() {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_->clear();
  }
  clear_has_sign();
}
inline const ::std::string& FriendListItem::sign() const {
  // @@protoc_insertion_point(field_get:umsProtocol.FriendListItem.sign)
  return *sign_;
}
inline void FriendListItem::set_sign(const ::std::string& value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.FriendListItem.sign)
}
inline void FriendListItem::set_sign(const char* value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.FriendListItem.sign)
}
inline void FriendListItem::set_sign(const char* value, size_t size) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.FriendListItem.sign)
}
inline ::std::string* FriendListItem::mutable_sign() {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.FriendListItem.sign)
  return sign_;
}
inline ::std::string* FriendListItem::release_sign() {
  clear_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sign_;
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendListItem::set_allocated_sign(::std::string* sign) {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sign_;
  }
  if (sign) {
    set_has_sign();
    sign_ = sign;
  } else {
    clear_has_sign();
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.FriendListItem.sign)
}

// optional uint32 level = 6;
inline bool FriendListItem::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FriendListItem::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FriendListItem::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FriendListItem::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 FriendListItem::level() const {
  // @@protoc_insertion_point(field_get:umsProtocol.FriendListItem.level)
  return level_;
}
inline void FriendListItem::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.FriendListItem.level)
}

// -------------------------------------------------------------------

// GetFriendBaseInfoResponse

// required .umsProtocol.Result result = 1;
inline bool GetFriendBaseInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFriendBaseInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFriendBaseInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFriendBaseInfoResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& GetFriendBaseInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendBaseInfoResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* GetFriendBaseInfoResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendBaseInfoResponse.result)
  return result_;
}
inline ::umsProtocol::Result* GetFriendBaseInfoResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetFriendBaseInfoResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetFriendBaseInfoResponse.result)
}

// optional uint64 user_id = 2;
inline bool GetFriendBaseInfoResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFriendBaseInfoResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFriendBaseInfoResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFriendBaseInfoResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetFriendBaseInfoResponse::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendBaseInfoResponse.user_id)
  return user_id_;
}
inline void GetFriendBaseInfoResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetFriendBaseInfoResponse.user_id)
}

// repeated .umsProtocol.FriendListItem friend_item = 4;
inline int GetFriendBaseInfoResponse::friend_item_size() const {
  return friend_item_.size();
}
inline void GetFriendBaseInfoResponse::clear_friend_item() {
  friend_item_.Clear();
}
inline const ::umsProtocol::FriendListItem& GetFriendBaseInfoResponse::friend_item(int index) const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetFriendBaseInfoResponse.friend_item)
  return friend_item_.Get(index);
}
inline ::umsProtocol::FriendListItem* GetFriendBaseInfoResponse::mutable_friend_item(int index) {
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetFriendBaseInfoResponse.friend_item)
  return friend_item_.Mutable(index);
}
inline ::umsProtocol::FriendListItem* GetFriendBaseInfoResponse::add_friend_item() {
  // @@protoc_insertion_point(field_add:umsProtocol.GetFriendBaseInfoResponse.friend_item)
  return friend_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::umsProtocol::FriendListItem >&
GetFriendBaseInfoResponse::friend_item() const {
  // @@protoc_insertion_point(field_list:umsProtocol.GetFriendBaseInfoResponse.friend_item)
  return friend_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::umsProtocol::FriendListItem >*
GetFriendBaseInfoResponse::mutable_friend_item() {
  // @@protoc_insertion_point(field_mutable_list:umsProtocol.GetFriendBaseInfoResponse.friend_item)
  return &friend_item_;
}

// -------------------------------------------------------------------

// GetGroupOptionRequest

// required uint64 user_id = 1;
inline bool GetGroupOptionRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupOptionRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupOptionRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupOptionRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupOptionRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupOptionRequest.user_id)
  return user_id_;
}
inline void GetGroupOptionRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupOptionRequest.user_id)
}

// required uint64 group_id = 2;
inline bool GetGroupOptionRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupOptionRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupOptionRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupOptionRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupOptionRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupOptionRequest.group_id)
  return group_id_;
}
inline void GetGroupOptionRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupOptionRequest.group_id)
}

// -------------------------------------------------------------------

// GetGroupOptionResponse

// required .umsProtocol.Result result = 1;
inline bool GetGroupOptionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupOptionResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupOptionResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupOptionResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& GetGroupOptionResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupOptionResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* GetGroupOptionResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupOptionResponse.result)
  return result_;
}
inline ::umsProtocol::Result* GetGroupOptionResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetGroupOptionResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupOptionResponse.result)
}

// optional uint64 user_id = 2;
inline bool GetGroupOptionResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupOptionResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupOptionResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupOptionResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupOptionResponse::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupOptionResponse.user_id)
  return user_id_;
}
inline void GetGroupOptionResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupOptionResponse.user_id)
}

// optional uint64 group_id = 3;
inline bool GetGroupOptionResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetGroupOptionResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetGroupOptionResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetGroupOptionResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupOptionResponse::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupOptionResponse.group_id)
  return group_id_;
}
inline void GetGroupOptionResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupOptionResponse.group_id)
}

// optional uint32 verify_type = 4;
inline bool GetGroupOptionResponse::has_verify_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetGroupOptionResponse::set_has_verify_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetGroupOptionResponse::clear_has_verify_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetGroupOptionResponse::clear_verify_type() {
  verify_type_ = 0u;
  clear_has_verify_type();
}
inline ::google::protobuf::uint32 GetGroupOptionResponse::verify_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupOptionResponse.verify_type)
  return verify_type_;
}
inline void GetGroupOptionResponse::set_verify_type(::google::protobuf::uint32 value) {
  set_has_verify_type();
  verify_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupOptionResponse.verify_type)
}

// optional uint64 channel_id = 5;
inline bool GetGroupOptionResponse::has_channel_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetGroupOptionResponse::set_has_channel_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetGroupOptionResponse::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetGroupOptionResponse::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 GetGroupOptionResponse::channel_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupOptionResponse.channel_id)
  return channel_id_;
}
inline void GetGroupOptionResponse::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupOptionResponse.channel_id)
}

// optional int32 msg_mode = 6;
inline bool GetGroupOptionResponse::has_msg_mode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetGroupOptionResponse::set_has_msg_mode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetGroupOptionResponse::clear_has_msg_mode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetGroupOptionResponse::clear_msg_mode() {
  msg_mode_ = 0;
  clear_has_msg_mode();
}
inline ::google::protobuf::int32 GetGroupOptionResponse::msg_mode() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupOptionResponse.msg_mode)
  return msg_mode_;
}
inline void GetGroupOptionResponse::set_msg_mode(::google::protobuf::int32 value) {
  set_has_msg_mode();
  msg_mode_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupOptionResponse.msg_mode)
}

// optional int32 talk_mode = 7;
inline bool GetGroupOptionResponse::has_talk_mode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetGroupOptionResponse::set_has_talk_mode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetGroupOptionResponse::clear_has_talk_mode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetGroupOptionResponse::clear_talk_mode() {
  talk_mode_ = 0;
  clear_has_talk_mode();
}
inline ::google::protobuf::int32 GetGroupOptionResponse::talk_mode() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupOptionResponse.talk_mode)
  return talk_mode_;
}
inline void GetGroupOptionResponse::set_talk_mode(::google::protobuf::int32 value) {
  set_has_talk_mode();
  talk_mode_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupOptionResponse.talk_mode)
}

// -------------------------------------------------------------------

// GetGroupUserCardRequest

// required uint64 user_id = 1;
inline bool GetGroupUserCardRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupUserCardRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupUserCardRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupUserCardRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupUserCardRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserCardRequest.user_id)
  return user_id_;
}
inline void GetGroupUserCardRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserCardRequest.user_id)
}

// required uint64 group_id = 2;
inline bool GetGroupUserCardRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupUserCardRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupUserCardRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupUserCardRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupUserCardRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserCardRequest.group_id)
  return group_id_;
}
inline void GetGroupUserCardRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserCardRequest.group_id)
}

// -------------------------------------------------------------------

// GetGroupUserCardResponse

// required .umsProtocol.Result result = 1;
inline bool GetGroupUserCardResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupUserCardResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupUserCardResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupUserCardResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& GetGroupUserCardResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserCardResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* GetGroupUserCardResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupUserCardResponse.result)
  return result_;
}
inline ::umsProtocol::Result* GetGroupUserCardResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetGroupUserCardResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupUserCardResponse.result)
}

// optional uint64 user_id = 2;
inline bool GetGroupUserCardResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupUserCardResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupUserCardResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupUserCardResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupUserCardResponse::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserCardResponse.user_id)
  return user_id_;
}
inline void GetGroupUserCardResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserCardResponse.user_id)
}

// optional uint64 group_id = 3;
inline bool GetGroupUserCardResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetGroupUserCardResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetGroupUserCardResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetGroupUserCardResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupUserCardResponse::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserCardResponse.group_id)
  return group_id_;
}
inline void GetGroupUserCardResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserCardResponse.group_id)
}

// optional string nick_name = 4;
inline bool GetGroupUserCardResponse::has_nick_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetGroupUserCardResponse::set_has_nick_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetGroupUserCardResponse::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetGroupUserCardResponse::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& GetGroupUserCardResponse::nick_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserCardResponse.nick_name)
  return *nick_name_;
}
inline void GetGroupUserCardResponse::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserCardResponse.nick_name)
}
inline void GetGroupUserCardResponse::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetGroupUserCardResponse.nick_name)
}
inline void GetGroupUserCardResponse::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetGroupUserCardResponse.nick_name)
}
inline ::std::string* GetGroupUserCardResponse::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nick_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupUserCardResponse.nick_name)
  return nick_name_;
}
inline ::std::string* GetGroupUserCardResponse::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupUserCardResponse::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupUserCardResponse.nick_name)
}

// optional string phone = 5;
inline bool GetGroupUserCardResponse::has_phone() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetGroupUserCardResponse::set_has_phone() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetGroupUserCardResponse::clear_has_phone() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetGroupUserCardResponse::clear_phone() {
  if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_->clear();
  }
  clear_has_phone();
}
inline const ::std::string& GetGroupUserCardResponse::phone() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserCardResponse.phone)
  return *phone_;
}
inline void GetGroupUserCardResponse::set_phone(const ::std::string& value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserCardResponse.phone)
}
inline void GetGroupUserCardResponse::set_phone(const char* value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetGroupUserCardResponse.phone)
}
inline void GetGroupUserCardResponse::set_phone(const char* value, size_t size) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetGroupUserCardResponse.phone)
}
inline ::std::string* GetGroupUserCardResponse::mutable_phone() {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupUserCardResponse.phone)
  return phone_;
}
inline ::std::string* GetGroupUserCardResponse::release_phone() {
  clear_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phone_;
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupUserCardResponse::set_allocated_phone(::std::string* phone) {
  if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phone_;
  }
  if (phone) {
    set_has_phone();
    phone_ = phone;
  } else {
    clear_has_phone();
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupUserCardResponse.phone)
}

// optional string mail = 6;
inline bool GetGroupUserCardResponse::has_mail() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetGroupUserCardResponse::set_has_mail() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetGroupUserCardResponse::clear_has_mail() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetGroupUserCardResponse::clear_mail() {
  if (mail_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mail_->clear();
  }
  clear_has_mail();
}
inline const ::std::string& GetGroupUserCardResponse::mail() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserCardResponse.mail)
  return *mail_;
}
inline void GetGroupUserCardResponse::set_mail(const ::std::string& value) {
  set_has_mail();
  if (mail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mail_ = new ::std::string;
  }
  mail_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserCardResponse.mail)
}
inline void GetGroupUserCardResponse::set_mail(const char* value) {
  set_has_mail();
  if (mail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mail_ = new ::std::string;
  }
  mail_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetGroupUserCardResponse.mail)
}
inline void GetGroupUserCardResponse::set_mail(const char* value, size_t size) {
  set_has_mail();
  if (mail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mail_ = new ::std::string;
  }
  mail_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetGroupUserCardResponse.mail)
}
inline ::std::string* GetGroupUserCardResponse::mutable_mail() {
  set_has_mail();
  if (mail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mail_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupUserCardResponse.mail)
  return mail_;
}
inline ::std::string* GetGroupUserCardResponse::release_mail() {
  clear_has_mail();
  if (mail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mail_;
    mail_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupUserCardResponse::set_allocated_mail(::std::string* mail) {
  if (mail_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mail_;
  }
  if (mail) {
    set_has_mail();
    mail_ = mail;
  } else {
    clear_has_mail();
    mail_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupUserCardResponse.mail)
}

// optional string remark = 7;
inline bool GetGroupUserCardResponse::has_remark() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetGroupUserCardResponse::set_has_remark() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetGroupUserCardResponse::clear_has_remark() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetGroupUserCardResponse::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& GetGroupUserCardResponse::remark() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupUserCardResponse.remark)
  return *remark_;
}
inline void GetGroupUserCardResponse::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupUserCardResponse.remark)
}
inline void GetGroupUserCardResponse::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.GetGroupUserCardResponse.remark)
}
inline void GetGroupUserCardResponse::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.GetGroupUserCardResponse.remark)
}
inline ::std::string* GetGroupUserCardResponse::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupUserCardResponse.remark)
  return remark_;
}
inline ::std::string* GetGroupUserCardResponse::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetGroupUserCardResponse::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupUserCardResponse.remark)
}

// -------------------------------------------------------------------

// SetGroupMsgModeRequest

// required uint64 user_id = 1;
inline bool SetGroupMsgModeRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGroupMsgModeRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGroupMsgModeRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGroupMsgModeRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 SetGroupMsgModeRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetGroupMsgModeRequest.user_id)
  return user_id_;
}
inline void SetGroupMsgModeRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SetGroupMsgModeRequest.user_id)
}

// required uint64 group_id = 2;
inline bool SetGroupMsgModeRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetGroupMsgModeRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetGroupMsgModeRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetGroupMsgModeRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 SetGroupMsgModeRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetGroupMsgModeRequest.group_id)
  return group_id_;
}
inline void SetGroupMsgModeRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SetGroupMsgModeRequest.group_id)
}

// required uint32 msg_mode = 3;
inline bool SetGroupMsgModeRequest::has_msg_mode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetGroupMsgModeRequest::set_has_msg_mode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetGroupMsgModeRequest::clear_has_msg_mode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetGroupMsgModeRequest::clear_msg_mode() {
  msg_mode_ = 0u;
  clear_has_msg_mode();
}
inline ::google::protobuf::uint32 SetGroupMsgModeRequest::msg_mode() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetGroupMsgModeRequest.msg_mode)
  return msg_mode_;
}
inline void SetGroupMsgModeRequest::set_msg_mode(::google::protobuf::uint32 value) {
  set_has_msg_mode();
  msg_mode_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SetGroupMsgModeRequest.msg_mode)
}

// -------------------------------------------------------------------

// SetGroupMsgModeResponse

// required .umsProtocol.Result result = 1;
inline bool SetGroupMsgModeResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGroupMsgModeResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGroupMsgModeResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGroupMsgModeResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& SetGroupMsgModeResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetGroupMsgModeResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* SetGroupMsgModeResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.SetGroupMsgModeResponse.result)
  return result_;
}
inline ::umsProtocol::Result* SetGroupMsgModeResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void SetGroupMsgModeResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.SetGroupMsgModeResponse.result)
}

// -------------------------------------------------------------------

// SetGroupTalkModeRequest

// required uint64 user_id = 1;
inline bool SetGroupTalkModeRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGroupTalkModeRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGroupTalkModeRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGroupTalkModeRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 SetGroupTalkModeRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetGroupTalkModeRequest.user_id)
  return user_id_;
}
inline void SetGroupTalkModeRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SetGroupTalkModeRequest.user_id)
}

// required uint64 group_id = 2;
inline bool SetGroupTalkModeRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetGroupTalkModeRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetGroupTalkModeRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetGroupTalkModeRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 SetGroupTalkModeRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetGroupTalkModeRequest.group_id)
  return group_id_;
}
inline void SetGroupTalkModeRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SetGroupTalkModeRequest.group_id)
}

// required uint32 talk_mode = 3;
inline bool SetGroupTalkModeRequest::has_talk_mode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetGroupTalkModeRequest::set_has_talk_mode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetGroupTalkModeRequest::clear_has_talk_mode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetGroupTalkModeRequest::clear_talk_mode() {
  talk_mode_ = 0u;
  clear_has_talk_mode();
}
inline ::google::protobuf::uint32 SetGroupTalkModeRequest::talk_mode() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetGroupTalkModeRequest.talk_mode)
  return talk_mode_;
}
inline void SetGroupTalkModeRequest::set_talk_mode(::google::protobuf::uint32 value) {
  set_has_talk_mode();
  talk_mode_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.SetGroupTalkModeRequest.talk_mode)
}

// -------------------------------------------------------------------

// SetGroupTalkModeResponse

// required .umsProtocol.Result result = 1;
inline bool SetGroupTalkModeResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGroupTalkModeResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGroupTalkModeResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGroupTalkModeResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& SetGroupTalkModeResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.SetGroupTalkModeResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* SetGroupTalkModeResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.SetGroupTalkModeResponse.result)
  return result_;
}
inline ::umsProtocol::Result* SetGroupTalkModeResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void SetGroupTalkModeResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.SetGroupTalkModeResponse.result)
}

// -------------------------------------------------------------------

// GetGroupManagerListRequest

// required uint64 user_id = 1;
inline bool GetGroupManagerListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupManagerListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupManagerListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupManagerListRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 GetGroupManagerListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupManagerListRequest.user_id)
  return user_id_;
}
inline void GetGroupManagerListRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupManagerListRequest.user_id)
}

// required uint64 group_id = 2;
inline bool GetGroupManagerListRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupManagerListRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupManagerListRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupManagerListRequest::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupManagerListRequest::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupManagerListRequest.group_id)
  return group_id_;
}
inline void GetGroupManagerListRequest::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupManagerListRequest.group_id)
}

// -------------------------------------------------------------------

// GetGroupManagerListResponse

// optional uint64 group_id = 1;
inline bool GetGroupManagerListResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGroupManagerListResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGroupManagerListResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGroupManagerListResponse::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 GetGroupManagerListResponse::group_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupManagerListResponse.group_id)
  return group_id_;
}
inline void GetGroupManagerListResponse::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupManagerListResponse.group_id)
}

// optional uint32 sum_num = 2;
inline bool GetGroupManagerListResponse::has_sum_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGroupManagerListResponse::set_has_sum_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGroupManagerListResponse::clear_has_sum_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGroupManagerListResponse::clear_sum_num() {
  sum_num_ = 0u;
  clear_has_sum_num();
}
inline ::google::protobuf::uint32 GetGroupManagerListResponse::sum_num() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupManagerListResponse.sum_num)
  return sum_num_;
}
inline void GetGroupManagerListResponse::set_sum_num(::google::protobuf::uint32 value) {
  set_has_sum_num();
  sum_num_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupManagerListResponse.sum_num)
}

// repeated uint64 group_user_id = 3;
inline int GetGroupManagerListResponse::group_user_id_size() const {
  return group_user_id_.size();
}
inline void GetGroupManagerListResponse::clear_group_user_id() {
  group_user_id_.Clear();
}
inline ::google::protobuf::uint64 GetGroupManagerListResponse::group_user_id(int index) const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupManagerListResponse.group_user_id)
  return group_user_id_.Get(index);
}
inline void GetGroupManagerListResponse::set_group_user_id(int index, ::google::protobuf::uint64 value) {
  group_user_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:umsProtocol.GetGroupManagerListResponse.group_user_id)
}
inline void GetGroupManagerListResponse::add_group_user_id(::google::protobuf::uint64 value) {
  group_user_id_.Add(value);
  // @@protoc_insertion_point(field_add:umsProtocol.GetGroupManagerListResponse.group_user_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetGroupManagerListResponse::group_user_id() const {
  // @@protoc_insertion_point(field_list:umsProtocol.GetGroupManagerListResponse.group_user_id)
  return group_user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetGroupManagerListResponse::mutable_group_user_id() {
  // @@protoc_insertion_point(field_mutable_list:umsProtocol.GetGroupManagerListResponse.group_user_id)
  return &group_user_id_;
}

// required .umsProtocol.Result result = 4;
inline bool GetGroupManagerListResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetGroupManagerListResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetGroupManagerListResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetGroupManagerListResponse::clear_result() {
  if (result_ != NULL) result_->::umsProtocol::Result::Clear();
  clear_has_result();
}
inline const ::umsProtocol::Result& GetGroupManagerListResponse::result() const {
  // @@protoc_insertion_point(field_get:umsProtocol.GetGroupManagerListResponse.result)
  return result_ != NULL ? *result_ : *default_instance_->result_;
}
inline ::umsProtocol::Result* GetGroupManagerListResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) result_ = new ::umsProtocol::Result;
  // @@protoc_insertion_point(field_mutable:umsProtocol.GetGroupManagerListResponse.result)
  return result_;
}
inline ::umsProtocol::Result* GetGroupManagerListResponse::release_result() {
  clear_has_result();
  ::umsProtocol::Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void GetGroupManagerListResponse::set_allocated_result(::umsProtocol::Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.GetGroupManagerListResponse.result)
}

// -------------------------------------------------------------------

// NotifyJoinGroupRequest

// -------------------------------------------------------------------

// NotifyExitGroupRequest

// -------------------------------------------------------------------

// NotifyKickoutGroupUserRequest

// required uint64 admin_user_id = 1;
inline bool NotifyKickoutGroupUserRequest::has_admin_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyKickoutGroupUserRequest::set_has_admin_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyKickoutGroupUserRequest::clear_has_admin_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyKickoutGroupUserRequest::clear_admin_user_id() {
  admin_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_admin_user_id();
}
inline ::google::protobuf::uint64 NotifyKickoutGroupUserRequest::admin_user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.NotifyKickoutGroupUserRequest.admin_user_id)
  return admin_user_id_;
}
inline void NotifyKickoutGroupUserRequest::set_admin_user_id(::google::protobuf::uint64 value) {
  set_has_admin_user_id();
  admin_user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.NotifyKickoutGroupUserRequest.admin_user_id)
}

// -------------------------------------------------------------------

// NotifySetGroupManagerRequest

// required uint64 super_admin_user_id = 1;
inline bool NotifySetGroupManagerRequest::has_super_admin_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifySetGroupManagerRequest::set_has_super_admin_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifySetGroupManagerRequest::clear_has_super_admin_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifySetGroupManagerRequest::clear_super_admin_user_id() {
  super_admin_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_super_admin_user_id();
}
inline ::google::protobuf::uint64 NotifySetGroupManagerRequest::super_admin_user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.NotifySetGroupManagerRequest.super_admin_user_id)
  return super_admin_user_id_;
}
inline void NotifySetGroupManagerRequest::set_super_admin_user_id(::google::protobuf::uint64 value) {
  set_has_super_admin_user_id();
  super_admin_user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.NotifySetGroupManagerRequest.super_admin_user_id)
}

// required uint32 control_value = 2;
inline bool NotifySetGroupManagerRequest::has_control_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifySetGroupManagerRequest::set_has_control_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifySetGroupManagerRequest::clear_has_control_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifySetGroupManagerRequest::clear_control_value() {
  control_value_ = 0u;
  clear_has_control_value();
}
inline ::google::protobuf::uint32 NotifySetGroupManagerRequest::control_value() const {
  // @@protoc_insertion_point(field_get:umsProtocol.NotifySetGroupManagerRequest.control_value)
  return control_value_;
}
inline void NotifySetGroupManagerRequest::set_control_value(::google::protobuf::uint32 value) {
  set_has_control_value();
  control_value_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.NotifySetGroupManagerRequest.control_value)
}

// -------------------------------------------------------------------

// NotifyDeleteGroupRequest

// required uint64 super_admin_user_id = 1;
inline bool NotifyDeleteGroupRequest::has_super_admin_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyDeleteGroupRequest::set_has_super_admin_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyDeleteGroupRequest::clear_has_super_admin_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyDeleteGroupRequest::clear_super_admin_user_id() {
  super_admin_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_super_admin_user_id();
}
inline ::google::protobuf::uint64 NotifyDeleteGroupRequest::super_admin_user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.NotifyDeleteGroupRequest.super_admin_user_id)
  return super_admin_user_id_;
}
inline void NotifyDeleteGroupRequest::set_super_admin_user_id(::google::protobuf::uint64 value) {
  set_has_super_admin_user_id();
  super_admin_user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.NotifyDeleteGroupRequest.super_admin_user_id)
}

// -------------------------------------------------------------------

// NotifyUpdateGroupRemarkRequest

// required uint64 admin_user_id = 1;
inline bool NotifyUpdateGroupRemarkRequest::has_admin_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUpdateGroupRemarkRequest::set_has_admin_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUpdateGroupRemarkRequest::clear_has_admin_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUpdateGroupRemarkRequest::clear_admin_user_id() {
  admin_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_admin_user_id();
}
inline ::google::protobuf::uint64 NotifyUpdateGroupRemarkRequest::admin_user_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.NotifyUpdateGroupRemarkRequest.admin_user_id)
  return admin_user_id_;
}
inline void NotifyUpdateGroupRemarkRequest::set_admin_user_id(::google::protobuf::uint64 value) {
  set_has_admin_user_id();
  admin_user_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.NotifyUpdateGroupRemarkRequest.admin_user_id)
}

// optional string remark = 2;
inline bool NotifyUpdateGroupRemarkRequest::has_remark() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyUpdateGroupRemarkRequest::set_has_remark() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyUpdateGroupRemarkRequest::clear_has_remark() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyUpdateGroupRemarkRequest::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& NotifyUpdateGroupRemarkRequest::remark() const {
  // @@protoc_insertion_point(field_get:umsProtocol.NotifyUpdateGroupRemarkRequest.remark)
  return *remark_;
}
inline void NotifyUpdateGroupRemarkRequest::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.NotifyUpdateGroupRemarkRequest.remark)
}
inline void NotifyUpdateGroupRemarkRequest::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.NotifyUpdateGroupRemarkRequest.remark)
}
inline void NotifyUpdateGroupRemarkRequest::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.NotifyUpdateGroupRemarkRequest.remark)
}
inline ::std::string* NotifyUpdateGroupRemarkRequest::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.NotifyUpdateGroupRemarkRequest.remark)
  return remark_;
}
inline ::std::string* NotifyUpdateGroupRemarkRequest::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyUpdateGroupRemarkRequest::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.NotifyUpdateGroupRemarkRequest.remark)
}

// -------------------------------------------------------------------

// NotifyUpdateGroupInfoRequest

// optional string group_name = 1;
inline bool NotifyUpdateGroupInfoRequest::has_group_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUpdateGroupInfoRequest::set_has_group_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUpdateGroupInfoRequest::clear_has_group_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUpdateGroupInfoRequest::clear_group_name() {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_->clear();
  }
  clear_has_group_name();
}
inline const ::std::string& NotifyUpdateGroupInfoRequest::group_name() const {
  // @@protoc_insertion_point(field_get:umsProtocol.NotifyUpdateGroupInfoRequest.group_name)
  return *group_name_;
}
inline void NotifyUpdateGroupInfoRequest::set_group_name(const ::std::string& value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.NotifyUpdateGroupInfoRequest.group_name)
}
inline void NotifyUpdateGroupInfoRequest::set_group_name(const char* value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.NotifyUpdateGroupInfoRequest.group_name)
}
inline void NotifyUpdateGroupInfoRequest::set_group_name(const char* value, size_t size) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.NotifyUpdateGroupInfoRequest.group_name)
}
inline ::std::string* NotifyUpdateGroupInfoRequest::mutable_group_name() {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.NotifyUpdateGroupInfoRequest.group_name)
  return group_name_;
}
inline ::std::string* NotifyUpdateGroupInfoRequest::release_group_name() {
  clear_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_name_;
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyUpdateGroupInfoRequest::set_allocated_group_name(::std::string* group_name) {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_name_;
  }
  if (group_name) {
    set_has_group_name();
    group_name_ = group_name;
  } else {
    clear_has_group_name();
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.NotifyUpdateGroupInfoRequest.group_name)
}

// optional string remark = 2;
inline bool NotifyUpdateGroupInfoRequest::has_remark() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyUpdateGroupInfoRequest::set_has_remark() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyUpdateGroupInfoRequest::clear_has_remark() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyUpdateGroupInfoRequest::clear_remark() {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_->clear();
  }
  clear_has_remark();
}
inline const ::std::string& NotifyUpdateGroupInfoRequest::remark() const {
  // @@protoc_insertion_point(field_get:umsProtocol.NotifyUpdateGroupInfoRequest.remark)
  return *remark_;
}
inline void NotifyUpdateGroupInfoRequest::set_remark(const ::std::string& value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.NotifyUpdateGroupInfoRequest.remark)
}
inline void NotifyUpdateGroupInfoRequest::set_remark(const char* value) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.NotifyUpdateGroupInfoRequest.remark)
}
inline void NotifyUpdateGroupInfoRequest::set_remark(const char* value, size_t size) {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  remark_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.NotifyUpdateGroupInfoRequest.remark)
}
inline ::std::string* NotifyUpdateGroupInfoRequest::mutable_remark() {
  set_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    remark_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.NotifyUpdateGroupInfoRequest.remark)
  return remark_;
}
inline ::std::string* NotifyUpdateGroupInfoRequest::release_remark() {
  clear_has_remark();
  if (remark_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = remark_;
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyUpdateGroupInfoRequest::set_allocated_remark(::std::string* remark) {
  if (remark_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete remark_;
  }
  if (remark) {
    set_has_remark();
    remark_ = remark;
  } else {
    clear_has_remark();
    remark_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.NotifyUpdateGroupInfoRequest.remark)
}

// optional uint32 type = 3;
inline bool NotifyUpdateGroupInfoRequest::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyUpdateGroupInfoRequest::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyUpdateGroupInfoRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyUpdateGroupInfoRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 NotifyUpdateGroupInfoRequest::type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.NotifyUpdateGroupInfoRequest.type)
  return type_;
}
inline void NotifyUpdateGroupInfoRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.NotifyUpdateGroupInfoRequest.type)
}

// optional string group_intro = 4;
inline bool NotifyUpdateGroupInfoRequest::has_group_intro() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyUpdateGroupInfoRequest::set_has_group_intro() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyUpdateGroupInfoRequest::clear_has_group_intro() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyUpdateGroupInfoRequest::clear_group_intro() {
  if (group_intro_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_->clear();
  }
  clear_has_group_intro();
}
inline const ::std::string& NotifyUpdateGroupInfoRequest::group_intro() const {
  // @@protoc_insertion_point(field_get:umsProtocol.NotifyUpdateGroupInfoRequest.group_intro)
  return *group_intro_;
}
inline void NotifyUpdateGroupInfoRequest::set_group_intro(const ::std::string& value) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.NotifyUpdateGroupInfoRequest.group_intro)
}
inline void NotifyUpdateGroupInfoRequest::set_group_intro(const char* value) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.NotifyUpdateGroupInfoRequest.group_intro)
}
inline void NotifyUpdateGroupInfoRequest::set_group_intro(const char* value, size_t size) {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  group_intro_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.NotifyUpdateGroupInfoRequest.group_intro)
}
inline ::std::string* NotifyUpdateGroupInfoRequest::mutable_group_intro() {
  set_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_intro_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.NotifyUpdateGroupInfoRequest.group_intro)
  return group_intro_;
}
inline ::std::string* NotifyUpdateGroupInfoRequest::release_group_intro() {
  clear_has_group_intro();
  if (group_intro_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_intro_;
    group_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyUpdateGroupInfoRequest::set_allocated_group_intro(::std::string* group_intro) {
  if (group_intro_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_intro_;
  }
  if (group_intro) {
    set_has_group_intro();
    group_intro_ = group_intro;
  } else {
    clear_has_group_intro();
    group_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.NotifyUpdateGroupInfoRequest.group_intro)
}

// optional string group_notice = 5;
inline bool NotifyUpdateGroupInfoRequest::has_group_notice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyUpdateGroupInfoRequest::set_has_group_notice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyUpdateGroupInfoRequest::clear_has_group_notice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyUpdateGroupInfoRequest::clear_group_notice() {
  if (group_notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_->clear();
  }
  clear_has_group_notice();
}
inline const ::std::string& NotifyUpdateGroupInfoRequest::group_notice() const {
  // @@protoc_insertion_point(field_get:umsProtocol.NotifyUpdateGroupInfoRequest.group_notice)
  return *group_notice_;
}
inline void NotifyUpdateGroupInfoRequest::set_group_notice(const ::std::string& value) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.NotifyUpdateGroupInfoRequest.group_notice)
}
inline void NotifyUpdateGroupInfoRequest::set_group_notice(const char* value) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.NotifyUpdateGroupInfoRequest.group_notice)
}
inline void NotifyUpdateGroupInfoRequest::set_group_notice(const char* value, size_t size) {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  group_notice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.NotifyUpdateGroupInfoRequest.group_notice)
}
inline ::std::string* NotifyUpdateGroupInfoRequest::mutable_group_notice() {
  set_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_notice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.NotifyUpdateGroupInfoRequest.group_notice)
  return group_notice_;
}
inline ::std::string* NotifyUpdateGroupInfoRequest::release_group_notice() {
  clear_has_group_notice();
  if (group_notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_notice_;
    group_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyUpdateGroupInfoRequest::set_allocated_group_notice(::std::string* group_notice) {
  if (group_notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_notice_;
  }
  if (group_notice) {
    set_has_group_notice();
    group_notice_ = group_notice;
  } else {
    clear_has_group_notice();
    group_notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.NotifyUpdateGroupInfoRequest.group_notice)
}

// -------------------------------------------------------------------

// NotifyUpdateGroupOptionRequest

// optional uint32 verify_type = 1;
inline bool NotifyUpdateGroupOptionRequest::has_verify_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUpdateGroupOptionRequest::set_has_verify_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUpdateGroupOptionRequest::clear_has_verify_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUpdateGroupOptionRequest::clear_verify_type() {
  verify_type_ = 0u;
  clear_has_verify_type();
}
inline ::google::protobuf::uint32 NotifyUpdateGroupOptionRequest::verify_type() const {
  // @@protoc_insertion_point(field_get:umsProtocol.NotifyUpdateGroupOptionRequest.verify_type)
  return verify_type_;
}
inline void NotifyUpdateGroupOptionRequest::set_verify_type(::google::protobuf::uint32 value) {
  set_has_verify_type();
  verify_type_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.NotifyUpdateGroupOptionRequest.verify_type)
}

// optional uint64 channel_id = 2;
inline bool NotifyUpdateGroupOptionRequest::has_channel_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyUpdateGroupOptionRequest::set_has_channel_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyUpdateGroupOptionRequest::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyUpdateGroupOptionRequest::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 NotifyUpdateGroupOptionRequest::channel_id() const {
  // @@protoc_insertion_point(field_get:umsProtocol.NotifyUpdateGroupOptionRequest.channel_id)
  return channel_id_;
}
inline void NotifyUpdateGroupOptionRequest::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:umsProtocol.NotifyUpdateGroupOptionRequest.channel_id)
}

// -------------------------------------------------------------------

// NotifyUpdateGroupNoticeRequest

// optional string notice = 1;
inline bool NotifyUpdateGroupNoticeRequest::has_notice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyUpdateGroupNoticeRequest::set_has_notice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyUpdateGroupNoticeRequest::clear_has_notice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyUpdateGroupNoticeRequest::clear_notice() {
  if (notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& NotifyUpdateGroupNoticeRequest::notice() const {
  // @@protoc_insertion_point(field_get:umsProtocol.NotifyUpdateGroupNoticeRequest.notice)
  return *notice_;
}
inline void NotifyUpdateGroupNoticeRequest::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
  // @@protoc_insertion_point(field_set:umsProtocol.NotifyUpdateGroupNoticeRequest.notice)
}
inline void NotifyUpdateGroupNoticeRequest::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
  // @@protoc_insertion_point(field_set_char:umsProtocol.NotifyUpdateGroupNoticeRequest.notice)
}
inline void NotifyUpdateGroupNoticeRequest::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:umsProtocol.NotifyUpdateGroupNoticeRequest.notice)
}
inline ::std::string* NotifyUpdateGroupNoticeRequest::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    notice_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:umsProtocol.NotifyUpdateGroupNoticeRequest.notice)
  return notice_;
}
inline ::std::string* NotifyUpdateGroupNoticeRequest::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyUpdateGroupNoticeRequest::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:umsProtocol.NotifyUpdateGroupNoticeRequest.notice)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace umsProtocol

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_user_5fmanagement_5fservice_2eproto__INCLUDED
