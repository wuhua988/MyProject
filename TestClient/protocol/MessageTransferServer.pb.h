// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageTransferServer.proto

#ifndef PROTOBUF_MessageTransferServer_2eproto__INCLUDED
#define PROTOBUF_MessageTransferServer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "GroupId.def.pb.h"
// @@protoc_insertion_point(includes)

namespace tt_mts {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageTransferServer_2eproto();
void protobuf_AssignDesc_MessageTransferServer_2eproto();
void protobuf_ShutdownFile_MessageTransferServer_2eproto();

class LoginRequest;
class LoginRequest_AccessAddr;
class LogoutRequest;
class RegisterInterestGroupIdRequest;
class UnRegisterInterestGroupIdRequest;
class UplinkMessageRequest;
class DownlinkMessageRequest;
class UplinkGroupMessageRequest;
class DownlinkGroupMessageRequest;
class HistoryMessageRequest;
class HistoryMessageResponse;
class HistoryMessageCountInfoRequest;
class HistoryMessageCountInfoResponse;
class HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo;
class HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo;
class HistoryMessageFromUserRequest;
class HistoryMessageFromUserResponse;
class HistoryGroupMessageRequest;
class HistoryGroupMessageResponse;
class HistorySysMessageRequest;
class HistorySysMessageResponse;
class MTS_DEBUG_UserInfo;
class MTS_DEBUG_ServiceInfo;
class MTS_DEBUG_ListUsersRequest;
class MTS_DEBUG_ListUsersResponse;
class MTS_DEBUG_ListOtherServicesRequest;
class MTS_DEBUG_ListOtherServicesResponse;
class MTS_DEBUG_ListGroupsBelongToUserRequest;
class MTS_DEBUG_ListGroupsBelongToUserResponse;
class MTS_DEBUG_ListGroupsBelongToGroupserverRequest;
class MTS_DEBUG_ListGroupsBelongToGroupserverResponse;
class MTS_DEBUG_ListUsersBelongToGroupRequest;
class MTS_DEBUG_ListUsersBelongToGroupResponse;

enum COMMAND {
  TMCP_MTS_USER_LOGIN = 16897,
  TMCP_MTS_USER_LOGOUT = 16898,
  TMCP_MTS_EVT_REG_INTEREST_GROUP = 16913,
  TMCP_MTS_EVT_UNREG_INTEREST_GROUP = 16914,
  TMCP_MTS_UPLINK_MSG = 16929,
  TMCP_MTS_DOWNLINK_MSG = 16930,
  TMCP_MTS_UPLINK_GROUP_MSG = 16931,
  TMCP_MTS_DOWNLINK_GROUP_MSG = 16932,
  TMCP_MTS_HISTORY_MSG = 16934,
  TMCP_MTS_HISTORY_GROUP_MSG = 16935,
  TMCP_MTS_HISTORY_SYS_MSG = 16936,
  TMCP_MTS_HISTORY_MSG_COUNT_INFO = 16945,
  TMCP_MTS_HISTORY_MSG_FROM_USER = 16946
};
bool COMMAND_IsValid(int value);
const COMMAND COMMAND_MIN = TMCP_MTS_USER_LOGIN;
const COMMAND COMMAND_MAX = TMCP_MTS_HISTORY_MSG_FROM_USER;
const int COMMAND_ARRAYSIZE = COMMAND_MAX + 1;

const ::google::protobuf::EnumDescriptor* COMMAND_descriptor();
inline const ::std::string& COMMAND_Name(COMMAND value) {
  return ::google::protobuf::internal::NameOfEnum(
    COMMAND_descriptor(), value);
}
inline bool COMMAND_Parse(
    const ::std::string& name, COMMAND* value) {
  return ::google::protobuf::internal::ParseNamedEnum<COMMAND>(
    COMMAND_descriptor(), name, value);
}
enum DEBUG_COMMAND {
  TMCP_MTS_DEBUG_LIST_USERS = 17057,
  TMCP_MTS_DEBUG_LIST_OTHER_SERVICES = 17058,
  TMCP_MTS_DEBUG_LIST_GROUPS_BELONG_TO_USER = 17059,
  TMCP_MTS_DEBUG_LIST_GROUPS_BELONG_TO_GROUPSERVER = 17060,
  TMCP_MTS_DEBUG_LIST_USERS_BELONG_TO_GROUP = 17061
};
bool DEBUG_COMMAND_IsValid(int value);
const DEBUG_COMMAND DEBUG_COMMAND_MIN = TMCP_MTS_DEBUG_LIST_USERS;
const DEBUG_COMMAND DEBUG_COMMAND_MAX = TMCP_MTS_DEBUG_LIST_USERS_BELONG_TO_GROUP;
const int DEBUG_COMMAND_ARRAYSIZE = DEBUG_COMMAND_MAX + 1;

const ::google::protobuf::EnumDescriptor* DEBUG_COMMAND_descriptor();
inline const ::std::string& DEBUG_COMMAND_Name(DEBUG_COMMAND value) {
  return ::google::protobuf::internal::NameOfEnum(
    DEBUG_COMMAND_descriptor(), value);
}
inline bool DEBUG_COMMAND_Parse(
    const ::std::string& name, DEBUG_COMMAND* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DEBUG_COMMAND>(
    DEBUG_COMMAND_descriptor(), name, value);
}
enum MACRO_DEFINE {
  TMCP_MTS_QUERY_FUZZY_MESSAGE_TYPE = 2147483632
};
bool MACRO_DEFINE_IsValid(int value);
const MACRO_DEFINE MACRO_DEFINE_MIN = TMCP_MTS_QUERY_FUZZY_MESSAGE_TYPE;
const MACRO_DEFINE MACRO_DEFINE_MAX = TMCP_MTS_QUERY_FUZZY_MESSAGE_TYPE;
const int MACRO_DEFINE_ARRAYSIZE = MACRO_DEFINE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MACRO_DEFINE_descriptor();
inline const ::std::string& MACRO_DEFINE_Name(MACRO_DEFINE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MACRO_DEFINE_descriptor(), value);
}
inline bool MACRO_DEFINE_Parse(
    const ::std::string& name, MACRO_DEFINE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MACRO_DEFINE>(
    MACRO_DEFINE_descriptor(), name, value);
}
// ===================================================================

class LoginRequest_AccessAddr : public ::google::protobuf::Message {
 public:
  LoginRequest_AccessAddr();
  virtual ~LoginRequest_AccessAddr();

  LoginRequest_AccessAddr(const LoginRequest_AccessAddr& from);

  inline LoginRequest_AccessAddr& operator=(const LoginRequest_AccessAddr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest_AccessAddr& default_instance();

  void Swap(LoginRequest_AccessAddr* other);

  // implements Message ----------------------------------------------

  LoginRequest_AccessAddr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRequest_AccessAddr& from);
  void MergeFrom(const LoginRequest_AccessAddr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional uint32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.LoginRequest.AccessAddr)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* ip_;
  ::google::protobuf::uint32 port_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static LoginRequest_AccessAddr* default_instance_;
};
// -------------------------------------------------------------------

class LoginRequest : public ::google::protobuf::Message {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  void Swap(LoginRequest* other);

  // implements Message ----------------------------------------------

  LoginRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LoginRequest_AccessAddr AccessAddr;

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 dev_type = 2;
  inline bool has_dev_type() const;
  inline void clear_dev_type();
  static const int kDevTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 dev_type() const;
  inline void set_dev_type(::google::protobuf::uint32 value);

  // optional string token = 3;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 3;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // optional .tt_mts.LoginRequest.AccessAddr access_addr = 4;
  inline bool has_access_addr() const;
  inline void clear_access_addr();
  static const int kAccessAddrFieldNumber = 4;
  inline const ::tt_mts::LoginRequest_AccessAddr& access_addr() const;
  inline ::tt_mts::LoginRequest_AccessAddr* mutable_access_addr();
  inline ::tt_mts::LoginRequest_AccessAddr* release_access_addr();
  inline void set_allocated_access_addr(::tt_mts::LoginRequest_AccessAddr* access_addr);

  // @@protoc_insertion_point(class_scope:tt_mts.LoginRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_dev_type();
  inline void clear_has_dev_type();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_access_addr();
  inline void clear_has_access_addr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* token_;
  ::tt_mts::LoginRequest_AccessAddr* access_addr_;
  ::google::protobuf::uint32 dev_type_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static LoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class LogoutRequest : public ::google::protobuf::Message {
 public:
  LogoutRequest();
  virtual ~LogoutRequest();

  LogoutRequest(const LogoutRequest& from);

  inline LogoutRequest& operator=(const LogoutRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutRequest& default_instance();

  void Swap(LogoutRequest* other);

  // implements Message ----------------------------------------------

  LogoutRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogoutRequest& from);
  void MergeFrom(const LogoutRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 dev_type = 2;
  inline bool has_dev_type() const;
  inline void clear_dev_type();
  static const int kDevTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 dev_type() const;
  inline void set_dev_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.LogoutRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_dev_type();
  inline void clear_has_dev_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 dev_type_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static LogoutRequest* default_instance_;
};
// -------------------------------------------------------------------

class RegisterInterestGroupIdRequest : public ::google::protobuf::Message {
 public:
  RegisterInterestGroupIdRequest();
  virtual ~RegisterInterestGroupIdRequest();

  RegisterInterestGroupIdRequest(const RegisterInterestGroupIdRequest& from);

  inline RegisterInterestGroupIdRequest& operator=(const RegisterInterestGroupIdRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterInterestGroupIdRequest& default_instance();

  void Swap(RegisterInterestGroupIdRequest* other);

  // implements Message ----------------------------------------------

  RegisterInterestGroupIdRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegisterInterestGroupIdRequest& from);
  void MergeFrom(const RegisterInterestGroupIdRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // repeated .tt_im_group.GroupId groupid_list = 2;
  inline int groupid_list_size() const;
  inline void clear_groupid_list();
  static const int kGroupidListFieldNumber = 2;
  inline const ::tt_im_group::GroupId& groupid_list(int index) const;
  inline ::tt_im_group::GroupId* mutable_groupid_list(int index);
  inline ::tt_im_group::GroupId* add_groupid_list();
  inline const ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >&
      groupid_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >*
      mutable_groupid_list();

  // @@protoc_insertion_point(class_scope:tt_mts.RegisterInterestGroupIdRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId > groupid_list_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static RegisterInterestGroupIdRequest* default_instance_;
};
// -------------------------------------------------------------------

class UnRegisterInterestGroupIdRequest : public ::google::protobuf::Message {
 public:
  UnRegisterInterestGroupIdRequest();
  virtual ~UnRegisterInterestGroupIdRequest();

  UnRegisterInterestGroupIdRequest(const UnRegisterInterestGroupIdRequest& from);

  inline UnRegisterInterestGroupIdRequest& operator=(const UnRegisterInterestGroupIdRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnRegisterInterestGroupIdRequest& default_instance();

  void Swap(UnRegisterInterestGroupIdRequest* other);

  // implements Message ----------------------------------------------

  UnRegisterInterestGroupIdRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnRegisterInterestGroupIdRequest& from);
  void MergeFrom(const UnRegisterInterestGroupIdRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // repeated .tt_im_group.GroupId groupid_list = 2;
  inline int groupid_list_size() const;
  inline void clear_groupid_list();
  static const int kGroupidListFieldNumber = 2;
  inline const ::tt_im_group::GroupId& groupid_list(int index) const;
  inline ::tt_im_group::GroupId* mutable_groupid_list(int index);
  inline ::tt_im_group::GroupId* add_groupid_list();
  inline const ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >&
      groupid_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >*
      mutable_groupid_list();

  // @@protoc_insertion_point(class_scope:tt_mts.UnRegisterInterestGroupIdRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId > groupid_list_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static UnRegisterInterestGroupIdRequest* default_instance_;
};
// -------------------------------------------------------------------

class UplinkMessageRequest : public ::google::protobuf::Message {
 public:
  UplinkMessageRequest();
  virtual ~UplinkMessageRequest();

  UplinkMessageRequest(const UplinkMessageRequest& from);

  inline UplinkMessageRequest& operator=(const UplinkMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UplinkMessageRequest& default_instance();

  void Swap(UplinkMessageRequest* other);

  // implements Message ----------------------------------------------

  UplinkMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UplinkMessageRequest& from);
  void MergeFrom(const UplinkMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 from_user_id = 1;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint64 value);

  // required uint64 to_user_id = 2;
  inline bool has_to_user_id() const;
  inline void clear_to_user_id();
  static const int kToUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 to_user_id() const;
  inline void set_to_user_id(::google::protobuf::uint64 value);

  // required uint32 is_online = 3;
  inline bool has_is_online() const;
  inline void clear_is_online();
  static const int kIsOnlineFieldNumber = 3;
  inline ::google::protobuf::uint32 is_online() const;
  inline void set_is_online(::google::protobuf::uint32 value);

  // required string message = 4;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 4;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional uint32 message_type = 5;
  inline bool has_message_type() const;
  inline void clear_message_type();
  static const int kMessageTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 message_type() const;
  inline void set_message_type(::google::protobuf::uint32 value);

  // optional string mts_ip = 6;
  inline bool has_mts_ip() const;
  inline void clear_mts_ip();
  static const int kMtsIpFieldNumber = 6;
  inline const ::std::string& mts_ip() const;
  inline void set_mts_ip(const ::std::string& value);
  inline void set_mts_ip(const char* value);
  inline void set_mts_ip(const char* value, size_t size);
  inline ::std::string* mutable_mts_ip();
  inline ::std::string* release_mts_ip();
  inline void set_allocated_mts_ip(::std::string* mts_ip);

  // optional uint32 mts_port = 7;
  inline bool has_mts_port() const;
  inline void clear_mts_port();
  static const int kMtsPortFieldNumber = 7;
  inline ::google::protobuf::uint32 mts_port() const;
  inline void set_mts_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.UplinkMessageRequest)
 private:
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_to_user_id();
  inline void clear_has_to_user_id();
  inline void set_has_is_online();
  inline void clear_has_is_online();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_message_type();
  inline void clear_has_message_type();
  inline void set_has_mts_ip();
  inline void clear_has_mts_ip();
  inline void set_has_mts_port();
  inline void clear_has_mts_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 from_user_id_;
  ::google::protobuf::uint64 to_user_id_;
  ::std::string* message_;
  ::google::protobuf::uint32 is_online_;
  ::google::protobuf::uint32 message_type_;
  ::std::string* mts_ip_;
  ::google::protobuf::uint32 mts_port_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static UplinkMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class DownlinkMessageRequest : public ::google::protobuf::Message {
 public:
  DownlinkMessageRequest();
  virtual ~DownlinkMessageRequest();

  DownlinkMessageRequest(const DownlinkMessageRequest& from);

  inline DownlinkMessageRequest& operator=(const DownlinkMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DownlinkMessageRequest& default_instance();

  void Swap(DownlinkMessageRequest* other);

  // implements Message ----------------------------------------------

  DownlinkMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DownlinkMessageRequest& from);
  void MergeFrom(const DownlinkMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 from_user_id = 1;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint64 value);

  // required uint64 to_user_id = 2;
  inline bool has_to_user_id() const;
  inline void clear_to_user_id();
  static const int kToUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 to_user_id() const;
  inline void set_to_user_id(::google::protobuf::uint64 value);

  // required uint32 message_pts = 3;
  inline bool has_message_pts() const;
  inline void clear_message_pts();
  static const int kMessagePtsFieldNumber = 3;
  inline ::google::protobuf::uint32 message_pts() const;
  inline void set_message_pts(::google::protobuf::uint32 value);

  // required string message = 4;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 4;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional uint32 message_type = 5;
  inline bool has_message_type() const;
  inline void clear_message_type();
  static const int kMessageTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 message_type() const;
  inline void set_message_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.DownlinkMessageRequest)
 private:
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_to_user_id();
  inline void clear_has_to_user_id();
  inline void set_has_message_pts();
  inline void clear_has_message_pts();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_message_type();
  inline void clear_has_message_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 from_user_id_;
  ::google::protobuf::uint64 to_user_id_;
  ::std::string* message_;
  ::google::protobuf::uint32 message_pts_;
  ::google::protobuf::uint32 message_type_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static DownlinkMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class UplinkGroupMessageRequest : public ::google::protobuf::Message {
 public:
  UplinkGroupMessageRequest();
  virtual ~UplinkGroupMessageRequest();

  UplinkGroupMessageRequest(const UplinkGroupMessageRequest& from);

  inline UplinkGroupMessageRequest& operator=(const UplinkGroupMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UplinkGroupMessageRequest& default_instance();

  void Swap(UplinkGroupMessageRequest* other);

  // implements Message ----------------------------------------------

  UplinkGroupMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UplinkGroupMessageRequest& from);
  void MergeFrom(const UplinkGroupMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 from_user_id = 1;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint64 value);

  // required .tt_im_group.GroupId group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline const ::tt_im_group::GroupId& group_id() const;
  inline ::tt_im_group::GroupId* mutable_group_id();
  inline ::tt_im_group::GroupId* release_group_id();
  inline void set_allocated_group_id(::tt_im_group::GroupId* group_id);

  // required string message = 3;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 3;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional uint32 message_type = 4;
  inline bool has_message_type() const;
  inline void clear_message_type();
  static const int kMessageTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 message_type() const;
  inline void set_message_type(::google::protobuf::uint32 value);

  // optional uint32 message_priority = 5;
  inline bool has_message_priority() const;
  inline void clear_message_priority();
  static const int kMessagePriorityFieldNumber = 5;
  inline ::google::protobuf::uint32 message_priority() const;
  inline void set_message_priority(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.UplinkGroupMessageRequest)
 private:
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_message_type();
  inline void clear_has_message_type();
  inline void set_has_message_priority();
  inline void clear_has_message_priority();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 from_user_id_;
  ::tt_im_group::GroupId* group_id_;
  ::std::string* message_;
  ::google::protobuf::uint32 message_type_;
  ::google::protobuf::uint32 message_priority_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static UplinkGroupMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class DownlinkGroupMessageRequest : public ::google::protobuf::Message {
 public:
  DownlinkGroupMessageRequest();
  virtual ~DownlinkGroupMessageRequest();

  DownlinkGroupMessageRequest(const DownlinkGroupMessageRequest& from);

  inline DownlinkGroupMessageRequest& operator=(const DownlinkGroupMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DownlinkGroupMessageRequest& default_instance();

  void Swap(DownlinkGroupMessageRequest* other);

  // implements Message ----------------------------------------------

  DownlinkGroupMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DownlinkGroupMessageRequest& from);
  void MergeFrom(const DownlinkGroupMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 from_user_id = 1;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint64 value);

  // required .tt_im_group.GroupId group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline const ::tt_im_group::GroupId& group_id() const;
  inline ::tt_im_group::GroupId* mutable_group_id();
  inline ::tt_im_group::GroupId* release_group_id();
  inline void set_allocated_group_id(::tt_im_group::GroupId* group_id);

  // required string message = 3;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 3;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // required uint32 message_pts = 4;
  inline bool has_message_pts() const;
  inline void clear_message_pts();
  static const int kMessagePtsFieldNumber = 4;
  inline ::google::protobuf::uint32 message_pts() const;
  inline void set_message_pts(::google::protobuf::uint32 value);

  // optional uint32 message_type = 5;
  inline bool has_message_type() const;
  inline void clear_message_type();
  static const int kMessageTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 message_type() const;
  inline void set_message_type(::google::protobuf::uint32 value);

  // optional uint32 message_priority = 6;
  inline bool has_message_priority() const;
  inline void clear_message_priority();
  static const int kMessagePriorityFieldNumber = 6;
  inline ::google::protobuf::uint32 message_priority() const;
  inline void set_message_priority(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.DownlinkGroupMessageRequest)
 private:
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_message_pts();
  inline void clear_has_message_pts();
  inline void set_has_message_type();
  inline void clear_has_message_type();
  inline void set_has_message_priority();
  inline void clear_has_message_priority();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 from_user_id_;
  ::tt_im_group::GroupId* group_id_;
  ::std::string* message_;
  ::google::protobuf::uint32 message_pts_;
  ::google::protobuf::uint32 message_type_;
  ::google::protobuf::uint32 message_priority_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static DownlinkGroupMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class HistoryMessageRequest : public ::google::protobuf::Message {
 public:
  HistoryMessageRequest();
  virtual ~HistoryMessageRequest();

  HistoryMessageRequest(const HistoryMessageRequest& from);

  inline HistoryMessageRequest& operator=(const HistoryMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryMessageRequest& default_instance();

  void Swap(HistoryMessageRequest* other);

  // implements Message ----------------------------------------------

  HistoryMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryMessageRequest& from);
  void MergeFrom(const HistoryMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 begin_time = 2;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 begin_time() const;
  inline void set_begin_time(::google::protobuf::uint32 value);

  // optional uint32 time_length = 3;
  inline bool has_time_length() const;
  inline void clear_time_length();
  static const int kTimeLengthFieldNumber = 3;
  inline ::google::protobuf::uint32 time_length() const;
  inline void set_time_length(::google::protobuf::uint32 value);

  // optional uint32 message_count = 4;
  inline bool has_message_count() const;
  inline void clear_message_count();
  static const int kMessageCountFieldNumber = 4;
  inline ::google::protobuf::uint32 message_count() const;
  inline void set_message_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.HistoryMessageRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_time_length();
  inline void clear_has_time_length();
  inline void set_has_message_count();
  inline void clear_has_message_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 time_length_;
  ::google::protobuf::uint32 message_count_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static HistoryMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class HistoryMessageResponse : public ::google::protobuf::Message {
 public:
  HistoryMessageResponse();
  virtual ~HistoryMessageResponse();

  HistoryMessageResponse(const HistoryMessageResponse& from);

  inline HistoryMessageResponse& operator=(const HistoryMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryMessageResponse& default_instance();

  void Swap(HistoryMessageResponse* other);

  // implements Message ----------------------------------------------

  HistoryMessageResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryMessageResponse& from);
  void MergeFrom(const HistoryMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // repeated .tt_mts.DownlinkMessageRequest messages = 2;
  inline int messages_size() const;
  inline void clear_messages();
  static const int kMessagesFieldNumber = 2;
  inline const ::tt_mts::DownlinkMessageRequest& messages(int index) const;
  inline ::tt_mts::DownlinkMessageRequest* mutable_messages(int index);
  inline ::tt_mts::DownlinkMessageRequest* add_messages();
  inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest >&
      messages() const;
  inline ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest >*
      mutable_messages();

  // optional uint32 current_time = 3;
  inline bool has_current_time() const;
  inline void clear_current_time();
  static const int kCurrentTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 current_time() const;
  inline void set_current_time(::google::protobuf::uint32 value);

  // optional uint32 total_count = 4;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 4;
  inline ::google::protobuf::uint32 total_count() const;
  inline void set_total_count(::google::protobuf::uint32 value);

  // optional uint32 count = 5;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 5;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // optional uint32 index = 6;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 6;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.HistoryMessageResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_current_time();
  inline void clear_has_current_time();
  inline void set_has_total_count();
  inline void clear_has_total_count();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest > messages_;
  ::google::protobuf::uint32 current_time_;
  ::google::protobuf::uint32 total_count_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static HistoryMessageResponse* default_instance_;
};
// -------------------------------------------------------------------

class HistoryMessageCountInfoRequest : public ::google::protobuf::Message {
 public:
  HistoryMessageCountInfoRequest();
  virtual ~HistoryMessageCountInfoRequest();

  HistoryMessageCountInfoRequest(const HistoryMessageCountInfoRequest& from);

  inline HistoryMessageCountInfoRequest& operator=(const HistoryMessageCountInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryMessageCountInfoRequest& default_instance();

  void Swap(HistoryMessageCountInfoRequest* other);

  // implements Message ----------------------------------------------

  HistoryMessageCountInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryMessageCountInfoRequest& from);
  void MergeFrom(const HistoryMessageCountInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 to_user_id = 1;
  inline bool has_to_user_id() const;
  inline void clear_to_user_id();
  static const int kToUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 to_user_id() const;
  inline void set_to_user_id(::google::protobuf::uint64 value);

  // repeated uint64 from_user_ids = 2;
  inline int from_user_ids_size() const;
  inline void clear_from_user_ids();
  static const int kFromUserIdsFieldNumber = 2;
  inline ::google::protobuf::uint64 from_user_ids(int index) const;
  inline void set_from_user_ids(int index, ::google::protobuf::uint64 value);
  inline void add_from_user_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      from_user_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_from_user_ids();

  // optional uint32 begin_time = 3;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 begin_time() const;
  inline void set_begin_time(::google::protobuf::uint32 value);

  // optional uint32 time_length = 4;
  inline bool has_time_length() const;
  inline void clear_time_length();
  static const int kTimeLengthFieldNumber = 4;
  inline ::google::protobuf::uint32 time_length() const;
  inline void set_time_length(::google::protobuf::uint32 value);

  // repeated uint32 message_types = 5;
  inline int message_types_size() const;
  inline void clear_message_types();
  static const int kMessageTypesFieldNumber = 5;
  inline ::google::protobuf::uint32 message_types(int index) const;
  inline void set_message_types(int index, ::google::protobuf::uint32 value);
  inline void add_message_types(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      message_types() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_message_types();

  // @@protoc_insertion_point(class_scope:tt_mts.HistoryMessageCountInfoRequest)
 private:
  inline void set_has_to_user_id();
  inline void clear_has_to_user_id();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_time_length();
  inline void clear_has_time_length();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 to_user_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > from_user_ids_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 time_length_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > message_types_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static HistoryMessageCountInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo : public ::google::protobuf::Message {
 public:
  HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo();
  virtual ~HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo();

  HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo(const HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo& from);

  inline HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo& operator=(const HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo& default_instance();

  void Swap(HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo* other);

  // implements Message ----------------------------------------------

  HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo& from);
  void MergeFrom(const HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 message_type = 1;
  inline bool has_message_type() const;
  inline void clear_message_type();
  static const int kMessageTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 message_type() const;
  inline void set_message_type(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.HistoryMessageCountInfoResponse.HistoryMessageType2CountInfo)
 private:
  inline void set_has_message_type();
  inline void clear_has_message_type();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 message_type_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo* default_instance_;
};
// -------------------------------------------------------------------

class HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo : public ::google::protobuf::Message {
 public:
  HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo();
  virtual ~HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo();

  HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo(const HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo& from);

  inline HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo& operator=(const HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo& default_instance();

  void Swap(HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo* other);

  // implements Message ----------------------------------------------

  HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo& from);
  void MergeFrom(const HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 from_user_id = 1;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint64 value);

  // repeated .tt_mts.HistoryMessageCountInfoResponse.HistoryMessageType2CountInfo countinfos = 2;
  inline int countinfos_size() const;
  inline void clear_countinfos();
  static const int kCountinfosFieldNumber = 2;
  inline const ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo& countinfos(int index) const;
  inline ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo* mutable_countinfos(int index);
  inline ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo* add_countinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo >&
      countinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo >*
      mutable_countinfos();

  // @@protoc_insertion_point(class_scope:tt_mts.HistoryMessageCountInfoResponse.HistoryMessageUser2CountInfo)
 private:
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 from_user_id_;
  ::google::protobuf::RepeatedPtrField< ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo > countinfos_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo* default_instance_;
};
// -------------------------------------------------------------------

class HistoryMessageCountInfoResponse : public ::google::protobuf::Message {
 public:
  HistoryMessageCountInfoResponse();
  virtual ~HistoryMessageCountInfoResponse();

  HistoryMessageCountInfoResponse(const HistoryMessageCountInfoResponse& from);

  inline HistoryMessageCountInfoResponse& operator=(const HistoryMessageCountInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryMessageCountInfoResponse& default_instance();

  void Swap(HistoryMessageCountInfoResponse* other);

  // implements Message ----------------------------------------------

  HistoryMessageCountInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryMessageCountInfoResponse& from);
  void MergeFrom(const HistoryMessageCountInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo HistoryMessageType2CountInfo;
  typedef HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo HistoryMessageUser2CountInfo;

  // accessors -------------------------------------------------------

  // required uint64 to_user_id = 1;
  inline bool has_to_user_id() const;
  inline void clear_to_user_id();
  static const int kToUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 to_user_id() const;
  inline void set_to_user_id(::google::protobuf::uint64 value);

  // optional uint32 begin_time = 2;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 begin_time() const;
  inline void set_begin_time(::google::protobuf::uint32 value);

  // optional uint32 time_length = 3;
  inline bool has_time_length() const;
  inline void clear_time_length();
  static const int kTimeLengthFieldNumber = 3;
  inline ::google::protobuf::uint32 time_length() const;
  inline void set_time_length(::google::protobuf::uint32 value);

  // repeated uint32 message_types = 4;
  inline int message_types_size() const;
  inline void clear_message_types();
  static const int kMessageTypesFieldNumber = 4;
  inline ::google::protobuf::uint32 message_types(int index) const;
  inline void set_message_types(int index, ::google::protobuf::uint32 value);
  inline void add_message_types(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      message_types() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_message_types();

  // repeated .tt_mts.HistoryMessageCountInfoResponse.HistoryMessageUser2CountInfo message_count_infos = 5;
  inline int message_count_infos_size() const;
  inline void clear_message_count_infos();
  static const int kMessageCountInfosFieldNumber = 5;
  inline const ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo& message_count_infos(int index) const;
  inline ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo* mutable_message_count_infos(int index);
  inline ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo* add_message_count_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo >&
      message_count_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo >*
      mutable_message_count_infos();

  // @@protoc_insertion_point(class_scope:tt_mts.HistoryMessageCountInfoResponse)
 private:
  inline void set_has_to_user_id();
  inline void clear_has_to_user_id();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_time_length();
  inline void clear_has_time_length();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 to_user_id_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 time_length_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > message_types_;
  ::google::protobuf::RepeatedPtrField< ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo > message_count_infos_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static HistoryMessageCountInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class HistoryMessageFromUserRequest : public ::google::protobuf::Message {
 public:
  HistoryMessageFromUserRequest();
  virtual ~HistoryMessageFromUserRequest();

  HistoryMessageFromUserRequest(const HistoryMessageFromUserRequest& from);

  inline HistoryMessageFromUserRequest& operator=(const HistoryMessageFromUserRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryMessageFromUserRequest& default_instance();

  void Swap(HistoryMessageFromUserRequest* other);

  // implements Message ----------------------------------------------

  HistoryMessageFromUserRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryMessageFromUserRequest& from);
  void MergeFrom(const HistoryMessageFromUserRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 to_user_id = 1;
  inline bool has_to_user_id() const;
  inline void clear_to_user_id();
  static const int kToUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 to_user_id() const;
  inline void set_to_user_id(::google::protobuf::uint64 value);

  // optional uint64 from_user_id = 2 [default = 9223372036854775792];
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint64 value);

  // optional uint32 begin_time = 3;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 begin_time() const;
  inline void set_begin_time(::google::protobuf::uint32 value);

  // optional uint32 time_length = 4;
  inline bool has_time_length() const;
  inline void clear_time_length();
  static const int kTimeLengthFieldNumber = 4;
  inline ::google::protobuf::uint32 time_length() const;
  inline void set_time_length(::google::protobuf::uint32 value);

  // repeated uint32 message_types = 5;
  inline int message_types_size() const;
  inline void clear_message_types();
  static const int kMessageTypesFieldNumber = 5;
  inline ::google::protobuf::uint32 message_types(int index) const;
  inline void set_message_types(int index, ::google::protobuf::uint32 value);
  inline void add_message_types(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      message_types() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_message_types();

  // optional bool is_equeal_message_types = 6;
  inline bool has_is_equeal_message_types() const;
  inline void clear_is_equeal_message_types();
  static const int kIsEquealMessageTypesFieldNumber = 6;
  inline bool is_equeal_message_types() const;
  inline void set_is_equeal_message_types(bool value);

  // optional uint32 message_count = 7;
  inline bool has_message_count() const;
  inline void clear_message_count();
  static const int kMessageCountFieldNumber = 7;
  inline ::google::protobuf::uint32 message_count() const;
  inline void set_message_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.HistoryMessageFromUserRequest)
 private:
  inline void set_has_to_user_id();
  inline void clear_has_to_user_id();
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_time_length();
  inline void clear_has_time_length();
  inline void set_has_is_equeal_message_types();
  inline void clear_has_is_equeal_message_types();
  inline void set_has_message_count();
  inline void clear_has_message_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 to_user_id_;
  ::google::protobuf::uint64 from_user_id_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 time_length_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > message_types_;
  bool is_equeal_message_types_;
  ::google::protobuf::uint32 message_count_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static HistoryMessageFromUserRequest* default_instance_;
};
// -------------------------------------------------------------------

class HistoryMessageFromUserResponse : public ::google::protobuf::Message {
 public:
  HistoryMessageFromUserResponse();
  virtual ~HistoryMessageFromUserResponse();

  HistoryMessageFromUserResponse(const HistoryMessageFromUserResponse& from);

  inline HistoryMessageFromUserResponse& operator=(const HistoryMessageFromUserResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryMessageFromUserResponse& default_instance();

  void Swap(HistoryMessageFromUserResponse* other);

  // implements Message ----------------------------------------------

  HistoryMessageFromUserResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryMessageFromUserResponse& from);
  void MergeFrom(const HistoryMessageFromUserResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 to_user_id = 1;
  inline bool has_to_user_id() const;
  inline void clear_to_user_id();
  static const int kToUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 to_user_id() const;
  inline void set_to_user_id(::google::protobuf::uint64 value);

  // optional uint64 from_user_id = 2;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint64 value);

  // repeated uint32 message_types = 3;
  inline int message_types_size() const;
  inline void clear_message_types();
  static const int kMessageTypesFieldNumber = 3;
  inline ::google::protobuf::uint32 message_types(int index) const;
  inline void set_message_types(int index, ::google::protobuf::uint32 value);
  inline void add_message_types(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      message_types() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_message_types();

  // optional bool is_equeal_message_types = 4;
  inline bool has_is_equeal_message_types() const;
  inline void clear_is_equeal_message_types();
  static const int kIsEquealMessageTypesFieldNumber = 4;
  inline bool is_equeal_message_types() const;
  inline void set_is_equeal_message_types(bool value);

  // repeated .tt_mts.DownlinkMessageRequest messages = 5;
  inline int messages_size() const;
  inline void clear_messages();
  static const int kMessagesFieldNumber = 5;
  inline const ::tt_mts::DownlinkMessageRequest& messages(int index) const;
  inline ::tt_mts::DownlinkMessageRequest* mutable_messages(int index);
  inline ::tt_mts::DownlinkMessageRequest* add_messages();
  inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest >&
      messages() const;
  inline ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest >*
      mutable_messages();

  // optional uint32 current_time = 6;
  inline bool has_current_time() const;
  inline void clear_current_time();
  static const int kCurrentTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 current_time() const;
  inline void set_current_time(::google::protobuf::uint32 value);

  // optional uint32 total_count = 7;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 7;
  inline ::google::protobuf::uint32 total_count() const;
  inline void set_total_count(::google::protobuf::uint32 value);

  // optional uint32 count = 8;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 8;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // optional uint32 index = 9;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 9;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.HistoryMessageFromUserResponse)
 private:
  inline void set_has_to_user_id();
  inline void clear_has_to_user_id();
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_is_equeal_message_types();
  inline void clear_has_is_equeal_message_types();
  inline void set_has_current_time();
  inline void clear_has_current_time();
  inline void set_has_total_count();
  inline void clear_has_total_count();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 to_user_id_;
  ::google::protobuf::uint64 from_user_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > message_types_;
  ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest > messages_;
  bool is_equeal_message_types_;
  ::google::protobuf::uint32 current_time_;
  ::google::protobuf::uint32 total_count_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static HistoryMessageFromUserResponse* default_instance_;
};
// -------------------------------------------------------------------

class HistoryGroupMessageRequest : public ::google::protobuf::Message {
 public:
  HistoryGroupMessageRequest();
  virtual ~HistoryGroupMessageRequest();

  HistoryGroupMessageRequest(const HistoryGroupMessageRequest& from);

  inline HistoryGroupMessageRequest& operator=(const HistoryGroupMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryGroupMessageRequest& default_instance();

  void Swap(HistoryGroupMessageRequest* other);

  // implements Message ----------------------------------------------

  HistoryGroupMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryGroupMessageRequest& from);
  void MergeFrom(const HistoryGroupMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .tt_im_group.GroupId group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline const ::tt_im_group::GroupId& group_id() const;
  inline ::tt_im_group::GroupId* mutable_group_id();
  inline ::tt_im_group::GroupId* release_group_id();
  inline void set_allocated_group_id(::tt_im_group::GroupId* group_id);

  // optional uint32 begin_time = 2;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 begin_time() const;
  inline void set_begin_time(::google::protobuf::uint32 value);

  // optional uint32 time_length = 3;
  inline bool has_time_length() const;
  inline void clear_time_length();
  static const int kTimeLengthFieldNumber = 3;
  inline ::google::protobuf::uint32 time_length() const;
  inline void set_time_length(::google::protobuf::uint32 value);

  // optional uint32 message_count = 4;
  inline bool has_message_count() const;
  inline void clear_message_count();
  static const int kMessageCountFieldNumber = 4;
  inline ::google::protobuf::uint32 message_count() const;
  inline void set_message_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.HistoryGroupMessageRequest)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_time_length();
  inline void clear_has_time_length();
  inline void set_has_message_count();
  inline void clear_has_message_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::tt_im_group::GroupId* group_id_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 time_length_;
  ::google::protobuf::uint32 message_count_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static HistoryGroupMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class HistoryGroupMessageResponse : public ::google::protobuf::Message {
 public:
  HistoryGroupMessageResponse();
  virtual ~HistoryGroupMessageResponse();

  HistoryGroupMessageResponse(const HistoryGroupMessageResponse& from);

  inline HistoryGroupMessageResponse& operator=(const HistoryGroupMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryGroupMessageResponse& default_instance();

  void Swap(HistoryGroupMessageResponse* other);

  // implements Message ----------------------------------------------

  HistoryGroupMessageResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryGroupMessageResponse& from);
  void MergeFrom(const HistoryGroupMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .tt_im_group.GroupId group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline const ::tt_im_group::GroupId& group_id() const;
  inline ::tt_im_group::GroupId* mutable_group_id();
  inline ::tt_im_group::GroupId* release_group_id();
  inline void set_allocated_group_id(::tt_im_group::GroupId* group_id);

  // repeated .tt_mts.DownlinkGroupMessageRequest messages = 2;
  inline int messages_size() const;
  inline void clear_messages();
  static const int kMessagesFieldNumber = 2;
  inline const ::tt_mts::DownlinkGroupMessageRequest& messages(int index) const;
  inline ::tt_mts::DownlinkGroupMessageRequest* mutable_messages(int index);
  inline ::tt_mts::DownlinkGroupMessageRequest* add_messages();
  inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkGroupMessageRequest >&
      messages() const;
  inline ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkGroupMessageRequest >*
      mutable_messages();

  // optional uint32 current_time = 3;
  inline bool has_current_time() const;
  inline void clear_current_time();
  static const int kCurrentTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 current_time() const;
  inline void set_current_time(::google::protobuf::uint32 value);

  // optional uint32 total_count = 4;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 4;
  inline ::google::protobuf::uint32 total_count() const;
  inline void set_total_count(::google::protobuf::uint32 value);

  // optional uint32 count = 5;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 5;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // optional uint32 index = 6;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 6;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.HistoryGroupMessageResponse)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_current_time();
  inline void clear_has_current_time();
  inline void set_has_total_count();
  inline void clear_has_total_count();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::tt_im_group::GroupId* group_id_;
  ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkGroupMessageRequest > messages_;
  ::google::protobuf::uint32 current_time_;
  ::google::protobuf::uint32 total_count_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 index_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static HistoryGroupMessageResponse* default_instance_;
};
// -------------------------------------------------------------------

class HistorySysMessageRequest : public ::google::protobuf::Message {
 public:
  HistorySysMessageRequest();
  virtual ~HistorySysMessageRequest();

  HistorySysMessageRequest(const HistorySysMessageRequest& from);

  inline HistorySysMessageRequest& operator=(const HistorySysMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistorySysMessageRequest& default_instance();

  void Swap(HistorySysMessageRequest* other);

  // implements Message ----------------------------------------------

  HistorySysMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistorySysMessageRequest& from);
  void MergeFrom(const HistorySysMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 message_type = 1;
  inline bool has_message_type() const;
  inline void clear_message_type();
  static const int kMessageTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 message_type() const;
  inline void set_message_type(::google::protobuf::uint32 value);

  // optional uint32 begin_time = 2;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 begin_time() const;
  inline void set_begin_time(::google::protobuf::uint32 value);

  // optional uint32 time_length = 3;
  inline bool has_time_length() const;
  inline void clear_time_length();
  static const int kTimeLengthFieldNumber = 3;
  inline ::google::protobuf::uint32 time_length() const;
  inline void set_time_length(::google::protobuf::uint32 value);

  // optional uint32 message_count = 4;
  inline bool has_message_count() const;
  inline void clear_message_count();
  static const int kMessageCountFieldNumber = 4;
  inline ::google::protobuf::uint32 message_count() const;
  inline void set_message_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.HistorySysMessageRequest)
 private:
  inline void set_has_message_type();
  inline void clear_has_message_type();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_time_length();
  inline void clear_has_time_length();
  inline void set_has_message_count();
  inline void clear_has_message_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 message_type_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 time_length_;
  ::google::protobuf::uint32 message_count_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static HistorySysMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class HistorySysMessageResponse : public ::google::protobuf::Message {
 public:
  HistorySysMessageResponse();
  virtual ~HistorySysMessageResponse();

  HistorySysMessageResponse(const HistorySysMessageResponse& from);

  inline HistorySysMessageResponse& operator=(const HistorySysMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistorySysMessageResponse& default_instance();

  void Swap(HistorySysMessageResponse* other);

  // implements Message ----------------------------------------------

  HistorySysMessageResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistorySysMessageResponse& from);
  void MergeFrom(const HistorySysMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 message_type = 1;
  inline bool has_message_type() const;
  inline void clear_message_type();
  static const int kMessageTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 message_type() const;
  inline void set_message_type(::google::protobuf::uint32 value);

  // repeated .tt_mts.DownlinkMessageRequest messages = 2;
  inline int messages_size() const;
  inline void clear_messages();
  static const int kMessagesFieldNumber = 2;
  inline const ::tt_mts::DownlinkMessageRequest& messages(int index) const;
  inline ::tt_mts::DownlinkMessageRequest* mutable_messages(int index);
  inline ::tt_mts::DownlinkMessageRequest* add_messages();
  inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest >&
      messages() const;
  inline ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest >*
      mutable_messages();

  // @@protoc_insertion_point(class_scope:tt_mts.HistorySysMessageResponse)
 private:
  inline void set_has_message_type();
  inline void clear_has_message_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest > messages_;
  ::google::protobuf::uint32 message_type_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static HistorySysMessageResponse* default_instance_;
};
// -------------------------------------------------------------------

class MTS_DEBUG_UserInfo : public ::google::protobuf::Message {
 public:
  MTS_DEBUG_UserInfo();
  virtual ~MTS_DEBUG_UserInfo();

  MTS_DEBUG_UserInfo(const MTS_DEBUG_UserInfo& from);

  inline MTS_DEBUG_UserInfo& operator=(const MTS_DEBUG_UserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS_DEBUG_UserInfo& default_instance();

  void Swap(MTS_DEBUG_UserInfo* other);

  // implements Message ----------------------------------------------

  MTS_DEBUG_UserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MTS_DEBUG_UserInfo& from);
  void MergeFrom(const MTS_DEBUG_UserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required string user_ip = 2;
  inline bool has_user_ip() const;
  inline void clear_user_ip();
  static const int kUserIpFieldNumber = 2;
  inline const ::std::string& user_ip() const;
  inline void set_user_ip(const ::std::string& value);
  inline void set_user_ip(const char* value);
  inline void set_user_ip(const char* value, size_t size);
  inline ::std::string* mutable_user_ip();
  inline ::std::string* release_user_ip();
  inline void set_allocated_user_ip(::std::string* user_ip);

  // required uint32 user_port = 3;
  inline bool has_user_port() const;
  inline void clear_user_port();
  static const int kUserPortFieldNumber = 3;
  inline ::google::protobuf::uint32 user_port() const;
  inline void set_user_port(::google::protobuf::uint32 value);

  // optional uint32 login_time = 4;
  inline bool has_login_time() const;
  inline void clear_login_time();
  static const int kLoginTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 login_time() const;
  inline void set_login_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.MTS_DEBUG_UserInfo)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_ip();
  inline void clear_has_user_ip();
  inline void set_has_user_port();
  inline void clear_has_user_port();
  inline void set_has_login_time();
  inline void clear_has_login_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* user_ip_;
  ::google::protobuf::uint32 user_port_;
  ::google::protobuf::uint32 login_time_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static MTS_DEBUG_UserInfo* default_instance_;
};
// -------------------------------------------------------------------

class MTS_DEBUG_ServiceInfo : public ::google::protobuf::Message {
 public:
  MTS_DEBUG_ServiceInfo();
  virtual ~MTS_DEBUG_ServiceInfo();

  MTS_DEBUG_ServiceInfo(const MTS_DEBUG_ServiceInfo& from);

  inline MTS_DEBUG_ServiceInfo& operator=(const MTS_DEBUG_ServiceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS_DEBUG_ServiceInfo& default_instance();

  void Swap(MTS_DEBUG_ServiceInfo* other);

  // implements Message ----------------------------------------------

  MTS_DEBUG_ServiceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MTS_DEBUG_ServiceInfo& from);
  void MergeFrom(const MTS_DEBUG_ServiceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 serve_type = 1;
  inline bool has_serve_type() const;
  inline void clear_serve_type();
  static const int kServeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 serve_type() const;
  inline void set_serve_type(::google::protobuf::uint32 value);

  // required string serve_ip = 2;
  inline bool has_serve_ip() const;
  inline void clear_serve_ip();
  static const int kServeIpFieldNumber = 2;
  inline const ::std::string& serve_ip() const;
  inline void set_serve_ip(const ::std::string& value);
  inline void set_serve_ip(const char* value);
  inline void set_serve_ip(const char* value, size_t size);
  inline ::std::string* mutable_serve_ip();
  inline ::std::string* release_serve_ip();
  inline void set_allocated_serve_ip(::std::string* serve_ip);

  // required uint32 serve_port = 3;
  inline bool has_serve_port() const;
  inline void clear_serve_port();
  static const int kServePortFieldNumber = 3;
  inline ::google::protobuf::uint32 serve_port() const;
  inline void set_serve_port(::google::protobuf::uint32 value);

  // optional uint32 connect_time = 4;
  inline bool has_connect_time() const;
  inline void clear_connect_time();
  static const int kConnectTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 connect_time() const;
  inline void set_connect_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.MTS_DEBUG_ServiceInfo)
 private:
  inline void set_has_serve_type();
  inline void clear_has_serve_type();
  inline void set_has_serve_ip();
  inline void clear_has_serve_ip();
  inline void set_has_serve_port();
  inline void clear_has_serve_port();
  inline void set_has_connect_time();
  inline void clear_has_connect_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* serve_ip_;
  ::google::protobuf::uint32 serve_type_;
  ::google::protobuf::uint32 serve_port_;
  ::google::protobuf::uint32 connect_time_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static MTS_DEBUG_ServiceInfo* default_instance_;
};
// -------------------------------------------------------------------

class MTS_DEBUG_ListUsersRequest : public ::google::protobuf::Message {
 public:
  MTS_DEBUG_ListUsersRequest();
  virtual ~MTS_DEBUG_ListUsersRequest();

  MTS_DEBUG_ListUsersRequest(const MTS_DEBUG_ListUsersRequest& from);

  inline MTS_DEBUG_ListUsersRequest& operator=(const MTS_DEBUG_ListUsersRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS_DEBUG_ListUsersRequest& default_instance();

  void Swap(MTS_DEBUG_ListUsersRequest* other);

  // implements Message ----------------------------------------------

  MTS_DEBUG_ListUsersRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MTS_DEBUG_ListUsersRequest& from);
  void MergeFrom(const MTS_DEBUG_ListUsersRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:tt_mts.MTS_DEBUG_ListUsersRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static MTS_DEBUG_ListUsersRequest* default_instance_;
};
// -------------------------------------------------------------------

class MTS_DEBUG_ListUsersResponse : public ::google::protobuf::Message {
 public:
  MTS_DEBUG_ListUsersResponse();
  virtual ~MTS_DEBUG_ListUsersResponse();

  MTS_DEBUG_ListUsersResponse(const MTS_DEBUG_ListUsersResponse& from);

  inline MTS_DEBUG_ListUsersResponse& operator=(const MTS_DEBUG_ListUsersResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS_DEBUG_ListUsersResponse& default_instance();

  void Swap(MTS_DEBUG_ListUsersResponse* other);

  // implements Message ----------------------------------------------

  MTS_DEBUG_ListUsersResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MTS_DEBUG_ListUsersResponse& from);
  void MergeFrom(const MTS_DEBUG_ListUsersResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tt_mts.MTS_DEBUG_UserInfo users = 1;
  inline int users_size() const;
  inline void clear_users();
  static const int kUsersFieldNumber = 1;
  inline const ::tt_mts::MTS_DEBUG_UserInfo& users(int index) const;
  inline ::tt_mts::MTS_DEBUG_UserInfo* mutable_users(int index);
  inline ::tt_mts::MTS_DEBUG_UserInfo* add_users();
  inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_UserInfo >&
      users() const;
  inline ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_UserInfo >*
      mutable_users();

  // @@protoc_insertion_point(class_scope:tt_mts.MTS_DEBUG_ListUsersResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_UserInfo > users_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static MTS_DEBUG_ListUsersResponse* default_instance_;
};
// -------------------------------------------------------------------

class MTS_DEBUG_ListOtherServicesRequest : public ::google::protobuf::Message {
 public:
  MTS_DEBUG_ListOtherServicesRequest();
  virtual ~MTS_DEBUG_ListOtherServicesRequest();

  MTS_DEBUG_ListOtherServicesRequest(const MTS_DEBUG_ListOtherServicesRequest& from);

  inline MTS_DEBUG_ListOtherServicesRequest& operator=(const MTS_DEBUG_ListOtherServicesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS_DEBUG_ListOtherServicesRequest& default_instance();

  void Swap(MTS_DEBUG_ListOtherServicesRequest* other);

  // implements Message ----------------------------------------------

  MTS_DEBUG_ListOtherServicesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MTS_DEBUG_ListOtherServicesRequest& from);
  void MergeFrom(const MTS_DEBUG_ListOtherServicesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:tt_mts.MTS_DEBUG_ListOtherServicesRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static MTS_DEBUG_ListOtherServicesRequest* default_instance_;
};
// -------------------------------------------------------------------

class MTS_DEBUG_ListOtherServicesResponse : public ::google::protobuf::Message {
 public:
  MTS_DEBUG_ListOtherServicesResponse();
  virtual ~MTS_DEBUG_ListOtherServicesResponse();

  MTS_DEBUG_ListOtherServicesResponse(const MTS_DEBUG_ListOtherServicesResponse& from);

  inline MTS_DEBUG_ListOtherServicesResponse& operator=(const MTS_DEBUG_ListOtherServicesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS_DEBUG_ListOtherServicesResponse& default_instance();

  void Swap(MTS_DEBUG_ListOtherServicesResponse* other);

  // implements Message ----------------------------------------------

  MTS_DEBUG_ListOtherServicesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MTS_DEBUG_ListOtherServicesResponse& from);
  void MergeFrom(const MTS_DEBUG_ListOtherServicesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tt_mts.MTS_DEBUG_ServiceInfo services = 1;
  inline int services_size() const;
  inline void clear_services();
  static const int kServicesFieldNumber = 1;
  inline const ::tt_mts::MTS_DEBUG_ServiceInfo& services(int index) const;
  inline ::tt_mts::MTS_DEBUG_ServiceInfo* mutable_services(int index);
  inline ::tt_mts::MTS_DEBUG_ServiceInfo* add_services();
  inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_ServiceInfo >&
      services() const;
  inline ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_ServiceInfo >*
      mutable_services();

  // @@protoc_insertion_point(class_scope:tt_mts.MTS_DEBUG_ListOtherServicesResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_ServiceInfo > services_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static MTS_DEBUG_ListOtherServicesResponse* default_instance_;
};
// -------------------------------------------------------------------

class MTS_DEBUG_ListGroupsBelongToUserRequest : public ::google::protobuf::Message {
 public:
  MTS_DEBUG_ListGroupsBelongToUserRequest();
  virtual ~MTS_DEBUG_ListGroupsBelongToUserRequest();

  MTS_DEBUG_ListGroupsBelongToUserRequest(const MTS_DEBUG_ListGroupsBelongToUserRequest& from);

  inline MTS_DEBUG_ListGroupsBelongToUserRequest& operator=(const MTS_DEBUG_ListGroupsBelongToUserRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS_DEBUG_ListGroupsBelongToUserRequest& default_instance();

  void Swap(MTS_DEBUG_ListGroupsBelongToUserRequest* other);

  // implements Message ----------------------------------------------

  MTS_DEBUG_ListGroupsBelongToUserRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MTS_DEBUG_ListGroupsBelongToUserRequest& from);
  void MergeFrom(const MTS_DEBUG_ListGroupsBelongToUserRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tt_mts.MTS_DEBUG_ListGroupsBelongToUserRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static MTS_DEBUG_ListGroupsBelongToUserRequest* default_instance_;
};
// -------------------------------------------------------------------

class MTS_DEBUG_ListGroupsBelongToUserResponse : public ::google::protobuf::Message {
 public:
  MTS_DEBUG_ListGroupsBelongToUserResponse();
  virtual ~MTS_DEBUG_ListGroupsBelongToUserResponse();

  MTS_DEBUG_ListGroupsBelongToUserResponse(const MTS_DEBUG_ListGroupsBelongToUserResponse& from);

  inline MTS_DEBUG_ListGroupsBelongToUserResponse& operator=(const MTS_DEBUG_ListGroupsBelongToUserResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS_DEBUG_ListGroupsBelongToUserResponse& default_instance();

  void Swap(MTS_DEBUG_ListGroupsBelongToUserResponse* other);

  // implements Message ----------------------------------------------

  MTS_DEBUG_ListGroupsBelongToUserResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MTS_DEBUG_ListGroupsBelongToUserResponse& from);
  void MergeFrom(const MTS_DEBUG_ListGroupsBelongToUserResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // repeated .tt_im_group.GroupId group_ids = 2;
  inline int group_ids_size() const;
  inline void clear_group_ids();
  static const int kGroupIdsFieldNumber = 2;
  inline const ::tt_im_group::GroupId& group_ids(int index) const;
  inline ::tt_im_group::GroupId* mutable_group_ids(int index);
  inline ::tt_im_group::GroupId* add_group_ids();
  inline const ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >&
      group_ids() const;
  inline ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >*
      mutable_group_ids();

  // @@protoc_insertion_point(class_scope:tt_mts.MTS_DEBUG_ListGroupsBelongToUserResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId > group_ids_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static MTS_DEBUG_ListGroupsBelongToUserResponse* default_instance_;
};
// -------------------------------------------------------------------

class MTS_DEBUG_ListGroupsBelongToGroupserverRequest : public ::google::protobuf::Message {
 public:
  MTS_DEBUG_ListGroupsBelongToGroupserverRequest();
  virtual ~MTS_DEBUG_ListGroupsBelongToGroupserverRequest();

  MTS_DEBUG_ListGroupsBelongToGroupserverRequest(const MTS_DEBUG_ListGroupsBelongToGroupserverRequest& from);

  inline MTS_DEBUG_ListGroupsBelongToGroupserverRequest& operator=(const MTS_DEBUG_ListGroupsBelongToGroupserverRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS_DEBUG_ListGroupsBelongToGroupserverRequest& default_instance();

  void Swap(MTS_DEBUG_ListGroupsBelongToGroupserverRequest* other);

  // implements Message ----------------------------------------------

  MTS_DEBUG_ListGroupsBelongToGroupserverRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MTS_DEBUG_ListGroupsBelongToGroupserverRequest& from);
  void MergeFrom(const MTS_DEBUG_ListGroupsBelongToGroupserverRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string groupserver_ip = 1;
  inline bool has_groupserver_ip() const;
  inline void clear_groupserver_ip();
  static const int kGroupserverIpFieldNumber = 1;
  inline const ::std::string& groupserver_ip() const;
  inline void set_groupserver_ip(const ::std::string& value);
  inline void set_groupserver_ip(const char* value);
  inline void set_groupserver_ip(const char* value, size_t size);
  inline ::std::string* mutable_groupserver_ip();
  inline ::std::string* release_groupserver_ip();
  inline void set_allocated_groupserver_ip(::std::string* groupserver_ip);

  // optional uint32 groupserver_port = 2;
  inline bool has_groupserver_port() const;
  inline void clear_groupserver_port();
  static const int kGroupserverPortFieldNumber = 2;
  inline ::google::protobuf::uint32 groupserver_port() const;
  inline void set_groupserver_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverRequest)
 private:
  inline void set_has_groupserver_ip();
  inline void clear_has_groupserver_ip();
  inline void set_has_groupserver_port();
  inline void clear_has_groupserver_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* groupserver_ip_;
  ::google::protobuf::uint32 groupserver_port_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static MTS_DEBUG_ListGroupsBelongToGroupserverRequest* default_instance_;
};
// -------------------------------------------------------------------

class MTS_DEBUG_ListGroupsBelongToGroupserverResponse : public ::google::protobuf::Message {
 public:
  MTS_DEBUG_ListGroupsBelongToGroupserverResponse();
  virtual ~MTS_DEBUG_ListGroupsBelongToGroupserverResponse();

  MTS_DEBUG_ListGroupsBelongToGroupserverResponse(const MTS_DEBUG_ListGroupsBelongToGroupserverResponse& from);

  inline MTS_DEBUG_ListGroupsBelongToGroupserverResponse& operator=(const MTS_DEBUG_ListGroupsBelongToGroupserverResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS_DEBUG_ListGroupsBelongToGroupserverResponse& default_instance();

  void Swap(MTS_DEBUG_ListGroupsBelongToGroupserverResponse* other);

  // implements Message ----------------------------------------------

  MTS_DEBUG_ListGroupsBelongToGroupserverResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MTS_DEBUG_ListGroupsBelongToGroupserverResponse& from);
  void MergeFrom(const MTS_DEBUG_ListGroupsBelongToGroupserverResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string groupserver_ip = 1;
  inline bool has_groupserver_ip() const;
  inline void clear_groupserver_ip();
  static const int kGroupserverIpFieldNumber = 1;
  inline const ::std::string& groupserver_ip() const;
  inline void set_groupserver_ip(const ::std::string& value);
  inline void set_groupserver_ip(const char* value);
  inline void set_groupserver_ip(const char* value, size_t size);
  inline ::std::string* mutable_groupserver_ip();
  inline ::std::string* release_groupserver_ip();
  inline void set_allocated_groupserver_ip(::std::string* groupserver_ip);

  // optional uint32 groupserver_port = 2;
  inline bool has_groupserver_port() const;
  inline void clear_groupserver_port();
  static const int kGroupserverPortFieldNumber = 2;
  inline ::google::protobuf::uint32 groupserver_port() const;
  inline void set_groupserver_port(::google::protobuf::uint32 value);

  // repeated .tt_im_group.GroupId group_ids = 3;
  inline int group_ids_size() const;
  inline void clear_group_ids();
  static const int kGroupIdsFieldNumber = 3;
  inline const ::tt_im_group::GroupId& group_ids(int index) const;
  inline ::tt_im_group::GroupId* mutable_group_ids(int index);
  inline ::tt_im_group::GroupId* add_group_ids();
  inline const ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >&
      group_ids() const;
  inline ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >*
      mutable_group_ids();

  // @@protoc_insertion_point(class_scope:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverResponse)
 private:
  inline void set_has_groupserver_ip();
  inline void clear_has_groupserver_ip();
  inline void set_has_groupserver_port();
  inline void clear_has_groupserver_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* groupserver_ip_;
  ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId > group_ids_;
  ::google::protobuf::uint32 groupserver_port_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static MTS_DEBUG_ListGroupsBelongToGroupserverResponse* default_instance_;
};
// -------------------------------------------------------------------

class MTS_DEBUG_ListUsersBelongToGroupRequest : public ::google::protobuf::Message {
 public:
  MTS_DEBUG_ListUsersBelongToGroupRequest();
  virtual ~MTS_DEBUG_ListUsersBelongToGroupRequest();

  MTS_DEBUG_ListUsersBelongToGroupRequest(const MTS_DEBUG_ListUsersBelongToGroupRequest& from);

  inline MTS_DEBUG_ListUsersBelongToGroupRequest& operator=(const MTS_DEBUG_ListUsersBelongToGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS_DEBUG_ListUsersBelongToGroupRequest& default_instance();

  void Swap(MTS_DEBUG_ListUsersBelongToGroupRequest* other);

  // implements Message ----------------------------------------------

  MTS_DEBUG_ListUsersBelongToGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MTS_DEBUG_ListUsersBelongToGroupRequest& from);
  void MergeFrom(const MTS_DEBUG_ListUsersBelongToGroupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .tt_im_group.GroupId group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline const ::tt_im_group::GroupId& group_id() const;
  inline ::tt_im_group::GroupId* mutable_group_id();
  inline ::tt_im_group::GroupId* release_group_id();
  inline void set_allocated_group_id(::tt_im_group::GroupId* group_id);

  // @@protoc_insertion_point(class_scope:tt_mts.MTS_DEBUG_ListUsersBelongToGroupRequest)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::tt_im_group::GroupId* group_id_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static MTS_DEBUG_ListUsersBelongToGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class MTS_DEBUG_ListUsersBelongToGroupResponse : public ::google::protobuf::Message {
 public:
  MTS_DEBUG_ListUsersBelongToGroupResponse();
  virtual ~MTS_DEBUG_ListUsersBelongToGroupResponse();

  MTS_DEBUG_ListUsersBelongToGroupResponse(const MTS_DEBUG_ListUsersBelongToGroupResponse& from);

  inline MTS_DEBUG_ListUsersBelongToGroupResponse& operator=(const MTS_DEBUG_ListUsersBelongToGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTS_DEBUG_ListUsersBelongToGroupResponse& default_instance();

  void Swap(MTS_DEBUG_ListUsersBelongToGroupResponse* other);

  // implements Message ----------------------------------------------

  MTS_DEBUG_ListUsersBelongToGroupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MTS_DEBUG_ListUsersBelongToGroupResponse& from);
  void MergeFrom(const MTS_DEBUG_ListUsersBelongToGroupResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .tt_im_group.GroupId group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline const ::tt_im_group::GroupId& group_id() const;
  inline ::tt_im_group::GroupId* mutable_group_id();
  inline ::tt_im_group::GroupId* release_group_id();
  inline void set_allocated_group_id(::tt_im_group::GroupId* group_id);

  // repeated .tt_mts.MTS_DEBUG_UserInfo users = 2;
  inline int users_size() const;
  inline void clear_users();
  static const int kUsersFieldNumber = 2;
  inline const ::tt_mts::MTS_DEBUG_UserInfo& users(int index) const;
  inline ::tt_mts::MTS_DEBUG_UserInfo* mutable_users(int index);
  inline ::tt_mts::MTS_DEBUG_UserInfo* add_users();
  inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_UserInfo >&
      users() const;
  inline ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_UserInfo >*
      mutable_users();

  // @@protoc_insertion_point(class_scope:tt_mts.MTS_DEBUG_ListUsersBelongToGroupResponse)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::tt_im_group::GroupId* group_id_;
  ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_UserInfo > users_;
  friend void  protobuf_AddDesc_MessageTransferServer_2eproto();
  friend void protobuf_AssignDesc_MessageTransferServer_2eproto();
  friend void protobuf_ShutdownFile_MessageTransferServer_2eproto();

  void InitAsDefaultInstance();
  static MTS_DEBUG_ListUsersBelongToGroupResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// LoginRequest_AccessAddr

// optional string ip = 1;
inline bool LoginRequest_AccessAddr::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRequest_AccessAddr::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRequest_AccessAddr::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRequest_AccessAddr::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& LoginRequest_AccessAddr::ip() const {
  // @@protoc_insertion_point(field_get:tt_mts.LoginRequest.AccessAddr.ip)
  return *ip_;
}
inline void LoginRequest_AccessAddr::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:tt_mts.LoginRequest.AccessAddr.ip)
}
inline void LoginRequest_AccessAddr::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_mts.LoginRequest.AccessAddr.ip)
}
inline void LoginRequest_AccessAddr::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_mts.LoginRequest.AccessAddr.ip)
}
inline ::std::string* LoginRequest_AccessAddr::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_mts.LoginRequest.AccessAddr.ip)
  return ip_;
}
inline ::std::string* LoginRequest_AccessAddr::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginRequest_AccessAddr::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.LoginRequest.AccessAddr.ip)
}

// optional uint32 port = 2;
inline bool LoginRequest_AccessAddr::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRequest_AccessAddr::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRequest_AccessAddr::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRequest_AccessAddr::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 LoginRequest_AccessAddr::port() const {
  // @@protoc_insertion_point(field_get:tt_mts.LoginRequest.AccessAddr.port)
  return port_;
}
inline void LoginRequest_AccessAddr::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.LoginRequest.AccessAddr.port)
}

// -------------------------------------------------------------------

// LoginRequest

// required uint64 user_id = 1;
inline bool LoginRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 LoginRequest::user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.LoginRequest.user_id)
  return user_id_;
}
inline void LoginRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.LoginRequest.user_id)
}

// optional uint32 dev_type = 2;
inline bool LoginRequest::has_dev_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRequest::set_has_dev_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRequest::clear_has_dev_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRequest::clear_dev_type() {
  dev_type_ = 0u;
  clear_has_dev_type();
}
inline ::google::protobuf::uint32 LoginRequest::dev_type() const {
  // @@protoc_insertion_point(field_get:tt_mts.LoginRequest.dev_type)
  return dev_type_;
}
inline void LoginRequest::set_dev_type(::google::protobuf::uint32 value) {
  set_has_dev_type();
  dev_type_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.LoginRequest.dev_type)
}

// optional string token = 3;
inline bool LoginRequest::has_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRequest::set_has_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRequest::clear_has_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRequest::clear_token() {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& LoginRequest::token() const {
  // @@protoc_insertion_point(field_get:tt_mts.LoginRequest.token)
  return *token_;
}
inline void LoginRequest::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set:tt_mts.LoginRequest.token)
}
inline void LoginRequest::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_mts.LoginRequest.token)
}
inline void LoginRequest::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_mts.LoginRequest.token)
}
inline ::std::string* LoginRequest::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_mts.LoginRequest.token)
  return token_;
}
inline ::std::string* LoginRequest::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginRequest::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.LoginRequest.token)
}

// optional .tt_mts.LoginRequest.AccessAddr access_addr = 4;
inline bool LoginRequest::has_access_addr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginRequest::set_has_access_addr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginRequest::clear_has_access_addr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginRequest::clear_access_addr() {
  if (access_addr_ != NULL) access_addr_->::tt_mts::LoginRequest_AccessAddr::Clear();
  clear_has_access_addr();
}
inline const ::tt_mts::LoginRequest_AccessAddr& LoginRequest::access_addr() const {
  // @@protoc_insertion_point(field_get:tt_mts.LoginRequest.access_addr)
  return access_addr_ != NULL ? *access_addr_ : *default_instance_->access_addr_;
}
inline ::tt_mts::LoginRequest_AccessAddr* LoginRequest::mutable_access_addr() {
  set_has_access_addr();
  if (access_addr_ == NULL) access_addr_ = new ::tt_mts::LoginRequest_AccessAddr;
  // @@protoc_insertion_point(field_mutable:tt_mts.LoginRequest.access_addr)
  return access_addr_;
}
inline ::tt_mts::LoginRequest_AccessAddr* LoginRequest::release_access_addr() {
  clear_has_access_addr();
  ::tt_mts::LoginRequest_AccessAddr* temp = access_addr_;
  access_addr_ = NULL;
  return temp;
}
inline void LoginRequest::set_allocated_access_addr(::tt_mts::LoginRequest_AccessAddr* access_addr) {
  delete access_addr_;
  access_addr_ = access_addr;
  if (access_addr) {
    set_has_access_addr();
  } else {
    clear_has_access_addr();
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.LoginRequest.access_addr)
}

// -------------------------------------------------------------------

// LogoutRequest

// required uint64 user_id = 1;
inline bool LogoutRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogoutRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogoutRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogoutRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 LogoutRequest::user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.LogoutRequest.user_id)
  return user_id_;
}
inline void LogoutRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.LogoutRequest.user_id)
}

// optional uint32 dev_type = 2;
inline bool LogoutRequest::has_dev_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogoutRequest::set_has_dev_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogoutRequest::clear_has_dev_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogoutRequest::clear_dev_type() {
  dev_type_ = 0u;
  clear_has_dev_type();
}
inline ::google::protobuf::uint32 LogoutRequest::dev_type() const {
  // @@protoc_insertion_point(field_get:tt_mts.LogoutRequest.dev_type)
  return dev_type_;
}
inline void LogoutRequest::set_dev_type(::google::protobuf::uint32 value) {
  set_has_dev_type();
  dev_type_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.LogoutRequest.dev_type)
}

// -------------------------------------------------------------------

// RegisterInterestGroupIdRequest

// required uint64 user_id = 1;
inline bool RegisterInterestGroupIdRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterInterestGroupIdRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterInterestGroupIdRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterInterestGroupIdRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 RegisterInterestGroupIdRequest::user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.RegisterInterestGroupIdRequest.user_id)
  return user_id_;
}
inline void RegisterInterestGroupIdRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.RegisterInterestGroupIdRequest.user_id)
}

// repeated .tt_im_group.GroupId groupid_list = 2;
inline int RegisterInterestGroupIdRequest::groupid_list_size() const {
  return groupid_list_.size();
}
inline void RegisterInterestGroupIdRequest::clear_groupid_list() {
  groupid_list_.Clear();
}
inline const ::tt_im_group::GroupId& RegisterInterestGroupIdRequest::groupid_list(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.RegisterInterestGroupIdRequest.groupid_list)
  return groupid_list_.Get(index);
}
inline ::tt_im_group::GroupId* RegisterInterestGroupIdRequest::mutable_groupid_list(int index) {
  // @@protoc_insertion_point(field_mutable:tt_mts.RegisterInterestGroupIdRequest.groupid_list)
  return groupid_list_.Mutable(index);
}
inline ::tt_im_group::GroupId* RegisterInterestGroupIdRequest::add_groupid_list() {
  // @@protoc_insertion_point(field_add:tt_mts.RegisterInterestGroupIdRequest.groupid_list)
  return groupid_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >&
RegisterInterestGroupIdRequest::groupid_list() const {
  // @@protoc_insertion_point(field_list:tt_mts.RegisterInterestGroupIdRequest.groupid_list)
  return groupid_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >*
RegisterInterestGroupIdRequest::mutable_groupid_list() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.RegisterInterestGroupIdRequest.groupid_list)
  return &groupid_list_;
}

// -------------------------------------------------------------------

// UnRegisterInterestGroupIdRequest

// required uint64 user_id = 1;
inline bool UnRegisterInterestGroupIdRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnRegisterInterestGroupIdRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnRegisterInterestGroupIdRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnRegisterInterestGroupIdRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 UnRegisterInterestGroupIdRequest::user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.UnRegisterInterestGroupIdRequest.user_id)
  return user_id_;
}
inline void UnRegisterInterestGroupIdRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.UnRegisterInterestGroupIdRequest.user_id)
}

// repeated .tt_im_group.GroupId groupid_list = 2;
inline int UnRegisterInterestGroupIdRequest::groupid_list_size() const {
  return groupid_list_.size();
}
inline void UnRegisterInterestGroupIdRequest::clear_groupid_list() {
  groupid_list_.Clear();
}
inline const ::tt_im_group::GroupId& UnRegisterInterestGroupIdRequest::groupid_list(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.UnRegisterInterestGroupIdRequest.groupid_list)
  return groupid_list_.Get(index);
}
inline ::tt_im_group::GroupId* UnRegisterInterestGroupIdRequest::mutable_groupid_list(int index) {
  // @@protoc_insertion_point(field_mutable:tt_mts.UnRegisterInterestGroupIdRequest.groupid_list)
  return groupid_list_.Mutable(index);
}
inline ::tt_im_group::GroupId* UnRegisterInterestGroupIdRequest::add_groupid_list() {
  // @@protoc_insertion_point(field_add:tt_mts.UnRegisterInterestGroupIdRequest.groupid_list)
  return groupid_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >&
UnRegisterInterestGroupIdRequest::groupid_list() const {
  // @@protoc_insertion_point(field_list:tt_mts.UnRegisterInterestGroupIdRequest.groupid_list)
  return groupid_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >*
UnRegisterInterestGroupIdRequest::mutable_groupid_list() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.UnRegisterInterestGroupIdRequest.groupid_list)
  return &groupid_list_;
}

// -------------------------------------------------------------------

// UplinkMessageRequest

// required uint64 from_user_id = 1;
inline bool UplinkMessageRequest::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UplinkMessageRequest::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UplinkMessageRequest::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UplinkMessageRequest::clear_from_user_id() {
  from_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_from_user_id();
}
inline ::google::protobuf::uint64 UplinkMessageRequest::from_user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.UplinkMessageRequest.from_user_id)
  return from_user_id_;
}
inline void UplinkMessageRequest::set_from_user_id(::google::protobuf::uint64 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.UplinkMessageRequest.from_user_id)
}

// required uint64 to_user_id = 2;
inline bool UplinkMessageRequest::has_to_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UplinkMessageRequest::set_has_to_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UplinkMessageRequest::clear_has_to_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UplinkMessageRequest::clear_to_user_id() {
  to_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_to_user_id();
}
inline ::google::protobuf::uint64 UplinkMessageRequest::to_user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.UplinkMessageRequest.to_user_id)
  return to_user_id_;
}
inline void UplinkMessageRequest::set_to_user_id(::google::protobuf::uint64 value) {
  set_has_to_user_id();
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.UplinkMessageRequest.to_user_id)
}

// required uint32 is_online = 3;
inline bool UplinkMessageRequest::has_is_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UplinkMessageRequest::set_has_is_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UplinkMessageRequest::clear_has_is_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UplinkMessageRequest::clear_is_online() {
  is_online_ = 0u;
  clear_has_is_online();
}
inline ::google::protobuf::uint32 UplinkMessageRequest::is_online() const {
  // @@protoc_insertion_point(field_get:tt_mts.UplinkMessageRequest.is_online)
  return is_online_;
}
inline void UplinkMessageRequest::set_is_online(::google::protobuf::uint32 value) {
  set_has_is_online();
  is_online_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.UplinkMessageRequest.is_online)
}

// required string message = 4;
inline bool UplinkMessageRequest::has_message() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UplinkMessageRequest::set_has_message() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UplinkMessageRequest::clear_has_message() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UplinkMessageRequest::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& UplinkMessageRequest::message() const {
  // @@protoc_insertion_point(field_get:tt_mts.UplinkMessageRequest.message)
  return *message_;
}
inline void UplinkMessageRequest::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:tt_mts.UplinkMessageRequest.message)
}
inline void UplinkMessageRequest::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_mts.UplinkMessageRequest.message)
}
inline void UplinkMessageRequest::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_mts.UplinkMessageRequest.message)
}
inline ::std::string* UplinkMessageRequest::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_mts.UplinkMessageRequest.message)
  return message_;
}
inline ::std::string* UplinkMessageRequest::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UplinkMessageRequest::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.UplinkMessageRequest.message)
}

// optional uint32 message_type = 5;
inline bool UplinkMessageRequest::has_message_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UplinkMessageRequest::set_has_message_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UplinkMessageRequest::clear_has_message_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UplinkMessageRequest::clear_message_type() {
  message_type_ = 0u;
  clear_has_message_type();
}
inline ::google::protobuf::uint32 UplinkMessageRequest::message_type() const {
  // @@protoc_insertion_point(field_get:tt_mts.UplinkMessageRequest.message_type)
  return message_type_;
}
inline void UplinkMessageRequest::set_message_type(::google::protobuf::uint32 value) {
  set_has_message_type();
  message_type_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.UplinkMessageRequest.message_type)
}

// optional string mts_ip = 6;
inline bool UplinkMessageRequest::has_mts_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UplinkMessageRequest::set_has_mts_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UplinkMessageRequest::clear_has_mts_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UplinkMessageRequest::clear_mts_ip() {
  if (mts_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_->clear();
  }
  clear_has_mts_ip();
}
inline const ::std::string& UplinkMessageRequest::mts_ip() const {
  // @@protoc_insertion_point(field_get:tt_mts.UplinkMessageRequest.mts_ip)
  return *mts_ip_;
}
inline void UplinkMessageRequest::set_mts_ip(const ::std::string& value) {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  mts_ip_->assign(value);
  // @@protoc_insertion_point(field_set:tt_mts.UplinkMessageRequest.mts_ip)
}
inline void UplinkMessageRequest::set_mts_ip(const char* value) {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  mts_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_mts.UplinkMessageRequest.mts_ip)
}
inline void UplinkMessageRequest::set_mts_ip(const char* value, size_t size) {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  mts_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_mts.UplinkMessageRequest.mts_ip)
}
inline ::std::string* UplinkMessageRequest::mutable_mts_ip() {
  set_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mts_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_mts.UplinkMessageRequest.mts_ip)
  return mts_ip_;
}
inline ::std::string* UplinkMessageRequest::release_mts_ip() {
  clear_has_mts_ip();
  if (mts_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mts_ip_;
    mts_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UplinkMessageRequest::set_allocated_mts_ip(::std::string* mts_ip) {
  if (mts_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mts_ip_;
  }
  if (mts_ip) {
    set_has_mts_ip();
    mts_ip_ = mts_ip;
  } else {
    clear_has_mts_ip();
    mts_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.UplinkMessageRequest.mts_ip)
}

// optional uint32 mts_port = 7;
inline bool UplinkMessageRequest::has_mts_port() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UplinkMessageRequest::set_has_mts_port() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UplinkMessageRequest::clear_has_mts_port() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UplinkMessageRequest::clear_mts_port() {
  mts_port_ = 0u;
  clear_has_mts_port();
}
inline ::google::protobuf::uint32 UplinkMessageRequest::mts_port() const {
  // @@protoc_insertion_point(field_get:tt_mts.UplinkMessageRequest.mts_port)
  return mts_port_;
}
inline void UplinkMessageRequest::set_mts_port(::google::protobuf::uint32 value) {
  set_has_mts_port();
  mts_port_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.UplinkMessageRequest.mts_port)
}

// -------------------------------------------------------------------

// DownlinkMessageRequest

// required uint64 from_user_id = 1;
inline bool DownlinkMessageRequest::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DownlinkMessageRequest::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DownlinkMessageRequest::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DownlinkMessageRequest::clear_from_user_id() {
  from_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_from_user_id();
}
inline ::google::protobuf::uint64 DownlinkMessageRequest::from_user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.DownlinkMessageRequest.from_user_id)
  return from_user_id_;
}
inline void DownlinkMessageRequest::set_from_user_id(::google::protobuf::uint64 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.DownlinkMessageRequest.from_user_id)
}

// required uint64 to_user_id = 2;
inline bool DownlinkMessageRequest::has_to_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DownlinkMessageRequest::set_has_to_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DownlinkMessageRequest::clear_has_to_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DownlinkMessageRequest::clear_to_user_id() {
  to_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_to_user_id();
}
inline ::google::protobuf::uint64 DownlinkMessageRequest::to_user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.DownlinkMessageRequest.to_user_id)
  return to_user_id_;
}
inline void DownlinkMessageRequest::set_to_user_id(::google::protobuf::uint64 value) {
  set_has_to_user_id();
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.DownlinkMessageRequest.to_user_id)
}

// required uint32 message_pts = 3;
inline bool DownlinkMessageRequest::has_message_pts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DownlinkMessageRequest::set_has_message_pts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DownlinkMessageRequest::clear_has_message_pts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DownlinkMessageRequest::clear_message_pts() {
  message_pts_ = 0u;
  clear_has_message_pts();
}
inline ::google::protobuf::uint32 DownlinkMessageRequest::message_pts() const {
  // @@protoc_insertion_point(field_get:tt_mts.DownlinkMessageRequest.message_pts)
  return message_pts_;
}
inline void DownlinkMessageRequest::set_message_pts(::google::protobuf::uint32 value) {
  set_has_message_pts();
  message_pts_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.DownlinkMessageRequest.message_pts)
}

// required string message = 4;
inline bool DownlinkMessageRequest::has_message() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DownlinkMessageRequest::set_has_message() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DownlinkMessageRequest::clear_has_message() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DownlinkMessageRequest::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& DownlinkMessageRequest::message() const {
  // @@protoc_insertion_point(field_get:tt_mts.DownlinkMessageRequest.message)
  return *message_;
}
inline void DownlinkMessageRequest::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:tt_mts.DownlinkMessageRequest.message)
}
inline void DownlinkMessageRequest::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_mts.DownlinkMessageRequest.message)
}
inline void DownlinkMessageRequest::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_mts.DownlinkMessageRequest.message)
}
inline ::std::string* DownlinkMessageRequest::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_mts.DownlinkMessageRequest.message)
  return message_;
}
inline ::std::string* DownlinkMessageRequest::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DownlinkMessageRequest::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.DownlinkMessageRequest.message)
}

// optional uint32 message_type = 5;
inline bool DownlinkMessageRequest::has_message_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DownlinkMessageRequest::set_has_message_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DownlinkMessageRequest::clear_has_message_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DownlinkMessageRequest::clear_message_type() {
  message_type_ = 0u;
  clear_has_message_type();
}
inline ::google::protobuf::uint32 DownlinkMessageRequest::message_type() const {
  // @@protoc_insertion_point(field_get:tt_mts.DownlinkMessageRequest.message_type)
  return message_type_;
}
inline void DownlinkMessageRequest::set_message_type(::google::protobuf::uint32 value) {
  set_has_message_type();
  message_type_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.DownlinkMessageRequest.message_type)
}

// -------------------------------------------------------------------

// UplinkGroupMessageRequest

// required uint64 from_user_id = 1;
inline bool UplinkGroupMessageRequest::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UplinkGroupMessageRequest::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UplinkGroupMessageRequest::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UplinkGroupMessageRequest::clear_from_user_id() {
  from_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_from_user_id();
}
inline ::google::protobuf::uint64 UplinkGroupMessageRequest::from_user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.UplinkGroupMessageRequest.from_user_id)
  return from_user_id_;
}
inline void UplinkGroupMessageRequest::set_from_user_id(::google::protobuf::uint64 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.UplinkGroupMessageRequest.from_user_id)
}

// required .tt_im_group.GroupId group_id = 2;
inline bool UplinkGroupMessageRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UplinkGroupMessageRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UplinkGroupMessageRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UplinkGroupMessageRequest::clear_group_id() {
  if (group_id_ != NULL) group_id_->::tt_im_group::GroupId::Clear();
  clear_has_group_id();
}
inline const ::tt_im_group::GroupId& UplinkGroupMessageRequest::group_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.UplinkGroupMessageRequest.group_id)
  return group_id_ != NULL ? *group_id_ : *default_instance_->group_id_;
}
inline ::tt_im_group::GroupId* UplinkGroupMessageRequest::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == NULL) group_id_ = new ::tt_im_group::GroupId;
  // @@protoc_insertion_point(field_mutable:tt_mts.UplinkGroupMessageRequest.group_id)
  return group_id_;
}
inline ::tt_im_group::GroupId* UplinkGroupMessageRequest::release_group_id() {
  clear_has_group_id();
  ::tt_im_group::GroupId* temp = group_id_;
  group_id_ = NULL;
  return temp;
}
inline void UplinkGroupMessageRequest::set_allocated_group_id(::tt_im_group::GroupId* group_id) {
  delete group_id_;
  group_id_ = group_id;
  if (group_id) {
    set_has_group_id();
  } else {
    clear_has_group_id();
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.UplinkGroupMessageRequest.group_id)
}

// required string message = 3;
inline bool UplinkGroupMessageRequest::has_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UplinkGroupMessageRequest::set_has_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UplinkGroupMessageRequest::clear_has_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UplinkGroupMessageRequest::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& UplinkGroupMessageRequest::message() const {
  // @@protoc_insertion_point(field_get:tt_mts.UplinkGroupMessageRequest.message)
  return *message_;
}
inline void UplinkGroupMessageRequest::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:tt_mts.UplinkGroupMessageRequest.message)
}
inline void UplinkGroupMessageRequest::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_mts.UplinkGroupMessageRequest.message)
}
inline void UplinkGroupMessageRequest::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_mts.UplinkGroupMessageRequest.message)
}
inline ::std::string* UplinkGroupMessageRequest::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_mts.UplinkGroupMessageRequest.message)
  return message_;
}
inline ::std::string* UplinkGroupMessageRequest::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UplinkGroupMessageRequest::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.UplinkGroupMessageRequest.message)
}

// optional uint32 message_type = 4;
inline bool UplinkGroupMessageRequest::has_message_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UplinkGroupMessageRequest::set_has_message_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UplinkGroupMessageRequest::clear_has_message_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UplinkGroupMessageRequest::clear_message_type() {
  message_type_ = 0u;
  clear_has_message_type();
}
inline ::google::protobuf::uint32 UplinkGroupMessageRequest::message_type() const {
  // @@protoc_insertion_point(field_get:tt_mts.UplinkGroupMessageRequest.message_type)
  return message_type_;
}
inline void UplinkGroupMessageRequest::set_message_type(::google::protobuf::uint32 value) {
  set_has_message_type();
  message_type_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.UplinkGroupMessageRequest.message_type)
}

// optional uint32 message_priority = 5;
inline bool UplinkGroupMessageRequest::has_message_priority() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UplinkGroupMessageRequest::set_has_message_priority() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UplinkGroupMessageRequest::clear_has_message_priority() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UplinkGroupMessageRequest::clear_message_priority() {
  message_priority_ = 0u;
  clear_has_message_priority();
}
inline ::google::protobuf::uint32 UplinkGroupMessageRequest::message_priority() const {
  // @@protoc_insertion_point(field_get:tt_mts.UplinkGroupMessageRequest.message_priority)
  return message_priority_;
}
inline void UplinkGroupMessageRequest::set_message_priority(::google::protobuf::uint32 value) {
  set_has_message_priority();
  message_priority_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.UplinkGroupMessageRequest.message_priority)
}

// -------------------------------------------------------------------

// DownlinkGroupMessageRequest

// required uint64 from_user_id = 1;
inline bool DownlinkGroupMessageRequest::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DownlinkGroupMessageRequest::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DownlinkGroupMessageRequest::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DownlinkGroupMessageRequest::clear_from_user_id() {
  from_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_from_user_id();
}
inline ::google::protobuf::uint64 DownlinkGroupMessageRequest::from_user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.DownlinkGroupMessageRequest.from_user_id)
  return from_user_id_;
}
inline void DownlinkGroupMessageRequest::set_from_user_id(::google::protobuf::uint64 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.DownlinkGroupMessageRequest.from_user_id)
}

// required .tt_im_group.GroupId group_id = 2;
inline bool DownlinkGroupMessageRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DownlinkGroupMessageRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DownlinkGroupMessageRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DownlinkGroupMessageRequest::clear_group_id() {
  if (group_id_ != NULL) group_id_->::tt_im_group::GroupId::Clear();
  clear_has_group_id();
}
inline const ::tt_im_group::GroupId& DownlinkGroupMessageRequest::group_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.DownlinkGroupMessageRequest.group_id)
  return group_id_ != NULL ? *group_id_ : *default_instance_->group_id_;
}
inline ::tt_im_group::GroupId* DownlinkGroupMessageRequest::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == NULL) group_id_ = new ::tt_im_group::GroupId;
  // @@protoc_insertion_point(field_mutable:tt_mts.DownlinkGroupMessageRequest.group_id)
  return group_id_;
}
inline ::tt_im_group::GroupId* DownlinkGroupMessageRequest::release_group_id() {
  clear_has_group_id();
  ::tt_im_group::GroupId* temp = group_id_;
  group_id_ = NULL;
  return temp;
}
inline void DownlinkGroupMessageRequest::set_allocated_group_id(::tt_im_group::GroupId* group_id) {
  delete group_id_;
  group_id_ = group_id;
  if (group_id) {
    set_has_group_id();
  } else {
    clear_has_group_id();
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.DownlinkGroupMessageRequest.group_id)
}

// required string message = 3;
inline bool DownlinkGroupMessageRequest::has_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DownlinkGroupMessageRequest::set_has_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DownlinkGroupMessageRequest::clear_has_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DownlinkGroupMessageRequest::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& DownlinkGroupMessageRequest::message() const {
  // @@protoc_insertion_point(field_get:tt_mts.DownlinkGroupMessageRequest.message)
  return *message_;
}
inline void DownlinkGroupMessageRequest::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:tt_mts.DownlinkGroupMessageRequest.message)
}
inline void DownlinkGroupMessageRequest::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_mts.DownlinkGroupMessageRequest.message)
}
inline void DownlinkGroupMessageRequest::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_mts.DownlinkGroupMessageRequest.message)
}
inline ::std::string* DownlinkGroupMessageRequest::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_mts.DownlinkGroupMessageRequest.message)
  return message_;
}
inline ::std::string* DownlinkGroupMessageRequest::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DownlinkGroupMessageRequest::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.DownlinkGroupMessageRequest.message)
}

// required uint32 message_pts = 4;
inline bool DownlinkGroupMessageRequest::has_message_pts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DownlinkGroupMessageRequest::set_has_message_pts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DownlinkGroupMessageRequest::clear_has_message_pts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DownlinkGroupMessageRequest::clear_message_pts() {
  message_pts_ = 0u;
  clear_has_message_pts();
}
inline ::google::protobuf::uint32 DownlinkGroupMessageRequest::message_pts() const {
  // @@protoc_insertion_point(field_get:tt_mts.DownlinkGroupMessageRequest.message_pts)
  return message_pts_;
}
inline void DownlinkGroupMessageRequest::set_message_pts(::google::protobuf::uint32 value) {
  set_has_message_pts();
  message_pts_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.DownlinkGroupMessageRequest.message_pts)
}

// optional uint32 message_type = 5;
inline bool DownlinkGroupMessageRequest::has_message_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DownlinkGroupMessageRequest::set_has_message_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DownlinkGroupMessageRequest::clear_has_message_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DownlinkGroupMessageRequest::clear_message_type() {
  message_type_ = 0u;
  clear_has_message_type();
}
inline ::google::protobuf::uint32 DownlinkGroupMessageRequest::message_type() const {
  // @@protoc_insertion_point(field_get:tt_mts.DownlinkGroupMessageRequest.message_type)
  return message_type_;
}
inline void DownlinkGroupMessageRequest::set_message_type(::google::protobuf::uint32 value) {
  set_has_message_type();
  message_type_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.DownlinkGroupMessageRequest.message_type)
}

// optional uint32 message_priority = 6;
inline bool DownlinkGroupMessageRequest::has_message_priority() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DownlinkGroupMessageRequest::set_has_message_priority() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DownlinkGroupMessageRequest::clear_has_message_priority() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DownlinkGroupMessageRequest::clear_message_priority() {
  message_priority_ = 0u;
  clear_has_message_priority();
}
inline ::google::protobuf::uint32 DownlinkGroupMessageRequest::message_priority() const {
  // @@protoc_insertion_point(field_get:tt_mts.DownlinkGroupMessageRequest.message_priority)
  return message_priority_;
}
inline void DownlinkGroupMessageRequest::set_message_priority(::google::protobuf::uint32 value) {
  set_has_message_priority();
  message_priority_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.DownlinkGroupMessageRequest.message_priority)
}

// -------------------------------------------------------------------

// HistoryMessageRequest

// required uint64 user_id = 1;
inline bool HistoryMessageRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryMessageRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryMessageRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryMessageRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 HistoryMessageRequest::user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageRequest.user_id)
  return user_id_;
}
inline void HistoryMessageRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageRequest.user_id)
}

// optional uint32 begin_time = 2;
inline bool HistoryMessageRequest::has_begin_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryMessageRequest::set_has_begin_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryMessageRequest::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryMessageRequest::clear_begin_time() {
  begin_time_ = 0u;
  clear_has_begin_time();
}
inline ::google::protobuf::uint32 HistoryMessageRequest::begin_time() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageRequest.begin_time)
  return begin_time_;
}
inline void HistoryMessageRequest::set_begin_time(::google::protobuf::uint32 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageRequest.begin_time)
}

// optional uint32 time_length = 3;
inline bool HistoryMessageRequest::has_time_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HistoryMessageRequest::set_has_time_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HistoryMessageRequest::clear_has_time_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HistoryMessageRequest::clear_time_length() {
  time_length_ = 0u;
  clear_has_time_length();
}
inline ::google::protobuf::uint32 HistoryMessageRequest::time_length() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageRequest.time_length)
  return time_length_;
}
inline void HistoryMessageRequest::set_time_length(::google::protobuf::uint32 value) {
  set_has_time_length();
  time_length_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageRequest.time_length)
}

// optional uint32 message_count = 4;
inline bool HistoryMessageRequest::has_message_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HistoryMessageRequest::set_has_message_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HistoryMessageRequest::clear_has_message_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HistoryMessageRequest::clear_message_count() {
  message_count_ = 0u;
  clear_has_message_count();
}
inline ::google::protobuf::uint32 HistoryMessageRequest::message_count() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageRequest.message_count)
  return message_count_;
}
inline void HistoryMessageRequest::set_message_count(::google::protobuf::uint32 value) {
  set_has_message_count();
  message_count_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageRequest.message_count)
}

// -------------------------------------------------------------------

// HistoryMessageResponse

// required uint64 user_id = 1;
inline bool HistoryMessageResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryMessageResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryMessageResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryMessageResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 HistoryMessageResponse::user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageResponse.user_id)
  return user_id_;
}
inline void HistoryMessageResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageResponse.user_id)
}

// repeated .tt_mts.DownlinkMessageRequest messages = 2;
inline int HistoryMessageResponse::messages_size() const {
  return messages_.size();
}
inline void HistoryMessageResponse::clear_messages() {
  messages_.Clear();
}
inline const ::tt_mts::DownlinkMessageRequest& HistoryMessageResponse::messages(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageResponse.messages)
  return messages_.Get(index);
}
inline ::tt_mts::DownlinkMessageRequest* HistoryMessageResponse::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:tt_mts.HistoryMessageResponse.messages)
  return messages_.Mutable(index);
}
inline ::tt_mts::DownlinkMessageRequest* HistoryMessageResponse::add_messages() {
  // @@protoc_insertion_point(field_add:tt_mts.HistoryMessageResponse.messages)
  return messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest >&
HistoryMessageResponse::messages() const {
  // @@protoc_insertion_point(field_list:tt_mts.HistoryMessageResponse.messages)
  return messages_;
}
inline ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest >*
HistoryMessageResponse::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.HistoryMessageResponse.messages)
  return &messages_;
}

// optional uint32 current_time = 3;
inline bool HistoryMessageResponse::has_current_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HistoryMessageResponse::set_has_current_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HistoryMessageResponse::clear_has_current_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HistoryMessageResponse::clear_current_time() {
  current_time_ = 0u;
  clear_has_current_time();
}
inline ::google::protobuf::uint32 HistoryMessageResponse::current_time() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageResponse.current_time)
  return current_time_;
}
inline void HistoryMessageResponse::set_current_time(::google::protobuf::uint32 value) {
  set_has_current_time();
  current_time_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageResponse.current_time)
}

// optional uint32 total_count = 4;
inline bool HistoryMessageResponse::has_total_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HistoryMessageResponse::set_has_total_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HistoryMessageResponse::clear_has_total_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HistoryMessageResponse::clear_total_count() {
  total_count_ = 0u;
  clear_has_total_count();
}
inline ::google::protobuf::uint32 HistoryMessageResponse::total_count() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageResponse.total_count)
  return total_count_;
}
inline void HistoryMessageResponse::set_total_count(::google::protobuf::uint32 value) {
  set_has_total_count();
  total_count_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageResponse.total_count)
}

// optional uint32 count = 5;
inline bool HistoryMessageResponse::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HistoryMessageResponse::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HistoryMessageResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HistoryMessageResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 HistoryMessageResponse::count() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageResponse.count)
  return count_;
}
inline void HistoryMessageResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageResponse.count)
}

// optional uint32 index = 6;
inline bool HistoryMessageResponse::has_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HistoryMessageResponse::set_has_index() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HistoryMessageResponse::clear_has_index() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HistoryMessageResponse::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 HistoryMessageResponse::index() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageResponse.index)
  return index_;
}
inline void HistoryMessageResponse::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageResponse.index)
}

// -------------------------------------------------------------------

// HistoryMessageCountInfoRequest

// required uint64 to_user_id = 1;
inline bool HistoryMessageCountInfoRequest::has_to_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryMessageCountInfoRequest::set_has_to_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryMessageCountInfoRequest::clear_has_to_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryMessageCountInfoRequest::clear_to_user_id() {
  to_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_to_user_id();
}
inline ::google::protobuf::uint64 HistoryMessageCountInfoRequest::to_user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageCountInfoRequest.to_user_id)
  return to_user_id_;
}
inline void HistoryMessageCountInfoRequest::set_to_user_id(::google::protobuf::uint64 value) {
  set_has_to_user_id();
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageCountInfoRequest.to_user_id)
}

// repeated uint64 from_user_ids = 2;
inline int HistoryMessageCountInfoRequest::from_user_ids_size() const {
  return from_user_ids_.size();
}
inline void HistoryMessageCountInfoRequest::clear_from_user_ids() {
  from_user_ids_.Clear();
}
inline ::google::protobuf::uint64 HistoryMessageCountInfoRequest::from_user_ids(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageCountInfoRequest.from_user_ids)
  return from_user_ids_.Get(index);
}
inline void HistoryMessageCountInfoRequest::set_from_user_ids(int index, ::google::protobuf::uint64 value) {
  from_user_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageCountInfoRequest.from_user_ids)
}
inline void HistoryMessageCountInfoRequest::add_from_user_ids(::google::protobuf::uint64 value) {
  from_user_ids_.Add(value);
  // @@protoc_insertion_point(field_add:tt_mts.HistoryMessageCountInfoRequest.from_user_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
HistoryMessageCountInfoRequest::from_user_ids() const {
  // @@protoc_insertion_point(field_list:tt_mts.HistoryMessageCountInfoRequest.from_user_ids)
  return from_user_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
HistoryMessageCountInfoRequest::mutable_from_user_ids() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.HistoryMessageCountInfoRequest.from_user_ids)
  return &from_user_ids_;
}

// optional uint32 begin_time = 3;
inline bool HistoryMessageCountInfoRequest::has_begin_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HistoryMessageCountInfoRequest::set_has_begin_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HistoryMessageCountInfoRequest::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HistoryMessageCountInfoRequest::clear_begin_time() {
  begin_time_ = 0u;
  clear_has_begin_time();
}
inline ::google::protobuf::uint32 HistoryMessageCountInfoRequest::begin_time() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageCountInfoRequest.begin_time)
  return begin_time_;
}
inline void HistoryMessageCountInfoRequest::set_begin_time(::google::protobuf::uint32 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageCountInfoRequest.begin_time)
}

// optional uint32 time_length = 4;
inline bool HistoryMessageCountInfoRequest::has_time_length() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HistoryMessageCountInfoRequest::set_has_time_length() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HistoryMessageCountInfoRequest::clear_has_time_length() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HistoryMessageCountInfoRequest::clear_time_length() {
  time_length_ = 0u;
  clear_has_time_length();
}
inline ::google::protobuf::uint32 HistoryMessageCountInfoRequest::time_length() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageCountInfoRequest.time_length)
  return time_length_;
}
inline void HistoryMessageCountInfoRequest::set_time_length(::google::protobuf::uint32 value) {
  set_has_time_length();
  time_length_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageCountInfoRequest.time_length)
}

// repeated uint32 message_types = 5;
inline int HistoryMessageCountInfoRequest::message_types_size() const {
  return message_types_.size();
}
inline void HistoryMessageCountInfoRequest::clear_message_types() {
  message_types_.Clear();
}
inline ::google::protobuf::uint32 HistoryMessageCountInfoRequest::message_types(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageCountInfoRequest.message_types)
  return message_types_.Get(index);
}
inline void HistoryMessageCountInfoRequest::set_message_types(int index, ::google::protobuf::uint32 value) {
  message_types_.Set(index, value);
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageCountInfoRequest.message_types)
}
inline void HistoryMessageCountInfoRequest::add_message_types(::google::protobuf::uint32 value) {
  message_types_.Add(value);
  // @@protoc_insertion_point(field_add:tt_mts.HistoryMessageCountInfoRequest.message_types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HistoryMessageCountInfoRequest::message_types() const {
  // @@protoc_insertion_point(field_list:tt_mts.HistoryMessageCountInfoRequest.message_types)
  return message_types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HistoryMessageCountInfoRequest::mutable_message_types() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.HistoryMessageCountInfoRequest.message_types)
  return &message_types_;
}

// -------------------------------------------------------------------

// HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo

// required uint32 message_type = 1;
inline bool HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo::has_message_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo::set_has_message_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo::clear_has_message_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo::clear_message_type() {
  message_type_ = 0u;
  clear_has_message_type();
}
inline ::google::protobuf::uint32 HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo::message_type() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageCountInfoResponse.HistoryMessageType2CountInfo.message_type)
  return message_type_;
}
inline void HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo::set_message_type(::google::protobuf::uint32 value) {
  set_has_message_type();
  message_type_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageCountInfoResponse.HistoryMessageType2CountInfo.message_type)
}

// required uint32 count = 2;
inline bool HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo::count() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageCountInfoResponse.HistoryMessageType2CountInfo.count)
  return count_;
}
inline void HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageCountInfoResponse.HistoryMessageType2CountInfo.count)
}

// -------------------------------------------------------------------

// HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo

// required uint64 from_user_id = 1;
inline bool HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo::clear_from_user_id() {
  from_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_from_user_id();
}
inline ::google::protobuf::uint64 HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo::from_user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageCountInfoResponse.HistoryMessageUser2CountInfo.from_user_id)
  return from_user_id_;
}
inline void HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo::set_from_user_id(::google::protobuf::uint64 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageCountInfoResponse.HistoryMessageUser2CountInfo.from_user_id)
}

// repeated .tt_mts.HistoryMessageCountInfoResponse.HistoryMessageType2CountInfo countinfos = 2;
inline int HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo::countinfos_size() const {
  return countinfos_.size();
}
inline void HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo::clear_countinfos() {
  countinfos_.Clear();
}
inline const ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo& HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo::countinfos(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageCountInfoResponse.HistoryMessageUser2CountInfo.countinfos)
  return countinfos_.Get(index);
}
inline ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo* HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo::mutable_countinfos(int index) {
  // @@protoc_insertion_point(field_mutable:tt_mts.HistoryMessageCountInfoResponse.HistoryMessageUser2CountInfo.countinfos)
  return countinfos_.Mutable(index);
}
inline ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo* HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo::add_countinfos() {
  // @@protoc_insertion_point(field_add:tt_mts.HistoryMessageCountInfoResponse.HistoryMessageUser2CountInfo.countinfos)
  return countinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo >&
HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo::countinfos() const {
  // @@protoc_insertion_point(field_list:tt_mts.HistoryMessageCountInfoResponse.HistoryMessageUser2CountInfo.countinfos)
  return countinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageType2CountInfo >*
HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo::mutable_countinfos() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.HistoryMessageCountInfoResponse.HistoryMessageUser2CountInfo.countinfos)
  return &countinfos_;
}

// -------------------------------------------------------------------

// HistoryMessageCountInfoResponse

// required uint64 to_user_id = 1;
inline bool HistoryMessageCountInfoResponse::has_to_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryMessageCountInfoResponse::set_has_to_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryMessageCountInfoResponse::clear_has_to_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryMessageCountInfoResponse::clear_to_user_id() {
  to_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_to_user_id();
}
inline ::google::protobuf::uint64 HistoryMessageCountInfoResponse::to_user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageCountInfoResponse.to_user_id)
  return to_user_id_;
}
inline void HistoryMessageCountInfoResponse::set_to_user_id(::google::protobuf::uint64 value) {
  set_has_to_user_id();
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageCountInfoResponse.to_user_id)
}

// optional uint32 begin_time = 2;
inline bool HistoryMessageCountInfoResponse::has_begin_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryMessageCountInfoResponse::set_has_begin_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryMessageCountInfoResponse::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryMessageCountInfoResponse::clear_begin_time() {
  begin_time_ = 0u;
  clear_has_begin_time();
}
inline ::google::protobuf::uint32 HistoryMessageCountInfoResponse::begin_time() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageCountInfoResponse.begin_time)
  return begin_time_;
}
inline void HistoryMessageCountInfoResponse::set_begin_time(::google::protobuf::uint32 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageCountInfoResponse.begin_time)
}

// optional uint32 time_length = 3;
inline bool HistoryMessageCountInfoResponse::has_time_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HistoryMessageCountInfoResponse::set_has_time_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HistoryMessageCountInfoResponse::clear_has_time_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HistoryMessageCountInfoResponse::clear_time_length() {
  time_length_ = 0u;
  clear_has_time_length();
}
inline ::google::protobuf::uint32 HistoryMessageCountInfoResponse::time_length() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageCountInfoResponse.time_length)
  return time_length_;
}
inline void HistoryMessageCountInfoResponse::set_time_length(::google::protobuf::uint32 value) {
  set_has_time_length();
  time_length_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageCountInfoResponse.time_length)
}

// repeated uint32 message_types = 4;
inline int HistoryMessageCountInfoResponse::message_types_size() const {
  return message_types_.size();
}
inline void HistoryMessageCountInfoResponse::clear_message_types() {
  message_types_.Clear();
}
inline ::google::protobuf::uint32 HistoryMessageCountInfoResponse::message_types(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageCountInfoResponse.message_types)
  return message_types_.Get(index);
}
inline void HistoryMessageCountInfoResponse::set_message_types(int index, ::google::protobuf::uint32 value) {
  message_types_.Set(index, value);
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageCountInfoResponse.message_types)
}
inline void HistoryMessageCountInfoResponse::add_message_types(::google::protobuf::uint32 value) {
  message_types_.Add(value);
  // @@protoc_insertion_point(field_add:tt_mts.HistoryMessageCountInfoResponse.message_types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HistoryMessageCountInfoResponse::message_types() const {
  // @@protoc_insertion_point(field_list:tt_mts.HistoryMessageCountInfoResponse.message_types)
  return message_types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HistoryMessageCountInfoResponse::mutable_message_types() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.HistoryMessageCountInfoResponse.message_types)
  return &message_types_;
}

// repeated .tt_mts.HistoryMessageCountInfoResponse.HistoryMessageUser2CountInfo message_count_infos = 5;
inline int HistoryMessageCountInfoResponse::message_count_infos_size() const {
  return message_count_infos_.size();
}
inline void HistoryMessageCountInfoResponse::clear_message_count_infos() {
  message_count_infos_.Clear();
}
inline const ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo& HistoryMessageCountInfoResponse::message_count_infos(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageCountInfoResponse.message_count_infos)
  return message_count_infos_.Get(index);
}
inline ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo* HistoryMessageCountInfoResponse::mutable_message_count_infos(int index) {
  // @@protoc_insertion_point(field_mutable:tt_mts.HistoryMessageCountInfoResponse.message_count_infos)
  return message_count_infos_.Mutable(index);
}
inline ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo* HistoryMessageCountInfoResponse::add_message_count_infos() {
  // @@protoc_insertion_point(field_add:tt_mts.HistoryMessageCountInfoResponse.message_count_infos)
  return message_count_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo >&
HistoryMessageCountInfoResponse::message_count_infos() const {
  // @@protoc_insertion_point(field_list:tt_mts.HistoryMessageCountInfoResponse.message_count_infos)
  return message_count_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::tt_mts::HistoryMessageCountInfoResponse_HistoryMessageUser2CountInfo >*
HistoryMessageCountInfoResponse::mutable_message_count_infos() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.HistoryMessageCountInfoResponse.message_count_infos)
  return &message_count_infos_;
}

// -------------------------------------------------------------------

// HistoryMessageFromUserRequest

// required uint64 to_user_id = 1;
inline bool HistoryMessageFromUserRequest::has_to_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryMessageFromUserRequest::set_has_to_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryMessageFromUserRequest::clear_has_to_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryMessageFromUserRequest::clear_to_user_id() {
  to_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_to_user_id();
}
inline ::google::protobuf::uint64 HistoryMessageFromUserRequest::to_user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserRequest.to_user_id)
  return to_user_id_;
}
inline void HistoryMessageFromUserRequest::set_to_user_id(::google::protobuf::uint64 value) {
  set_has_to_user_id();
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserRequest.to_user_id)
}

// optional uint64 from_user_id = 2 [default = 9223372036854775792];
inline bool HistoryMessageFromUserRequest::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryMessageFromUserRequest::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryMessageFromUserRequest::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryMessageFromUserRequest::clear_from_user_id() {
  from_user_id_ = GOOGLE_ULONGLONG(9223372036854775792);
  clear_has_from_user_id();
}
inline ::google::protobuf::uint64 HistoryMessageFromUserRequest::from_user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserRequest.from_user_id)
  return from_user_id_;
}
inline void HistoryMessageFromUserRequest::set_from_user_id(::google::protobuf::uint64 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserRequest.from_user_id)
}

// optional uint32 begin_time = 3;
inline bool HistoryMessageFromUserRequest::has_begin_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HistoryMessageFromUserRequest::set_has_begin_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HistoryMessageFromUserRequest::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HistoryMessageFromUserRequest::clear_begin_time() {
  begin_time_ = 0u;
  clear_has_begin_time();
}
inline ::google::protobuf::uint32 HistoryMessageFromUserRequest::begin_time() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserRequest.begin_time)
  return begin_time_;
}
inline void HistoryMessageFromUserRequest::set_begin_time(::google::protobuf::uint32 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserRequest.begin_time)
}

// optional uint32 time_length = 4;
inline bool HistoryMessageFromUserRequest::has_time_length() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HistoryMessageFromUserRequest::set_has_time_length() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HistoryMessageFromUserRequest::clear_has_time_length() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HistoryMessageFromUserRequest::clear_time_length() {
  time_length_ = 0u;
  clear_has_time_length();
}
inline ::google::protobuf::uint32 HistoryMessageFromUserRequest::time_length() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserRequest.time_length)
  return time_length_;
}
inline void HistoryMessageFromUserRequest::set_time_length(::google::protobuf::uint32 value) {
  set_has_time_length();
  time_length_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserRequest.time_length)
}

// repeated uint32 message_types = 5;
inline int HistoryMessageFromUserRequest::message_types_size() const {
  return message_types_.size();
}
inline void HistoryMessageFromUserRequest::clear_message_types() {
  message_types_.Clear();
}
inline ::google::protobuf::uint32 HistoryMessageFromUserRequest::message_types(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserRequest.message_types)
  return message_types_.Get(index);
}
inline void HistoryMessageFromUserRequest::set_message_types(int index, ::google::protobuf::uint32 value) {
  message_types_.Set(index, value);
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserRequest.message_types)
}
inline void HistoryMessageFromUserRequest::add_message_types(::google::protobuf::uint32 value) {
  message_types_.Add(value);
  // @@protoc_insertion_point(field_add:tt_mts.HistoryMessageFromUserRequest.message_types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HistoryMessageFromUserRequest::message_types() const {
  // @@protoc_insertion_point(field_list:tt_mts.HistoryMessageFromUserRequest.message_types)
  return message_types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HistoryMessageFromUserRequest::mutable_message_types() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.HistoryMessageFromUserRequest.message_types)
  return &message_types_;
}

// optional bool is_equeal_message_types = 6;
inline bool HistoryMessageFromUserRequest::has_is_equeal_message_types() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HistoryMessageFromUserRequest::set_has_is_equeal_message_types() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HistoryMessageFromUserRequest::clear_has_is_equeal_message_types() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HistoryMessageFromUserRequest::clear_is_equeal_message_types() {
  is_equeal_message_types_ = false;
  clear_has_is_equeal_message_types();
}
inline bool HistoryMessageFromUserRequest::is_equeal_message_types() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserRequest.is_equeal_message_types)
  return is_equeal_message_types_;
}
inline void HistoryMessageFromUserRequest::set_is_equeal_message_types(bool value) {
  set_has_is_equeal_message_types();
  is_equeal_message_types_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserRequest.is_equeal_message_types)
}

// optional uint32 message_count = 7;
inline bool HistoryMessageFromUserRequest::has_message_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HistoryMessageFromUserRequest::set_has_message_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HistoryMessageFromUserRequest::clear_has_message_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HistoryMessageFromUserRequest::clear_message_count() {
  message_count_ = 0u;
  clear_has_message_count();
}
inline ::google::protobuf::uint32 HistoryMessageFromUserRequest::message_count() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserRequest.message_count)
  return message_count_;
}
inline void HistoryMessageFromUserRequest::set_message_count(::google::protobuf::uint32 value) {
  set_has_message_count();
  message_count_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserRequest.message_count)
}

// -------------------------------------------------------------------

// HistoryMessageFromUserResponse

// required uint64 to_user_id = 1;
inline bool HistoryMessageFromUserResponse::has_to_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryMessageFromUserResponse::set_has_to_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryMessageFromUserResponse::clear_has_to_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryMessageFromUserResponse::clear_to_user_id() {
  to_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_to_user_id();
}
inline ::google::protobuf::uint64 HistoryMessageFromUserResponse::to_user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserResponse.to_user_id)
  return to_user_id_;
}
inline void HistoryMessageFromUserResponse::set_to_user_id(::google::protobuf::uint64 value) {
  set_has_to_user_id();
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserResponse.to_user_id)
}

// optional uint64 from_user_id = 2;
inline bool HistoryMessageFromUserResponse::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryMessageFromUserResponse::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryMessageFromUserResponse::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryMessageFromUserResponse::clear_from_user_id() {
  from_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_from_user_id();
}
inline ::google::protobuf::uint64 HistoryMessageFromUserResponse::from_user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserResponse.from_user_id)
  return from_user_id_;
}
inline void HistoryMessageFromUserResponse::set_from_user_id(::google::protobuf::uint64 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserResponse.from_user_id)
}

// repeated uint32 message_types = 3;
inline int HistoryMessageFromUserResponse::message_types_size() const {
  return message_types_.size();
}
inline void HistoryMessageFromUserResponse::clear_message_types() {
  message_types_.Clear();
}
inline ::google::protobuf::uint32 HistoryMessageFromUserResponse::message_types(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserResponse.message_types)
  return message_types_.Get(index);
}
inline void HistoryMessageFromUserResponse::set_message_types(int index, ::google::protobuf::uint32 value) {
  message_types_.Set(index, value);
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserResponse.message_types)
}
inline void HistoryMessageFromUserResponse::add_message_types(::google::protobuf::uint32 value) {
  message_types_.Add(value);
  // @@protoc_insertion_point(field_add:tt_mts.HistoryMessageFromUserResponse.message_types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HistoryMessageFromUserResponse::message_types() const {
  // @@protoc_insertion_point(field_list:tt_mts.HistoryMessageFromUserResponse.message_types)
  return message_types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HistoryMessageFromUserResponse::mutable_message_types() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.HistoryMessageFromUserResponse.message_types)
  return &message_types_;
}

// optional bool is_equeal_message_types = 4;
inline bool HistoryMessageFromUserResponse::has_is_equeal_message_types() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HistoryMessageFromUserResponse::set_has_is_equeal_message_types() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HistoryMessageFromUserResponse::clear_has_is_equeal_message_types() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HistoryMessageFromUserResponse::clear_is_equeal_message_types() {
  is_equeal_message_types_ = false;
  clear_has_is_equeal_message_types();
}
inline bool HistoryMessageFromUserResponse::is_equeal_message_types() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserResponse.is_equeal_message_types)
  return is_equeal_message_types_;
}
inline void HistoryMessageFromUserResponse::set_is_equeal_message_types(bool value) {
  set_has_is_equeal_message_types();
  is_equeal_message_types_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserResponse.is_equeal_message_types)
}

// repeated .tt_mts.DownlinkMessageRequest messages = 5;
inline int HistoryMessageFromUserResponse::messages_size() const {
  return messages_.size();
}
inline void HistoryMessageFromUserResponse::clear_messages() {
  messages_.Clear();
}
inline const ::tt_mts::DownlinkMessageRequest& HistoryMessageFromUserResponse::messages(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserResponse.messages)
  return messages_.Get(index);
}
inline ::tt_mts::DownlinkMessageRequest* HistoryMessageFromUserResponse::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:tt_mts.HistoryMessageFromUserResponse.messages)
  return messages_.Mutable(index);
}
inline ::tt_mts::DownlinkMessageRequest* HistoryMessageFromUserResponse::add_messages() {
  // @@protoc_insertion_point(field_add:tt_mts.HistoryMessageFromUserResponse.messages)
  return messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest >&
HistoryMessageFromUserResponse::messages() const {
  // @@protoc_insertion_point(field_list:tt_mts.HistoryMessageFromUserResponse.messages)
  return messages_;
}
inline ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest >*
HistoryMessageFromUserResponse::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.HistoryMessageFromUserResponse.messages)
  return &messages_;
}

// optional uint32 current_time = 6;
inline bool HistoryMessageFromUserResponse::has_current_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HistoryMessageFromUserResponse::set_has_current_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HistoryMessageFromUserResponse::clear_has_current_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HistoryMessageFromUserResponse::clear_current_time() {
  current_time_ = 0u;
  clear_has_current_time();
}
inline ::google::protobuf::uint32 HistoryMessageFromUserResponse::current_time() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserResponse.current_time)
  return current_time_;
}
inline void HistoryMessageFromUserResponse::set_current_time(::google::protobuf::uint32 value) {
  set_has_current_time();
  current_time_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserResponse.current_time)
}

// optional uint32 total_count = 7;
inline bool HistoryMessageFromUserResponse::has_total_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HistoryMessageFromUserResponse::set_has_total_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HistoryMessageFromUserResponse::clear_has_total_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HistoryMessageFromUserResponse::clear_total_count() {
  total_count_ = 0u;
  clear_has_total_count();
}
inline ::google::protobuf::uint32 HistoryMessageFromUserResponse::total_count() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserResponse.total_count)
  return total_count_;
}
inline void HistoryMessageFromUserResponse::set_total_count(::google::protobuf::uint32 value) {
  set_has_total_count();
  total_count_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserResponse.total_count)
}

// optional uint32 count = 8;
inline bool HistoryMessageFromUserResponse::has_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HistoryMessageFromUserResponse::set_has_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HistoryMessageFromUserResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HistoryMessageFromUserResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 HistoryMessageFromUserResponse::count() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserResponse.count)
  return count_;
}
inline void HistoryMessageFromUserResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserResponse.count)
}

// optional uint32 index = 9;
inline bool HistoryMessageFromUserResponse::has_index() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HistoryMessageFromUserResponse::set_has_index() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HistoryMessageFromUserResponse::clear_has_index() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HistoryMessageFromUserResponse::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 HistoryMessageFromUserResponse::index() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryMessageFromUserResponse.index)
  return index_;
}
inline void HistoryMessageFromUserResponse::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryMessageFromUserResponse.index)
}

// -------------------------------------------------------------------

// HistoryGroupMessageRequest

// required .tt_im_group.GroupId group_id = 1;
inline bool HistoryGroupMessageRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryGroupMessageRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryGroupMessageRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryGroupMessageRequest::clear_group_id() {
  if (group_id_ != NULL) group_id_->::tt_im_group::GroupId::Clear();
  clear_has_group_id();
}
inline const ::tt_im_group::GroupId& HistoryGroupMessageRequest::group_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryGroupMessageRequest.group_id)
  return group_id_ != NULL ? *group_id_ : *default_instance_->group_id_;
}
inline ::tt_im_group::GroupId* HistoryGroupMessageRequest::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == NULL) group_id_ = new ::tt_im_group::GroupId;
  // @@protoc_insertion_point(field_mutable:tt_mts.HistoryGroupMessageRequest.group_id)
  return group_id_;
}
inline ::tt_im_group::GroupId* HistoryGroupMessageRequest::release_group_id() {
  clear_has_group_id();
  ::tt_im_group::GroupId* temp = group_id_;
  group_id_ = NULL;
  return temp;
}
inline void HistoryGroupMessageRequest::set_allocated_group_id(::tt_im_group::GroupId* group_id) {
  delete group_id_;
  group_id_ = group_id;
  if (group_id) {
    set_has_group_id();
  } else {
    clear_has_group_id();
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.HistoryGroupMessageRequest.group_id)
}

// optional uint32 begin_time = 2;
inline bool HistoryGroupMessageRequest::has_begin_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryGroupMessageRequest::set_has_begin_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryGroupMessageRequest::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryGroupMessageRequest::clear_begin_time() {
  begin_time_ = 0u;
  clear_has_begin_time();
}
inline ::google::protobuf::uint32 HistoryGroupMessageRequest::begin_time() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryGroupMessageRequest.begin_time)
  return begin_time_;
}
inline void HistoryGroupMessageRequest::set_begin_time(::google::protobuf::uint32 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryGroupMessageRequest.begin_time)
}

// optional uint32 time_length = 3;
inline bool HistoryGroupMessageRequest::has_time_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HistoryGroupMessageRequest::set_has_time_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HistoryGroupMessageRequest::clear_has_time_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HistoryGroupMessageRequest::clear_time_length() {
  time_length_ = 0u;
  clear_has_time_length();
}
inline ::google::protobuf::uint32 HistoryGroupMessageRequest::time_length() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryGroupMessageRequest.time_length)
  return time_length_;
}
inline void HistoryGroupMessageRequest::set_time_length(::google::protobuf::uint32 value) {
  set_has_time_length();
  time_length_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryGroupMessageRequest.time_length)
}

// optional uint32 message_count = 4;
inline bool HistoryGroupMessageRequest::has_message_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HistoryGroupMessageRequest::set_has_message_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HistoryGroupMessageRequest::clear_has_message_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HistoryGroupMessageRequest::clear_message_count() {
  message_count_ = 0u;
  clear_has_message_count();
}
inline ::google::protobuf::uint32 HistoryGroupMessageRequest::message_count() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryGroupMessageRequest.message_count)
  return message_count_;
}
inline void HistoryGroupMessageRequest::set_message_count(::google::protobuf::uint32 value) {
  set_has_message_count();
  message_count_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryGroupMessageRequest.message_count)
}

// -------------------------------------------------------------------

// HistoryGroupMessageResponse

// required .tt_im_group.GroupId group_id = 1;
inline bool HistoryGroupMessageResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryGroupMessageResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryGroupMessageResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryGroupMessageResponse::clear_group_id() {
  if (group_id_ != NULL) group_id_->::tt_im_group::GroupId::Clear();
  clear_has_group_id();
}
inline const ::tt_im_group::GroupId& HistoryGroupMessageResponse::group_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryGroupMessageResponse.group_id)
  return group_id_ != NULL ? *group_id_ : *default_instance_->group_id_;
}
inline ::tt_im_group::GroupId* HistoryGroupMessageResponse::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == NULL) group_id_ = new ::tt_im_group::GroupId;
  // @@protoc_insertion_point(field_mutable:tt_mts.HistoryGroupMessageResponse.group_id)
  return group_id_;
}
inline ::tt_im_group::GroupId* HistoryGroupMessageResponse::release_group_id() {
  clear_has_group_id();
  ::tt_im_group::GroupId* temp = group_id_;
  group_id_ = NULL;
  return temp;
}
inline void HistoryGroupMessageResponse::set_allocated_group_id(::tt_im_group::GroupId* group_id) {
  delete group_id_;
  group_id_ = group_id;
  if (group_id) {
    set_has_group_id();
  } else {
    clear_has_group_id();
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.HistoryGroupMessageResponse.group_id)
}

// repeated .tt_mts.DownlinkGroupMessageRequest messages = 2;
inline int HistoryGroupMessageResponse::messages_size() const {
  return messages_.size();
}
inline void HistoryGroupMessageResponse::clear_messages() {
  messages_.Clear();
}
inline const ::tt_mts::DownlinkGroupMessageRequest& HistoryGroupMessageResponse::messages(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryGroupMessageResponse.messages)
  return messages_.Get(index);
}
inline ::tt_mts::DownlinkGroupMessageRequest* HistoryGroupMessageResponse::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:tt_mts.HistoryGroupMessageResponse.messages)
  return messages_.Mutable(index);
}
inline ::tt_mts::DownlinkGroupMessageRequest* HistoryGroupMessageResponse::add_messages() {
  // @@protoc_insertion_point(field_add:tt_mts.HistoryGroupMessageResponse.messages)
  return messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkGroupMessageRequest >&
HistoryGroupMessageResponse::messages() const {
  // @@protoc_insertion_point(field_list:tt_mts.HistoryGroupMessageResponse.messages)
  return messages_;
}
inline ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkGroupMessageRequest >*
HistoryGroupMessageResponse::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.HistoryGroupMessageResponse.messages)
  return &messages_;
}

// optional uint32 current_time = 3;
inline bool HistoryGroupMessageResponse::has_current_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HistoryGroupMessageResponse::set_has_current_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HistoryGroupMessageResponse::clear_has_current_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HistoryGroupMessageResponse::clear_current_time() {
  current_time_ = 0u;
  clear_has_current_time();
}
inline ::google::protobuf::uint32 HistoryGroupMessageResponse::current_time() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryGroupMessageResponse.current_time)
  return current_time_;
}
inline void HistoryGroupMessageResponse::set_current_time(::google::protobuf::uint32 value) {
  set_has_current_time();
  current_time_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryGroupMessageResponse.current_time)
}

// optional uint32 total_count = 4;
inline bool HistoryGroupMessageResponse::has_total_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HistoryGroupMessageResponse::set_has_total_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HistoryGroupMessageResponse::clear_has_total_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HistoryGroupMessageResponse::clear_total_count() {
  total_count_ = 0u;
  clear_has_total_count();
}
inline ::google::protobuf::uint32 HistoryGroupMessageResponse::total_count() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryGroupMessageResponse.total_count)
  return total_count_;
}
inline void HistoryGroupMessageResponse::set_total_count(::google::protobuf::uint32 value) {
  set_has_total_count();
  total_count_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryGroupMessageResponse.total_count)
}

// optional uint32 count = 5;
inline bool HistoryGroupMessageResponse::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HistoryGroupMessageResponse::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HistoryGroupMessageResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HistoryGroupMessageResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 HistoryGroupMessageResponse::count() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryGroupMessageResponse.count)
  return count_;
}
inline void HistoryGroupMessageResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryGroupMessageResponse.count)
}

// optional uint32 index = 6;
inline bool HistoryGroupMessageResponse::has_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HistoryGroupMessageResponse::set_has_index() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HistoryGroupMessageResponse::clear_has_index() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HistoryGroupMessageResponse::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 HistoryGroupMessageResponse::index() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistoryGroupMessageResponse.index)
  return index_;
}
inline void HistoryGroupMessageResponse::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistoryGroupMessageResponse.index)
}

// -------------------------------------------------------------------

// HistorySysMessageRequest

// optional uint32 message_type = 1;
inline bool HistorySysMessageRequest::has_message_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistorySysMessageRequest::set_has_message_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistorySysMessageRequest::clear_has_message_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistorySysMessageRequest::clear_message_type() {
  message_type_ = 0u;
  clear_has_message_type();
}
inline ::google::protobuf::uint32 HistorySysMessageRequest::message_type() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistorySysMessageRequest.message_type)
  return message_type_;
}
inline void HistorySysMessageRequest::set_message_type(::google::protobuf::uint32 value) {
  set_has_message_type();
  message_type_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistorySysMessageRequest.message_type)
}

// optional uint32 begin_time = 2;
inline bool HistorySysMessageRequest::has_begin_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistorySysMessageRequest::set_has_begin_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistorySysMessageRequest::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistorySysMessageRequest::clear_begin_time() {
  begin_time_ = 0u;
  clear_has_begin_time();
}
inline ::google::protobuf::uint32 HistorySysMessageRequest::begin_time() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistorySysMessageRequest.begin_time)
  return begin_time_;
}
inline void HistorySysMessageRequest::set_begin_time(::google::protobuf::uint32 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistorySysMessageRequest.begin_time)
}

// optional uint32 time_length = 3;
inline bool HistorySysMessageRequest::has_time_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HistorySysMessageRequest::set_has_time_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HistorySysMessageRequest::clear_has_time_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HistorySysMessageRequest::clear_time_length() {
  time_length_ = 0u;
  clear_has_time_length();
}
inline ::google::protobuf::uint32 HistorySysMessageRequest::time_length() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistorySysMessageRequest.time_length)
  return time_length_;
}
inline void HistorySysMessageRequest::set_time_length(::google::protobuf::uint32 value) {
  set_has_time_length();
  time_length_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistorySysMessageRequest.time_length)
}

// optional uint32 message_count = 4;
inline bool HistorySysMessageRequest::has_message_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HistorySysMessageRequest::set_has_message_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HistorySysMessageRequest::clear_has_message_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HistorySysMessageRequest::clear_message_count() {
  message_count_ = 0u;
  clear_has_message_count();
}
inline ::google::protobuf::uint32 HistorySysMessageRequest::message_count() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistorySysMessageRequest.message_count)
  return message_count_;
}
inline void HistorySysMessageRequest::set_message_count(::google::protobuf::uint32 value) {
  set_has_message_count();
  message_count_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistorySysMessageRequest.message_count)
}

// -------------------------------------------------------------------

// HistorySysMessageResponse

// optional uint32 message_type = 1;
inline bool HistorySysMessageResponse::has_message_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistorySysMessageResponse::set_has_message_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistorySysMessageResponse::clear_has_message_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistorySysMessageResponse::clear_message_type() {
  message_type_ = 0u;
  clear_has_message_type();
}
inline ::google::protobuf::uint32 HistorySysMessageResponse::message_type() const {
  // @@protoc_insertion_point(field_get:tt_mts.HistorySysMessageResponse.message_type)
  return message_type_;
}
inline void HistorySysMessageResponse::set_message_type(::google::protobuf::uint32 value) {
  set_has_message_type();
  message_type_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.HistorySysMessageResponse.message_type)
}

// repeated .tt_mts.DownlinkMessageRequest messages = 2;
inline int HistorySysMessageResponse::messages_size() const {
  return messages_.size();
}
inline void HistorySysMessageResponse::clear_messages() {
  messages_.Clear();
}
inline const ::tt_mts::DownlinkMessageRequest& HistorySysMessageResponse::messages(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.HistorySysMessageResponse.messages)
  return messages_.Get(index);
}
inline ::tt_mts::DownlinkMessageRequest* HistorySysMessageResponse::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:tt_mts.HistorySysMessageResponse.messages)
  return messages_.Mutable(index);
}
inline ::tt_mts::DownlinkMessageRequest* HistorySysMessageResponse::add_messages() {
  // @@protoc_insertion_point(field_add:tt_mts.HistorySysMessageResponse.messages)
  return messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest >&
HistorySysMessageResponse::messages() const {
  // @@protoc_insertion_point(field_list:tt_mts.HistorySysMessageResponse.messages)
  return messages_;
}
inline ::google::protobuf::RepeatedPtrField< ::tt_mts::DownlinkMessageRequest >*
HistorySysMessageResponse::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.HistorySysMessageResponse.messages)
  return &messages_;
}

// -------------------------------------------------------------------

// MTS_DEBUG_UserInfo

// required uint64 user_id = 1;
inline bool MTS_DEBUG_UserInfo::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MTS_DEBUG_UserInfo::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MTS_DEBUG_UserInfo::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MTS_DEBUG_UserInfo::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 MTS_DEBUG_UserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_UserInfo.user_id)
  return user_id_;
}
inline void MTS_DEBUG_UserInfo::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.MTS_DEBUG_UserInfo.user_id)
}

// required string user_ip = 2;
inline bool MTS_DEBUG_UserInfo::has_user_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MTS_DEBUG_UserInfo::set_has_user_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MTS_DEBUG_UserInfo::clear_has_user_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MTS_DEBUG_UserInfo::clear_user_ip() {
  if (user_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_ip_->clear();
  }
  clear_has_user_ip();
}
inline const ::std::string& MTS_DEBUG_UserInfo::user_ip() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_UserInfo.user_ip)
  return *user_ip_;
}
inline void MTS_DEBUG_UserInfo::set_user_ip(const ::std::string& value) {
  set_has_user_ip();
  if (user_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_ip_ = new ::std::string;
  }
  user_ip_->assign(value);
  // @@protoc_insertion_point(field_set:tt_mts.MTS_DEBUG_UserInfo.user_ip)
}
inline void MTS_DEBUG_UserInfo::set_user_ip(const char* value) {
  set_has_user_ip();
  if (user_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_ip_ = new ::std::string;
  }
  user_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_mts.MTS_DEBUG_UserInfo.user_ip)
}
inline void MTS_DEBUG_UserInfo::set_user_ip(const char* value, size_t size) {
  set_has_user_ip();
  if (user_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_ip_ = new ::std::string;
  }
  user_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_mts.MTS_DEBUG_UserInfo.user_ip)
}
inline ::std::string* MTS_DEBUG_UserInfo::mutable_user_ip() {
  set_has_user_ip();
  if (user_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_mts.MTS_DEBUG_UserInfo.user_ip)
  return user_ip_;
}
inline ::std::string* MTS_DEBUG_UserInfo::release_user_ip() {
  clear_has_user_ip();
  if (user_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_ip_;
    user_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MTS_DEBUG_UserInfo::set_allocated_user_ip(::std::string* user_ip) {
  if (user_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_ip_;
  }
  if (user_ip) {
    set_has_user_ip();
    user_ip_ = user_ip;
  } else {
    clear_has_user_ip();
    user_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.MTS_DEBUG_UserInfo.user_ip)
}

// required uint32 user_port = 3;
inline bool MTS_DEBUG_UserInfo::has_user_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MTS_DEBUG_UserInfo::set_has_user_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MTS_DEBUG_UserInfo::clear_has_user_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MTS_DEBUG_UserInfo::clear_user_port() {
  user_port_ = 0u;
  clear_has_user_port();
}
inline ::google::protobuf::uint32 MTS_DEBUG_UserInfo::user_port() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_UserInfo.user_port)
  return user_port_;
}
inline void MTS_DEBUG_UserInfo::set_user_port(::google::protobuf::uint32 value) {
  set_has_user_port();
  user_port_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.MTS_DEBUG_UserInfo.user_port)
}

// optional uint32 login_time = 4;
inline bool MTS_DEBUG_UserInfo::has_login_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MTS_DEBUG_UserInfo::set_has_login_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MTS_DEBUG_UserInfo::clear_has_login_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MTS_DEBUG_UserInfo::clear_login_time() {
  login_time_ = 0u;
  clear_has_login_time();
}
inline ::google::protobuf::uint32 MTS_DEBUG_UserInfo::login_time() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_UserInfo.login_time)
  return login_time_;
}
inline void MTS_DEBUG_UserInfo::set_login_time(::google::protobuf::uint32 value) {
  set_has_login_time();
  login_time_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.MTS_DEBUG_UserInfo.login_time)
}

// -------------------------------------------------------------------

// MTS_DEBUG_ServiceInfo

// required uint32 serve_type = 1;
inline bool MTS_DEBUG_ServiceInfo::has_serve_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MTS_DEBUG_ServiceInfo::set_has_serve_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MTS_DEBUG_ServiceInfo::clear_has_serve_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MTS_DEBUG_ServiceInfo::clear_serve_type() {
  serve_type_ = 0u;
  clear_has_serve_type();
}
inline ::google::protobuf::uint32 MTS_DEBUG_ServiceInfo::serve_type() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ServiceInfo.serve_type)
  return serve_type_;
}
inline void MTS_DEBUG_ServiceInfo::set_serve_type(::google::protobuf::uint32 value) {
  set_has_serve_type();
  serve_type_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.MTS_DEBUG_ServiceInfo.serve_type)
}

// required string serve_ip = 2;
inline bool MTS_DEBUG_ServiceInfo::has_serve_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MTS_DEBUG_ServiceInfo::set_has_serve_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MTS_DEBUG_ServiceInfo::clear_has_serve_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MTS_DEBUG_ServiceInfo::clear_serve_ip() {
  if (serve_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serve_ip_->clear();
  }
  clear_has_serve_ip();
}
inline const ::std::string& MTS_DEBUG_ServiceInfo::serve_ip() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ServiceInfo.serve_ip)
  return *serve_ip_;
}
inline void MTS_DEBUG_ServiceInfo::set_serve_ip(const ::std::string& value) {
  set_has_serve_ip();
  if (serve_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serve_ip_ = new ::std::string;
  }
  serve_ip_->assign(value);
  // @@protoc_insertion_point(field_set:tt_mts.MTS_DEBUG_ServiceInfo.serve_ip)
}
inline void MTS_DEBUG_ServiceInfo::set_serve_ip(const char* value) {
  set_has_serve_ip();
  if (serve_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serve_ip_ = new ::std::string;
  }
  serve_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_mts.MTS_DEBUG_ServiceInfo.serve_ip)
}
inline void MTS_DEBUG_ServiceInfo::set_serve_ip(const char* value, size_t size) {
  set_has_serve_ip();
  if (serve_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serve_ip_ = new ::std::string;
  }
  serve_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_mts.MTS_DEBUG_ServiceInfo.serve_ip)
}
inline ::std::string* MTS_DEBUG_ServiceInfo::mutable_serve_ip() {
  set_has_serve_ip();
  if (serve_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    serve_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_mts.MTS_DEBUG_ServiceInfo.serve_ip)
  return serve_ip_;
}
inline ::std::string* MTS_DEBUG_ServiceInfo::release_serve_ip() {
  clear_has_serve_ip();
  if (serve_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = serve_ip_;
    serve_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MTS_DEBUG_ServiceInfo::set_allocated_serve_ip(::std::string* serve_ip) {
  if (serve_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serve_ip_;
  }
  if (serve_ip) {
    set_has_serve_ip();
    serve_ip_ = serve_ip;
  } else {
    clear_has_serve_ip();
    serve_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.MTS_DEBUG_ServiceInfo.serve_ip)
}

// required uint32 serve_port = 3;
inline bool MTS_DEBUG_ServiceInfo::has_serve_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MTS_DEBUG_ServiceInfo::set_has_serve_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MTS_DEBUG_ServiceInfo::clear_has_serve_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MTS_DEBUG_ServiceInfo::clear_serve_port() {
  serve_port_ = 0u;
  clear_has_serve_port();
}
inline ::google::protobuf::uint32 MTS_DEBUG_ServiceInfo::serve_port() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ServiceInfo.serve_port)
  return serve_port_;
}
inline void MTS_DEBUG_ServiceInfo::set_serve_port(::google::protobuf::uint32 value) {
  set_has_serve_port();
  serve_port_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.MTS_DEBUG_ServiceInfo.serve_port)
}

// optional uint32 connect_time = 4;
inline bool MTS_DEBUG_ServiceInfo::has_connect_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MTS_DEBUG_ServiceInfo::set_has_connect_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MTS_DEBUG_ServiceInfo::clear_has_connect_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MTS_DEBUG_ServiceInfo::clear_connect_time() {
  connect_time_ = 0u;
  clear_has_connect_time();
}
inline ::google::protobuf::uint32 MTS_DEBUG_ServiceInfo::connect_time() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ServiceInfo.connect_time)
  return connect_time_;
}
inline void MTS_DEBUG_ServiceInfo::set_connect_time(::google::protobuf::uint32 value) {
  set_has_connect_time();
  connect_time_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.MTS_DEBUG_ServiceInfo.connect_time)
}

// -------------------------------------------------------------------

// MTS_DEBUG_ListUsersRequest

// -------------------------------------------------------------------

// MTS_DEBUG_ListUsersResponse

// repeated .tt_mts.MTS_DEBUG_UserInfo users = 1;
inline int MTS_DEBUG_ListUsersResponse::users_size() const {
  return users_.size();
}
inline void MTS_DEBUG_ListUsersResponse::clear_users() {
  users_.Clear();
}
inline const ::tt_mts::MTS_DEBUG_UserInfo& MTS_DEBUG_ListUsersResponse::users(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ListUsersResponse.users)
  return users_.Get(index);
}
inline ::tt_mts::MTS_DEBUG_UserInfo* MTS_DEBUG_ListUsersResponse::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:tt_mts.MTS_DEBUG_ListUsersResponse.users)
  return users_.Mutable(index);
}
inline ::tt_mts::MTS_DEBUG_UserInfo* MTS_DEBUG_ListUsersResponse::add_users() {
  // @@protoc_insertion_point(field_add:tt_mts.MTS_DEBUG_ListUsersResponse.users)
  return users_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_UserInfo >&
MTS_DEBUG_ListUsersResponse::users() const {
  // @@protoc_insertion_point(field_list:tt_mts.MTS_DEBUG_ListUsersResponse.users)
  return users_;
}
inline ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_UserInfo >*
MTS_DEBUG_ListUsersResponse::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.MTS_DEBUG_ListUsersResponse.users)
  return &users_;
}

// -------------------------------------------------------------------

// MTS_DEBUG_ListOtherServicesRequest

// -------------------------------------------------------------------

// MTS_DEBUG_ListOtherServicesResponse

// repeated .tt_mts.MTS_DEBUG_ServiceInfo services = 1;
inline int MTS_DEBUG_ListOtherServicesResponse::services_size() const {
  return services_.size();
}
inline void MTS_DEBUG_ListOtherServicesResponse::clear_services() {
  services_.Clear();
}
inline const ::tt_mts::MTS_DEBUG_ServiceInfo& MTS_DEBUG_ListOtherServicesResponse::services(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ListOtherServicesResponse.services)
  return services_.Get(index);
}
inline ::tt_mts::MTS_DEBUG_ServiceInfo* MTS_DEBUG_ListOtherServicesResponse::mutable_services(int index) {
  // @@protoc_insertion_point(field_mutable:tt_mts.MTS_DEBUG_ListOtherServicesResponse.services)
  return services_.Mutable(index);
}
inline ::tt_mts::MTS_DEBUG_ServiceInfo* MTS_DEBUG_ListOtherServicesResponse::add_services() {
  // @@protoc_insertion_point(field_add:tt_mts.MTS_DEBUG_ListOtherServicesResponse.services)
  return services_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_ServiceInfo >&
MTS_DEBUG_ListOtherServicesResponse::services() const {
  // @@protoc_insertion_point(field_list:tt_mts.MTS_DEBUG_ListOtherServicesResponse.services)
  return services_;
}
inline ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_ServiceInfo >*
MTS_DEBUG_ListOtherServicesResponse::mutable_services() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.MTS_DEBUG_ListOtherServicesResponse.services)
  return &services_;
}

// -------------------------------------------------------------------

// MTS_DEBUG_ListGroupsBelongToUserRequest

// required uint64 user_id = 1;
inline bool MTS_DEBUG_ListGroupsBelongToUserRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MTS_DEBUG_ListGroupsBelongToUserRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MTS_DEBUG_ListGroupsBelongToUserRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MTS_DEBUG_ListGroupsBelongToUserRequest::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 MTS_DEBUG_ListGroupsBelongToUserRequest::user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ListGroupsBelongToUserRequest.user_id)
  return user_id_;
}
inline void MTS_DEBUG_ListGroupsBelongToUserRequest::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.MTS_DEBUG_ListGroupsBelongToUserRequest.user_id)
}

// -------------------------------------------------------------------

// MTS_DEBUG_ListGroupsBelongToUserResponse

// required uint64 user_id = 1;
inline bool MTS_DEBUG_ListGroupsBelongToUserResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MTS_DEBUG_ListGroupsBelongToUserResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MTS_DEBUG_ListGroupsBelongToUserResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MTS_DEBUG_ListGroupsBelongToUserResponse::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 MTS_DEBUG_ListGroupsBelongToUserResponse::user_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ListGroupsBelongToUserResponse.user_id)
  return user_id_;
}
inline void MTS_DEBUG_ListGroupsBelongToUserResponse::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.MTS_DEBUG_ListGroupsBelongToUserResponse.user_id)
}

// repeated .tt_im_group.GroupId group_ids = 2;
inline int MTS_DEBUG_ListGroupsBelongToUserResponse::group_ids_size() const {
  return group_ids_.size();
}
inline void MTS_DEBUG_ListGroupsBelongToUserResponse::clear_group_ids() {
  group_ids_.Clear();
}
inline const ::tt_im_group::GroupId& MTS_DEBUG_ListGroupsBelongToUserResponse::group_ids(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ListGroupsBelongToUserResponse.group_ids)
  return group_ids_.Get(index);
}
inline ::tt_im_group::GroupId* MTS_DEBUG_ListGroupsBelongToUserResponse::mutable_group_ids(int index) {
  // @@protoc_insertion_point(field_mutable:tt_mts.MTS_DEBUG_ListGroupsBelongToUserResponse.group_ids)
  return group_ids_.Mutable(index);
}
inline ::tt_im_group::GroupId* MTS_DEBUG_ListGroupsBelongToUserResponse::add_group_ids() {
  // @@protoc_insertion_point(field_add:tt_mts.MTS_DEBUG_ListGroupsBelongToUserResponse.group_ids)
  return group_ids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >&
MTS_DEBUG_ListGroupsBelongToUserResponse::group_ids() const {
  // @@protoc_insertion_point(field_list:tt_mts.MTS_DEBUG_ListGroupsBelongToUserResponse.group_ids)
  return group_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >*
MTS_DEBUG_ListGroupsBelongToUserResponse::mutable_group_ids() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.MTS_DEBUG_ListGroupsBelongToUserResponse.group_ids)
  return &group_ids_;
}

// -------------------------------------------------------------------

// MTS_DEBUG_ListGroupsBelongToGroupserverRequest

// required string groupserver_ip = 1;
inline bool MTS_DEBUG_ListGroupsBelongToGroupserverRequest::has_groupserver_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverRequest::set_has_groupserver_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverRequest::clear_has_groupserver_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverRequest::clear_groupserver_ip() {
  if (groupserver_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupserver_ip_->clear();
  }
  clear_has_groupserver_ip();
}
inline const ::std::string& MTS_DEBUG_ListGroupsBelongToGroupserverRequest::groupserver_ip() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverRequest.groupserver_ip)
  return *groupserver_ip_;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverRequest::set_groupserver_ip(const ::std::string& value) {
  set_has_groupserver_ip();
  if (groupserver_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupserver_ip_ = new ::std::string;
  }
  groupserver_ip_->assign(value);
  // @@protoc_insertion_point(field_set:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverRequest.groupserver_ip)
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverRequest::set_groupserver_ip(const char* value) {
  set_has_groupserver_ip();
  if (groupserver_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupserver_ip_ = new ::std::string;
  }
  groupserver_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverRequest.groupserver_ip)
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverRequest::set_groupserver_ip(const char* value, size_t size) {
  set_has_groupserver_ip();
  if (groupserver_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupserver_ip_ = new ::std::string;
  }
  groupserver_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverRequest.groupserver_ip)
}
inline ::std::string* MTS_DEBUG_ListGroupsBelongToGroupserverRequest::mutable_groupserver_ip() {
  set_has_groupserver_ip();
  if (groupserver_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupserver_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverRequest.groupserver_ip)
  return groupserver_ip_;
}
inline ::std::string* MTS_DEBUG_ListGroupsBelongToGroupserverRequest::release_groupserver_ip() {
  clear_has_groupserver_ip();
  if (groupserver_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = groupserver_ip_;
    groupserver_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverRequest::set_allocated_groupserver_ip(::std::string* groupserver_ip) {
  if (groupserver_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete groupserver_ip_;
  }
  if (groupserver_ip) {
    set_has_groupserver_ip();
    groupserver_ip_ = groupserver_ip;
  } else {
    clear_has_groupserver_ip();
    groupserver_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverRequest.groupserver_ip)
}

// optional uint32 groupserver_port = 2;
inline bool MTS_DEBUG_ListGroupsBelongToGroupserverRequest::has_groupserver_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverRequest::set_has_groupserver_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverRequest::clear_has_groupserver_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverRequest::clear_groupserver_port() {
  groupserver_port_ = 0u;
  clear_has_groupserver_port();
}
inline ::google::protobuf::uint32 MTS_DEBUG_ListGroupsBelongToGroupserverRequest::groupserver_port() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverRequest.groupserver_port)
  return groupserver_port_;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverRequest::set_groupserver_port(::google::protobuf::uint32 value) {
  set_has_groupserver_port();
  groupserver_port_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverRequest.groupserver_port)
}

// -------------------------------------------------------------------

// MTS_DEBUG_ListGroupsBelongToGroupserverResponse

// required string groupserver_ip = 1;
inline bool MTS_DEBUG_ListGroupsBelongToGroupserverResponse::has_groupserver_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverResponse::set_has_groupserver_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverResponse::clear_has_groupserver_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverResponse::clear_groupserver_ip() {
  if (groupserver_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupserver_ip_->clear();
  }
  clear_has_groupserver_ip();
}
inline const ::std::string& MTS_DEBUG_ListGroupsBelongToGroupserverResponse::groupserver_ip() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverResponse.groupserver_ip)
  return *groupserver_ip_;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverResponse::set_groupserver_ip(const ::std::string& value) {
  set_has_groupserver_ip();
  if (groupserver_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupserver_ip_ = new ::std::string;
  }
  groupserver_ip_->assign(value);
  // @@protoc_insertion_point(field_set:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverResponse.groupserver_ip)
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverResponse::set_groupserver_ip(const char* value) {
  set_has_groupserver_ip();
  if (groupserver_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupserver_ip_ = new ::std::string;
  }
  groupserver_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverResponse.groupserver_ip)
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverResponse::set_groupserver_ip(const char* value, size_t size) {
  set_has_groupserver_ip();
  if (groupserver_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupserver_ip_ = new ::std::string;
  }
  groupserver_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverResponse.groupserver_ip)
}
inline ::std::string* MTS_DEBUG_ListGroupsBelongToGroupserverResponse::mutable_groupserver_ip() {
  set_has_groupserver_ip();
  if (groupserver_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    groupserver_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverResponse.groupserver_ip)
  return groupserver_ip_;
}
inline ::std::string* MTS_DEBUG_ListGroupsBelongToGroupserverResponse::release_groupserver_ip() {
  clear_has_groupserver_ip();
  if (groupserver_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = groupserver_ip_;
    groupserver_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverResponse::set_allocated_groupserver_ip(::std::string* groupserver_ip) {
  if (groupserver_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete groupserver_ip_;
  }
  if (groupserver_ip) {
    set_has_groupserver_ip();
    groupserver_ip_ = groupserver_ip;
  } else {
    clear_has_groupserver_ip();
    groupserver_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverResponse.groupserver_ip)
}

// optional uint32 groupserver_port = 2;
inline bool MTS_DEBUG_ListGroupsBelongToGroupserverResponse::has_groupserver_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverResponse::set_has_groupserver_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverResponse::clear_has_groupserver_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverResponse::clear_groupserver_port() {
  groupserver_port_ = 0u;
  clear_has_groupserver_port();
}
inline ::google::protobuf::uint32 MTS_DEBUG_ListGroupsBelongToGroupserverResponse::groupserver_port() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverResponse.groupserver_port)
  return groupserver_port_;
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverResponse::set_groupserver_port(::google::protobuf::uint32 value) {
  set_has_groupserver_port();
  groupserver_port_ = value;
  // @@protoc_insertion_point(field_set:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverResponse.groupserver_port)
}

// repeated .tt_im_group.GroupId group_ids = 3;
inline int MTS_DEBUG_ListGroupsBelongToGroupserverResponse::group_ids_size() const {
  return group_ids_.size();
}
inline void MTS_DEBUG_ListGroupsBelongToGroupserverResponse::clear_group_ids() {
  group_ids_.Clear();
}
inline const ::tt_im_group::GroupId& MTS_DEBUG_ListGroupsBelongToGroupserverResponse::group_ids(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverResponse.group_ids)
  return group_ids_.Get(index);
}
inline ::tt_im_group::GroupId* MTS_DEBUG_ListGroupsBelongToGroupserverResponse::mutable_group_ids(int index) {
  // @@protoc_insertion_point(field_mutable:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverResponse.group_ids)
  return group_ids_.Mutable(index);
}
inline ::tt_im_group::GroupId* MTS_DEBUG_ListGroupsBelongToGroupserverResponse::add_group_ids() {
  // @@protoc_insertion_point(field_add:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverResponse.group_ids)
  return group_ids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >&
MTS_DEBUG_ListGroupsBelongToGroupserverResponse::group_ids() const {
  // @@protoc_insertion_point(field_list:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverResponse.group_ids)
  return group_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::tt_im_group::GroupId >*
MTS_DEBUG_ListGroupsBelongToGroupserverResponse::mutable_group_ids() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.MTS_DEBUG_ListGroupsBelongToGroupserverResponse.group_ids)
  return &group_ids_;
}

// -------------------------------------------------------------------

// MTS_DEBUG_ListUsersBelongToGroupRequest

// required .tt_im_group.GroupId group_id = 1;
inline bool MTS_DEBUG_ListUsersBelongToGroupRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MTS_DEBUG_ListUsersBelongToGroupRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MTS_DEBUG_ListUsersBelongToGroupRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MTS_DEBUG_ListUsersBelongToGroupRequest::clear_group_id() {
  if (group_id_ != NULL) group_id_->::tt_im_group::GroupId::Clear();
  clear_has_group_id();
}
inline const ::tt_im_group::GroupId& MTS_DEBUG_ListUsersBelongToGroupRequest::group_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ListUsersBelongToGroupRequest.group_id)
  return group_id_ != NULL ? *group_id_ : *default_instance_->group_id_;
}
inline ::tt_im_group::GroupId* MTS_DEBUG_ListUsersBelongToGroupRequest::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == NULL) group_id_ = new ::tt_im_group::GroupId;
  // @@protoc_insertion_point(field_mutable:tt_mts.MTS_DEBUG_ListUsersBelongToGroupRequest.group_id)
  return group_id_;
}
inline ::tt_im_group::GroupId* MTS_DEBUG_ListUsersBelongToGroupRequest::release_group_id() {
  clear_has_group_id();
  ::tt_im_group::GroupId* temp = group_id_;
  group_id_ = NULL;
  return temp;
}
inline void MTS_DEBUG_ListUsersBelongToGroupRequest::set_allocated_group_id(::tt_im_group::GroupId* group_id) {
  delete group_id_;
  group_id_ = group_id;
  if (group_id) {
    set_has_group_id();
  } else {
    clear_has_group_id();
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.MTS_DEBUG_ListUsersBelongToGroupRequest.group_id)
}

// -------------------------------------------------------------------

// MTS_DEBUG_ListUsersBelongToGroupResponse

// required .tt_im_group.GroupId group_id = 1;
inline bool MTS_DEBUG_ListUsersBelongToGroupResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MTS_DEBUG_ListUsersBelongToGroupResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MTS_DEBUG_ListUsersBelongToGroupResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MTS_DEBUG_ListUsersBelongToGroupResponse::clear_group_id() {
  if (group_id_ != NULL) group_id_->::tt_im_group::GroupId::Clear();
  clear_has_group_id();
}
inline const ::tt_im_group::GroupId& MTS_DEBUG_ListUsersBelongToGroupResponse::group_id() const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ListUsersBelongToGroupResponse.group_id)
  return group_id_ != NULL ? *group_id_ : *default_instance_->group_id_;
}
inline ::tt_im_group::GroupId* MTS_DEBUG_ListUsersBelongToGroupResponse::mutable_group_id() {
  set_has_group_id();
  if (group_id_ == NULL) group_id_ = new ::tt_im_group::GroupId;
  // @@protoc_insertion_point(field_mutable:tt_mts.MTS_DEBUG_ListUsersBelongToGroupResponse.group_id)
  return group_id_;
}
inline ::tt_im_group::GroupId* MTS_DEBUG_ListUsersBelongToGroupResponse::release_group_id() {
  clear_has_group_id();
  ::tt_im_group::GroupId* temp = group_id_;
  group_id_ = NULL;
  return temp;
}
inline void MTS_DEBUG_ListUsersBelongToGroupResponse::set_allocated_group_id(::tt_im_group::GroupId* group_id) {
  delete group_id_;
  group_id_ = group_id;
  if (group_id) {
    set_has_group_id();
  } else {
    clear_has_group_id();
  }
  // @@protoc_insertion_point(field_set_allocated:tt_mts.MTS_DEBUG_ListUsersBelongToGroupResponse.group_id)
}

// repeated .tt_mts.MTS_DEBUG_UserInfo users = 2;
inline int MTS_DEBUG_ListUsersBelongToGroupResponse::users_size() const {
  return users_.size();
}
inline void MTS_DEBUG_ListUsersBelongToGroupResponse::clear_users() {
  users_.Clear();
}
inline const ::tt_mts::MTS_DEBUG_UserInfo& MTS_DEBUG_ListUsersBelongToGroupResponse::users(int index) const {
  // @@protoc_insertion_point(field_get:tt_mts.MTS_DEBUG_ListUsersBelongToGroupResponse.users)
  return users_.Get(index);
}
inline ::tt_mts::MTS_DEBUG_UserInfo* MTS_DEBUG_ListUsersBelongToGroupResponse::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:tt_mts.MTS_DEBUG_ListUsersBelongToGroupResponse.users)
  return users_.Mutable(index);
}
inline ::tt_mts::MTS_DEBUG_UserInfo* MTS_DEBUG_ListUsersBelongToGroupResponse::add_users() {
  // @@protoc_insertion_point(field_add:tt_mts.MTS_DEBUG_ListUsersBelongToGroupResponse.users)
  return users_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_UserInfo >&
MTS_DEBUG_ListUsersBelongToGroupResponse::users() const {
  // @@protoc_insertion_point(field_list:tt_mts.MTS_DEBUG_ListUsersBelongToGroupResponse.users)
  return users_;
}
inline ::google::protobuf::RepeatedPtrField< ::tt_mts::MTS_DEBUG_UserInfo >*
MTS_DEBUG_ListUsersBelongToGroupResponse::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:tt_mts.MTS_DEBUG_ListUsersBelongToGroupResponse.users)
  return &users_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tt_mts

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tt_mts::COMMAND> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tt_mts::COMMAND>() {
  return ::tt_mts::COMMAND_descriptor();
}
template <> struct is_proto_enum< ::tt_mts::DEBUG_COMMAND> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tt_mts::DEBUG_COMMAND>() {
  return ::tt_mts::DEBUG_COMMAND_descriptor();
}
template <> struct is_proto_enum< ::tt_mts::MACRO_DEFINE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tt_mts::MACRO_DEFINE>() {
  return ::tt_mts::MACRO_DEFINE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageTransferServer_2eproto__INCLUDED
